/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/astronomia/data/deltat.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/data/deltat.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * DO NOT EDIT MANUALLY\n * Use `scripts/deltat.js` to generate file.\n * Datasets are from <https://maia.usno.navy.mil/ser7> and\n * <ftp://ftp.iers.org/products/eop/rapid/standard>\n */\nconst m = {\n  historic: {\n    table: [44, 43, 43, 41, 40, 39, 38, 37, 37, 36, 36, 36, 37, 37, 38, 37, 36, 36, 35, 35, 34, 33, 33, 32, 32, 31, 31, 30, 30, 29, 29, 29, 29, 29, 28, 28, 27, 27, 26, 26, 25, 25, 25, 26, 26, 26, 26, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 20, 20, 20, 20, 19, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21.1, 21, 21, 21, 20.9, 20.8, 20.7, 20.6, 20.4, 20.2, 20, 19.7, 19.4, 19.1, 18.7, 18.3, 17.8, 17.4, 17, 16.8, 16.6, 16.4, 16.1, 15.9, 15.7, 15.5, 15.3, 15, 14.7, 14.5, 14.3, 14.2, 14.1, 14.1, 14.1, 13.9, 13.7, 13.6, 13.5, 13.5, 13.5, 13.5, 13.4, 13.4, 13.4, 13.4, 13.3, 13.3, 13.2, 13.2, 13.2, 13.1, 13.1, 13.1, 13, 13.2, 13.3, 13.4, 13.5, 13.6, 13.7, 13.8, 13.9, 14, 14, 14.1, 14.1, 14.1, 14.1, 14.2, 14.3, 14.4, 14.4, 14.5, 14.6, 14.6, 14.7, 14.7, 14.7, 14.8, 14.8, 14.9, 14.9, 15, 15, 15.1, 15.2, 15.3, 15.4, 15.5, 15.6, 15.6, 15.6, 15.8, 15.9, 15.9, 15.9, 15.8, 15.7, 15.8, 15.7, 15.7, 15.7, 15.8, 15.9, 16.1, 16.1, 16, 15.9, 15.9, 15.7, 15.4, 15.3, 15.4, 15.5, 15.6, 15.6, 15.6, 15.6, 15.6, 15.6, 15.6, 15.5, 15.5, 15.4, 15.3, 15.2, 15.1, 14.9, 14.8, 14.6, 14.4, 14.3, 14.2, 14.1, 14.2, 14.2, 13.9, 13.7, 13.5, 13.3, 13.1, 13, 13.2, 13.2, 13.1, 13.1, 13.2, 13.3, 13.5, 13.5, 13.4, 13.2, 13.2, 13.1, 13.1, 13, 12.8, 12.6, 12.7, 12.6, 12.3, 12, 11.9, 11.8, 11.6, 11.4, 11.2, 11.1, 11.1, 11.1, 11.1, 11.1, 11.2, 11.1, 11.1, 11.2, 11.4, 11.5, 11.3, 11.2, 11.4, 11.7, 11.9, 11.9, 11.9, 11.8, 11.7, 11.8, 11.8, 11.8, 11.7, 11.6, 11.6, 11.5, 11.5, 11.4, 11.4, 11.3, 11.3, 11.13, 11.16, 10.94, 10.72, 10.29, 10.04, 9.94, 9.91, 9.88, 9.86, 9.72, 9.67, 9.66, 9.64, 9.51, 9.4, 9.21, 9, 8.6, 8.29, 7.95, 7.73, 7.59, 7.49, 7.36, 7.26, 7.1, 7, 6.89, 6.82, 6.73, 6.64, 6.39, 6.28, 6.25, 6.27, 6.25, 6.27, 6.22, 6.24, 6.22, 6.27, 6.3, 6.36, 6.35, 6.37, 6.32, 6.33, 6.33, 6.37, 6.37, 6.41, 6.4, 6.44, 6.46, 6.51, 6.48, 6.51, 6.53, 6.58, 6.55, 6.61, 6.69, 6.8, 6.84, 6.94, 7.03, 7.13, 7.15, 7.22, 7.26, 7.3, 7.23, 7.22, 7.21, 7.2, 6.99, 6.98, 7.19, 7.36, 7.35, 7.39, 7.41, 7.45, 7.36, 7.18, 6.95, 6.72, 6.45, 6.24, 5.92, 5.59, 5.15, 4.67, 4.11, 3.52, 2.94, 2.47, 1.97, 1.52, 1.04, 0.6, 0.11, -0.34, -0.82, -1.25, -1.7, -2.08, -2.48, -2.82, -3.19, -3.5, -3.84, -4.14, -4.43, -4.59, -4.79, -4.92, -5.09, -5.24, -5.36, -5.34, -5.37, -5.32, -5.34, -5.33, -5.4, -5.47, -5.58, -5.66, -5.74, -5.68, -5.69, -5.65, -5.67, -5.68, -5.73, -5.72, -5.78, -5.79, -5.86, -5.89, -6.01, -6.13, -6.28, -6.41, -6.53, -6.49, -6.5, -6.45, -6.41, -6.26, -6.11, -5.9, -5.63, -5.13, -4.68, -4.19, -3.72, -3.21, -2.7, -2.09, -1.48, -0.75, -0.08, 0.62, 1.26, 1.95, 2.59, 3.28, 3.92, 4.61, 5.2, 5.73, 6.29, 7, 7.68, 8.45, 9.13, 9.78, 10.38, 10.99, 11.64, 12.47, 13.23, 14, 14.69, 15.38, 16, 16.64, 17.19, 17.72, 18.19, 18.67, 19.13, 19.69, 20.14, 20.54, 20.86, 21.14, 21.41, 21.78, 22.06, 22.3, 22.51, 22.79, 23.01, 23.29, 23.46, 23.55, 23.63, 23.8, 23.95, 24.25, 24.39, 24.42, 24.34, 24.22, 24.1, 24.08, 24.02, 24.04, 23.98, 23.91, 23.89, 23.95, 23.93, 23.92, 23.88, 23.94, 23.91, 23.82, 23.76, 23.87, 23.91, 23.95, 23.96, 24, 24.04, 24.2, 24.35, 24.61, 24.82, 25.09, 25.3, 25.56, 25.77, 26.05, 26.27, 26.54, 26.76, 27.04, 27.27, 27.55, 27.77, 28.03, 28.25, 28.5, 28.7, 28.95, 29.15, 29.38, 29.57, 29.8, 29.97, 30.19, 30.36, 30.57, 30.72, 30.93, 31.07, 31.24, 31.349, 31.516, 31.677, 31.923, 32.166, 32.449, 32.671, 32.919, 33.15, 33.397, 33.584, 33.804, 33.992, 34.24, 34.466, 34.731, 35.03, 35.4, 35.738, 36.147, 36.546, 36.995, 37.429, 37.879, 38.291, 38.753, 39.204, 39.707, 40.182, 40.706, 41.17, 41.686, 42.227, 42.825, 43.373, 43.959, 44.486, 44.997, 45.477, 45.983, 46.458, 46.997, 47.521, 48.034, 48.535, 49.099, 49.589, 50.102, 50.54, 50.975, 51.382, 51.81, 52.168, 52.572, 52.957, 53.434, 53.789, 54.087],\n    first: 1657,\n    last: 1984.5\n  },\n  data: {\n    table: [43.4724372, 43.5648351, 43.6736863, 43.7782156, 43.8763273, 43.9562443, 44.0314956, 44.1131788, 44.1982187, 44.2951747, 44.3936471, 44.4840562, 44.5646335, 44.6425099, 44.7385767, 44.8370135, 44.9302138, 44.9986146, 45.0583549, 45.1283911, 45.2063835, 45.2980068, 45.3897017, 45.476138, 45.5632485, 45.6450189, 45.7374593, 45.8283721, 45.9132976, 45.9819705, 46.0407484, 46.1067084, 46.1825041, 46.2788561, 46.3713351, 46.4567207, 46.544486, 46.6310899, 46.7302231, 46.8283588, 46.9247443, 46.9969757, 47.0709148, 47.1450515, 47.2361542, 47.3413241, 47.4319364, 47.5213815, 47.6049313, 47.6837388, 47.7781381, 47.8770756, 47.9687104, 48.0348257, 48.0942021, 48.1608205, 48.2460028, 48.3438529, 48.4355405, 48.5344163, 48.6324506, 48.7293718, 48.8365414, 48.9353232, 49.0318781, 49.1013205, 49.1590844, 49.2285534, 49.3069683, 49.4017939, 49.4945263, 49.5861495, 49.6804907, 49.7602264, 49.8555805, 49.9489224, 50.0346777, 50.1018531, 50.1621723, 50.2260014, 50.2967905, 50.3831254, 50.4598772, 50.5387068, 50.6160484, 50.6865941, 50.7658362, 50.8453698, 50.918672, 50.9761148, 51.0278017, 51.084323, 51.1537928, 51.2318645, 51.306308, 51.3807849, 51.4526292, 51.5160394, 51.5985479, 51.680924, 51.7572854, 51.8133335, 51.8532385, 51.9014358, 51.9603433, 52.0328072, 52.0984957, 52.1667826, 52.2316418, 52.2938376, 52.3679897, 52.4465221, 52.5179552, 52.5751485, 52.6178012, 52.666816, 52.7340036, 52.8055792, 52.8792189, 52.9564838, 53.0444971, 53.126769, 53.2196749, 53.3024139, 53.3746645, 53.4335399, 53.4778015, 53.5299937, 53.5845392, 53.6522628, 53.7255844, 53.7882418, 53.8366625, 53.8829665, 53.9442904, 54.0042478, 54.0536342, 54.085644, 54.1084122, 54.1462942, 54.1913988, 54.2452023, 54.2957622, 54.3427024, 54.3910864, 54.4319877, 54.4897699, 54.545636, 54.597741, 54.6354962, 54.6532352, 54.677594, 54.7173643, 54.7740957, 54.8253023, 54.8712512, 54.916146, 54.9580535, 54.9997186, 55.047571, 55.0911778, 55.1132386, 55.132774, 55.1532423, 55.1898003, 55.2415531, 55.283803, 55.3222105, 55.3612676, 55.406262, 55.4628719, 55.5110909, 55.5523777, 55.5811877, 55.6004372, 55.626202, 55.6656271, 55.7167999, 55.7698097, 55.8196609, 55.8615028, 55.9129883, 55.9663474, 56.0220102, 56.0700015, 56.0939035, 56.110463, 56.1313736, 56.1610839, 56.2068432, 56.2582503, 56.3000349, 56.339902, 56.3789995, 56.4282839, 56.4803947, 56.5352164, 56.5697487, 56.5983102, 56.6328326, 56.6738814, 56.7332116, 56.7971596, 56.8552701, 56.9111378, 56.9754725, 57.0470772, 57.1136128, 57.173831, 57.2226068, 57.259731, 57.3072742, 57.3643368, 57.4334281, 57.5015747, 57.5653127, 57.6333396, 57.6972844, 57.7710774, 57.8407427, 57.9057801, 57.9575663, 57.9974929, 58.0425517, 58.1043319, 58.1679128, 58.2389092, 58.3091659, 58.3833021, 58.4536748, 58.5401438, 58.6227714, 58.6916662, 58.7409628, 58.7836189, 58.8405543, 58.898579, 58.9713678, 59.043837, 59.1218414, 59.2002687, 59.274737, 59.3574134, 59.4433827, 59.5242416, 59.5849787, 59.6343497, 59.6927827, 59.758805, 59.8386448, 59.9110567, 59.9844537, 60.056435, 60.123065, 60.2042185, 60.2803745, 60.3530352, 60.4011891, 60.4439959, 60.4900257, 60.5578054, 60.6324446, 60.7058569, 60.7853482, 60.8663504, 60.9386672, 61.0276757, 61.1103448, 61.1870458, 61.2453891, 61.2881024, 61.3377799, 61.4036165, 61.4760366, 61.5524599, 61.6286593, 61.6845819, 61.743306, 61.8132425, 61.8823203, 61.9496762, 61.9968743, 62.0342938, 62.0714108, 62.1202315, 62.1809508, 62.2382046, 62.2950486, 62.3506479, 62.3995381, 62.475395, 62.5463091, 62.6136031, 62.6570739, 62.6941742, 62.7383271, 62.7926305, 62.8566986, 62.9145607, 62.9658689, 63.0216632, 63.0807052, 63.1461718, 63.2052946, 63.2599441, 63.2844088, 63.2961369, 63.3126092, 63.3421622, 63.3871303, 63.4339302, 63.4673369, 63.4978642, 63.5319327, 63.5679441, 63.6104432, 63.6444291, 63.6641815, 63.6739403, 63.692603, 63.7147066, 63.7518055, 63.792717, 63.8285221, 63.8556871, 63.8803854, 63.9075025, 63.9392787, 63.9690744, 63.9798604, 63.9833077, 63.9938011, 64.0093384, 64.0399621, 64.0670429, 64.0907881, 64.1068077, 64.1282125, 64.1584211, 64.1832722, 64.2093975, 64.2116628, 64.2073173, 64.2115565, 64.2222858, 64.2499625, 64.2760973, 64.2998037, 64.3191858, 64.345013, 64.3734584, 64.3943291, 64.4151156, 64.4132064, 64.4118464, 64.4096536, 64.4167832, 64.43292, 64.4510529, 64.4734276, 64.4893377, 64.5053342, 64.5269189, 64.5470942, 64.5596729, 64.5512293, 64.5370906, 64.5359472, 64.5414947, 64.5543634, 64.5654298, 64.5736111, 64.5891142, 64.6014759, 64.6176147, 64.6374397, 64.6548674, 64.6530021, 64.6379271, 64.637161, 64.6399614, 64.6543152, 64.6723164, 64.6876311, 64.7051905, 64.7313433, 64.7575312, 64.7811143, 64.8000929, 64.7994561, 64.7876424, 64.783095, 64.7920604, 64.8096421, 64.8310888, 64.8451826, 64.8597013, 64.8849929, 64.9174991, 64.9480298, 64.9793881, 64.9894772, 65.0028155, 65.0138193, 65.0371432, 65.0772597, 65.112197, 65.1464034, 65.1832638, 65.2145358, 65.2493713, 65.2920645, 65.3279403, 65.3413366, 65.3451881, 65.34964, 65.3711307, 65.3971998, 65.4295547, 65.4573487, 65.486752, 65.5152012, 65.5449916, 65.5780768, 65.612728, 65.6287505, 65.6370091, 65.6493375, 65.6759928, 65.7096966, 65.746092, 65.7768362, 65.8024614, 65.8236695, 65.8595036, 65.8973008, 65.932291, 65.950911, 65.9534105, 65.962833, 65.9838647, 66.0146733, 66.042049, 66.0699217, 66.0961343, 66.1310116, 66.1682713, 66.2071627, 66.2355846, 66.2408549, 66.2335423, 66.2349107, 66.2441095, 66.2751123, 66.3054334, 66.3245568, 66.3405713, 66.3624433, 66.3957101, 66.428903, 66.4618675, 66.4748837, 66.4751281, 66.4828678, 66.5056165, 66.5382912, 66.5705628, 66.6030198, 66.6339689, 66.6569117, 66.6925011, 66.7288729, 66.7578719, 66.7707625, 66.7740427, 66.7846288, 66.810324, 66.840048, 66.8778601, 66.9069091, 66.944259, 66.9762508, 67.0258126, 67.0716286, 67.1100184, 67.1266401, 67.1331391, 67.145797, 67.17174, 67.2091069, 67.2459812, 67.2810383, 67.3136452, 67.3456968, 67.389003, 67.4318433, 67.4666209, 67.4858459, 67.4989147, 67.5110936, 67.5352658, 67.571103, 67.6070253, 67.6439167, 67.6765272, 67.7116693, 67.7590634, 67.8011542, 67.840213, 67.8606318, 67.8821576, 67.9120101, 67.9546462, 68.0054839, 68.051412, 68.1024205, 68.1577127, 68.2043653, 68.2664507, 68.3188171, 68.3703564, 68.3964356, 68.4094472, 68.4304611, 68.4629791, 68.507818, 68.5537018, 68.5927179, 68.6298107, 68.6670627, 68.7135208, 68.7622755, 68.8032843, 68.8244838, 68.8373427, 68.847693, 68.8688567, 68.9005814, 68.9354999, 68.9676423, 68.9875354, 69.0175527, 69.0499081, 69.0823433, 69.1070034, 69.1134027, 69.1141898, 69.1207203, 69.1355578, 69.16459, 69.1964228, 69.2201632, 69.2451564, 69.2732758, 69.3031979, 69.3325675, 69.3540507, 69.3581722, 69.3441594, 69.3376329, 69.3377424, 69.3432191, 69.3540144, 69.3611554, 69.3751703, 69.3889904, 69.4091639, 69.4264662, 69.4386335, 69.4241335, 69.3921241, 69.3693422, 69.3574782, 69.3593242, 69.3630244, 69.359334, 69.3510133, 69.3537917, 69.3582217, 69.367306, 69.3678649, 69.3514228, 69.3273414, 69.3033273, 69.2892463, 69.2880419, 69.2908014, 69.2944974, 69.2913953, 69.286149, 69.2835153, 69.2815422, 69.2806375, 69.2553511, 69.2125426, 69.1847287, 69.17207, 69.1691531, 69.173303, 69.1698064, 69.1589095, 69.1556275, 69.1672253, 69.1771384],\n    first: 1973.0849315068492,\n    firstYM: [1973, 2],\n    last: 2023.3287671232877,\n    lastYM: [2023, 5]\n  },\n  prediction: {\n    table: [67.87818, 67.96817999999999, 68.02817999999999, 68.04818, 68.12818, 68.21817999999999, 68.26818, 68.28818, 68.36818, 68.44818, 68.50818, 68.51818, 68.59818, 68.68818, 68.73818, 68.74817999999999, 68.82818, 68.91817999999999, 68.96817999999999, 68.98818, 69.06818, 69.14818, 69.20818, 69.22818, 69.30818, 69.39818, 69.46817999999999, 69.48818, 69.57818, 69.66817999999999, 69.73818, 69.75818, 69.85817999999999, 69.95818, 70.02817999999999, 70.05818, 70.15818, 70.25818, 70.33818, 70.36818, 70.46817999999999],\n    first: 2022,\n    last: 2032\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (m);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/data/deltat.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/angle.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/angle.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   hav: () => (/* binding */ hav),\n/* harmony export */   minSep: () => (/* binding */ minSep),\n/* harmony export */   minSepHav: () => (/* binding */ minSepHav),\n/* harmony export */   minSepPauwels: () => (/* binding */ minSepPauwels),\n/* harmony export */   minSepRect: () => (/* binding */ minSepRect),\n/* harmony export */   relativePosition: () => (/* binding */ relativePosition),\n/* harmony export */   sep: () => (/* binding */ sep),\n/* harmony export */   sepHav: () => (/* binding */ sepHav),\n/* harmony export */   sepPauwels: () => (/* binding */ sepPauwels)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module angle\n */\n/**\n * Angle: Chapter 17: Angular Separation.\n *\n * Functions in this package are useful for Ecliptic, Equatorial, or any\n * similar coordinate frame.  To avoid suggestion of a particular frame,\n * function parameters are specified simply as \"r1, d1\" to correspond to a\n * right ascenscion, declination pair or to a longitude, latitude pair.\n *\n * In function Sep, Meeus recommends 10 arc min as a threshold.  This\n * value is in package base as base.SmallAngle because it has general utility.\n *\n * All angles are in radians.\n */\n\n // eslint-disable-line no-unused-vars\n\nconst { abs, acos, asin, atan2, cos, hypot, sin, sqrt, tan } = Math\n\n/**\n * `sep` returns the angular separation between two celestial bodies.\n *\n * The algorithm is numerically naïve, and while patched up a bit for\n * small separations, remains unstable for separations near π.\n *\n * @param {Coord} c1 - coordinate of celestial body 1\n * @param {Coord} c2 - coordinate of celestial body 2\n * @return {Number} angular separation between two celestial bodies\n */\nfunction sep (c1, c2) {\n  const [sind1, cosd1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c1.dec)\n  const [sind2, cosd2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c2.dec)\n  const cd = sind1 * sind2 + cosd1 * cosd2 * cos(c1.ra - c2.ra) // (17.1) p. 109\n  if (cd < _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CosSmallAngle) {\n    return acos(cd)\n  } else {\n    const cosd = cos((c2.dec + c1.dec) / 2) // average dec of two bodies\n    return hypot((c2.ra - c1.ra) * cosd, c2.dec - c1.dec) // (17.2) p. 109\n  }\n}\n\n/**\n * `minSep` returns the minimum separation between two moving objects.\n *\n * The motion is represented as an ephemeris of three rows, equally spaced\n * in time.  Jd1, jd3 are julian day times of the first and last rows.\n * R1, d1, r2, d2 are coordinates at the three times.  They must each be\n * slices of length 3.0\n *\n * Result is obtained by computing separation at each of the three times\n * and interpolating a minimum.  This may be invalid for sufficiently close\n * approaches.\n *\n * @throws Error\n * @param {Number} jd1 - Julian day - time at cs1[0], cs2[0]\n * @param {Number} jd3 - Julian day - time at cs1[2], cs2[2]\n * @param {Coord[]} cs1 - 3 coordinates of moving object 1\n * @param {Coord[]} cs2 - 3 coordinates of moving object 2\n * @param {function} [fnSep] - alternative `sep` function e.g. `angle.sepPauwels`, `angle.sepHav`\n * @return {Number} angular separation between two celestial bodies\n */\nfunction minSep (jd1, jd3, cs1, cs2, fnSep) {\n  fnSep = fnSep || sep\n  if (cs1.length !== 3 || cs2.length !== 3) {\n    throw _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].errorNot3\n  }\n  const y = new Array(3)\n  cs1.forEach((c, x) => {\n    y[x] = sep(cs1[x], cs2[x])\n  })\n  const d3 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len3(jd1, jd3, y)\n  const dMin = d3.extremum()[1]\n  return dMin\n}\n\n/**\n * `minSepRect` returns the minimum separation between two moving objects.\n *\n * Like `minSep`, but using a method of rectangular coordinates that gives\n * accurate results even for close approaches.\n *\n * @throws Error\n * @param {Number} jd1 - Julian day - time at cs1[0], cs2[0]\n * @param {Number} jd3 - Julian day - time at cs1[2], cs2[2]\n * @param {Coord[]} cs1 - 3 coordinates of moving object 1\n * @param {Coord[]} cs2 - 3 coordinates of moving object 2\n * @return {Number} angular separation between two celestial bodies\n */\nfunction minSepRect (jd1, jd3, cs1, cs2) {\n  if (cs1.length !== 3 || cs2.length !== 3) {\n    throw _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ErrorNot3\n  }\n  const uv = function (c1, c2) {\n    const [sind1, cosd1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c1.dec)\n    const Δr = c2.ra - c1.ra\n    const tanΔr = tan(Δr)\n    const tanhΔr = tan(Δr / 2)\n    const K = 1 / (1 + sind1 * sind1 * tanΔr * tanhΔr)\n    const sinΔd = sin(c2.dec - c1.dec)\n    const u = -K * (1 - (sind1 / cosd1) * sinΔd) * cosd1 * tanΔr\n    const v = K * (sinΔd + sind1 * cosd1 * tanΔr * tanhΔr)\n    return [u, v]\n  }\n  const us = new Array(3).fill(0)\n  const vs = new Array(3).fill(0)\n  cs1.forEach((c, x) => {\n    [us[x], vs[x]] = uv(cs1[x], cs2[x])\n  })\n  const u3 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len3(-1, 1, us) // if line throws then bug not caller's fault.\n  const v3 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len3(-1, 1, vs) // if line throws then bug not caller's fault.\n  const up0 = (us[2] - us[0]) / 2\n  const vp0 = (vs[2] - vs[0]) / 2\n  const up1 = us[0] + us[2] - 2 * us[1]\n  const vp1 = vs[0] + vs[2] - 2 * vs[1]\n  const up = up0\n  const vp = vp0\n  let dn = -(us[1] * up + vs[1] * vp) / (up * up + vp * vp)\n  let n = dn\n  let u\n  let v\n  for (let limit = 0; limit < 10; limit++) {\n    u = u3.interpolateN(n)\n    v = v3.interpolateN(n)\n    if (abs(dn) < 1e-5) {\n      return hypot(u, v) // success\n    }\n    const up = up0 + n * up1\n    const vp = vp0 + n * vp1\n    dn = -(u * up + v * vp) / (up * up + vp * vp)\n    n += dn\n  }\n  throw new Error('minSepRect: failure to converge')\n}\n\n/**\n * haversine function (17.5) p. 115\n */\nfunction hav (a) {\n  return 0.5 * (1 - Math.cos(a))\n}\n\n/**\n * `sepHav` returns the angular separation between two celestial bodies.\n *\n * The algorithm uses the haversine function and is superior to the naïve\n * algorithm of the Sep function.\n *\n * @param {Coord} c1 - coordinate of celestial body 1\n * @param {Coord} c2 - coordinate of celestial body 2\n * @return {Number} angular separation between two celestial bodies\n */\nfunction sepHav (c1, c2) {\n  // using (17.5) p. 115\n  return 2 * asin(sqrt(hav(c2.dec - c1.dec) +\n    cos(c1.dec) * cos(c2.dec) * hav(c2.ra - c1.ra)))\n}\n\n/**\n * Same as `minSep` but uses function `sepHav` to return the minimum separation\n * between two moving objects.\n */\nfunction minSepHav (jd1, jd3, cs1, cs2) {\n  return minSep(jd1, jd3, cs1, cs2, sepHav)\n}\n\n/**\n * `sepPauwels` returns the angular separation between two celestial bodies.\n *\n * The algorithm is a numerically stable form of that used in `sep`.\n *\n * @param {Coord} c1 - coordinate of celestial body 1\n * @param {Coord} c2 - coordinate of celestial body 2\n * @return {Number} angular separation between two celestial bodies\n */\nfunction sepPauwels (c1, c2) {\n  const [sind1, cosd1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c1.dec)\n  const [sind2, cosd2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c2.dec)\n  const cosdr = cos(c2.ra - c1.ra)\n  const x = cosd1 * sind2 - sind1 * cosd2 * cosdr\n  const y = cosd2 * sin(c2.ra - c1.ra)\n  const z = sind1 * sind2 + cosd1 * cosd2 * cosdr\n  return atan2(hypot(x, y), z)\n}\n\n/**\n * Same as `minSep` but uses function `sepPauwels` to return the minimum\n * separation between two moving objects.\n */\nfunction minSepPauwels (jd1, jd3, cs1, cs2) {\n  return minSep(jd1, jd3, cs1, cs2, sepPauwels)\n}\n\n/**\n * RelativePosition returns the position angle of one body with respect to\n * another.\n *\n * The position angle result `p` is measured counter-clockwise from North.\n * If negative then `p` is in the range of 90° ... 270°\n *\n * ````\n *                  North\n *                    |\n *             (p)  ..|\n *                 .  |\n *                V   |\n *    c1 x------------x c2\n *                    |\n * ````\n *\n * @param {Coord} c1 - coordinate of celestial body 1\n * @param {Coord} c2 - coordinate of celestial body 2\n * @return {Number} position angle (p)\n */\nfunction relativePosition (c1, c2) {\n  const [sinΔr, cosΔr] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c1.ra - c2.ra)\n  const [sind2, cosd2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(c2.dec)\n  const p = atan2(sinΔr, cosd2 * tan(c1.dec) - sind2 * cosΔr)\n  return p\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  sep,\n  minSep,\n  minSepRect,\n  hav,\n  sepHav,\n  minSepHav,\n  sepPauwels,\n  minSepPauwels,\n  relativePosition\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/angle.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/apparent.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/apparent.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aberration: () => (/* binding */ aberration),\n/* harmony export */   aberrationRonVondrak: () => (/* binding */ aberrationRonVondrak),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   eclipticAberration: () => (/* binding */ eclipticAberration),\n/* harmony export */   nutation: () => (/* binding */ nutation),\n/* harmony export */   perihelion: () => (/* binding */ perihelion),\n/* harmony export */   position: () => (/* binding */ position),\n/* harmony export */   positionRonVondrak: () => (/* binding */ positionRonVondrak)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _precess_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precess.js */ \"./node_modules/astronomia/src/precess.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module apparent\n */\n/**\n * Apparent: Chapter 23, Apparent Place of a Star\n */\n\n\n\n\n\n\nconst { cos, tan } = Math\n\n/**\n * Nutation returns corrections due to nutation for equatorial coordinates\n * of an object.\n *\n * Results are invalid for objects very near the celestial poles.\n * @param {Number} α - right ascension\n * @param {Number} δ - declination\n * @param {Number} jd - Julian Day\n * @return {Number[]} [Δα1, Δδ1] -\n*/\nfunction nutation (α, δ, jd) { // (α, δ, jd float64)  (Δα1, Δδ1 float64)\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].meanObliquity(jd)\n  const [sinε, cosε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].nutation(jd)\n  const [sinα, cosα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α)\n  const tanδ = tan(δ)\n  // (23.1) p. 151\n  const Δα1 = (cosε + sinε * sinα * tanδ) * Δψ - cosα * tanδ * Δε\n  const Δδ1 = sinε * cosα * Δψ + sinα * Δε\n  return [Δα1, Δδ1]\n}\n\n/**\n * κ is the constant of aberration in radians.\n */\nconst κ = 20.49552 * Math.PI / 180 / 3600\n\n/**\n * longitude of perihelian of Earth's orbit.\n */\nfunction perihelion (T) { // (T float64)  float64\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 102.93735, 1.71946, 0.00046) * Math.PI / 180\n}\n\n/**\n * EclipticAberration returns corrections due to aberration for ecliptic\n * coordinates of an object.\n */\nfunction eclipticAberration (λ, β, jd) { // (λ, β, jd float64)  (Δλ, Δβ float64)\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jd)\n  const { lon, ano } = _solar_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].trueLongitude(T) // eslint-disable-line no-unused-vars\n  const e = _solar_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].eccentricity(T)\n  const π = perihelion(T)\n  const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β)\n  const [ssλ, csλ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lon - λ)\n  const [sinπλ, cosπλ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(π - λ)\n  // (23.2) p. 151\n  const Δλ = κ * (e * cosπλ - csλ) / cβ\n  const Δβ = -κ * sβ * (ssλ - e * sinπλ)\n  return [Δλ, Δβ]\n}\n\n/**\n * Aberration returns corrections due to aberration for equatorial\n * coordinates of an object.\n */\nfunction aberration (α, δ, jd) { // (α, δ, jd float64)  (Δα2, Δδ2 float64)\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].meanObliquity(jd)\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jd)\n  const { lon, ano } = _solar_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].trueLongitude(T) // eslint-disable-line no-unused-vars\n  const e = _solar_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].eccentricity(T)\n  const π = perihelion(T)\n  const [sinα, cosα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α)\n  const [sinδ, cosδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const [sins, coss] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lon)\n  const [sinπ, cosπ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(π)\n  const cosε = cos(ε)\n  const q1 = cosα * cosε\n  // (23.3) p. 152\n  const Δα2 = κ * (e * (q1 * cosπ + sinα * sinπ) - (q1 * coss + sinα * sins)) / cosδ\n  const q2 = cosε * (tan(ε) * cosδ - sinα * sinδ)\n  const q3 = cosα * sinδ\n  const Δδ2 = κ * (e * (cosπ * q2 + sinπ * q3) - (coss * q2 + sins * q3))\n  return [Δα2, Δδ2]\n}\n\n/**\n * Position computes the apparent position of an object.\n *\n * Position is computed for equatorial coordinates in eqFrom, considering\n * proper motion, precession, nutation, and aberration.  Result is in\n * eqTo.  EqFrom and eqTo must be non-nil, but may point to the same struct.\n */\nfunction position (eqFrom, epochFrom, epochTo, mα, mδ) { // (eqFrom, eqTo *coord.Equatorial, epochFrom, epochTo float64, mα sexa.HourAngle, mδ sexa.Angle)  *coord.Equatorial\n  const eqTo = _precess_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].position(eqFrom, epochFrom, epochTo, mα, mδ)\n  const jd = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianYearToJDE(epochTo)\n  const [Δα1, Δδ1] = nutation(eqTo.ra, eqTo.dec, jd)\n  const [Δα2, Δδ2] = aberration(eqTo.ra, eqTo.dec, jd)\n  eqTo.ra += Δα1 + Δα2\n  eqTo.dec += Δδ1 + Δδ2\n  return eqTo\n}\n\n/**\n * AberrationRonVondrak uses the Ron-Vondrák expression to compute corrections\n * due to aberration for equatorial coordinates of an object.\n */\nfunction aberrationRonVondrak (α, δ, jd) { // (α, δ, jd float64)  (Δα, Δδ float64)\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jd)\n  const r = {\n    T,\n    L2: 3.1761467 + 1021.3285546 * T,\n    L3: 1.7534703 + 628.3075849 * T,\n    L4: 6.2034809 + 334.0612431 * T,\n    L5: 0.5995465 + 52.9690965 * T,\n    L6: 0.8740168 + 21.3299095 * T,\n    L7: 5.4812939 + 7.4781599 * T,\n    L8: 5.3118863 + 3.8133036 * T,\n    Lp: 3.8103444 + 8399.6847337 * T,\n    D: 5.1984667 + 7771.3771486 * T,\n    Mp: 2.3555559 + 8328.6914289 * T,\n    F: 1.6279052 + 8433.4661601 * T\n  }\n  let Xp = 0\n  let Yp = 0\n  let Zp = 0\n  // sum smaller terms first\n  for (let i = 35; i >= 0; i--) {\n    const [x, y, z] = rvTerm[i](r)\n    Xp += x\n    Yp += y\n    Zp += z\n  }\n  const [sinα, cosα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α)\n  const [sinδ, cosδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  // (23.4) p. 156\n  return [(Yp * cosα - Xp * sinα) / (c * cosδ), -((Xp * cosα + Yp * sinα) * sinδ - Zp * cosδ) / c]\n}\n\nconst c = 17314463350 // unit is 1e-8 AU / day\n\n// r = {T, L2, L3, L4, L5, L6, L7, L8, Lp, D, Mp, F}\nconst rvTerm = [\n  function (r) { // 1\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L3)\n    return [(-1719914 - 2 * r.T) * sinA - 25 * cosA,\n      (25 - 13 * r.T) * sinA + (1578089 + 156 * r.T) * cosA,\n      (10 + 32 * r.T) * sinA + (684185 - 358 * r.T) * cosA\n    ]\n  },\n  function (r) { // 2\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L3)\n    return [(6434 + 141 * r.T) * sinA + (28007 - 107 * r.T) * cosA,\n      (25697 - 95 * r.T) * sinA + (-5904 - 130 * r.T) * cosA,\n      (11141 - 48 * r.T) * sinA + (-2559 - 55 * r.T) * cosA\n    ]\n  },\n  function (r) { // 3\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L5)\n    return [715 * sinA, 6 * sinA - 657 * cosA, -15 * sinA - 282 * cosA]\n  },\n  function (r) { // 4\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.Lp)\n    return [715 * sinA, -656 * cosA, -285 * cosA]\n  },\n  function (r) { // 5\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * r.L3)\n    return [(486 - 5 * r.T) * sinA + (-236 - 4 * r.T) * cosA,\n      (-216 - 4 * r.T) * sinA + (-446 + 5 * r.T) * cosA, -94 * sinA - 193 * cosA\n    ]\n  },\n  function (r) { // 6\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L6)\n    return [159 * sinA, 2 * sinA - 147 * cosA, -6 * sinA - 61 * cosA]\n  },\n  function (r) { // 7\n    const cosA = Math.cos(r.F)\n    return [0, 26 * cosA, -59 * cosA]\n  },\n  function (r) { // 8\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.Lp + r.Mp)\n    return [39 * sinA, -36 * cosA, -16 * cosA]\n  },\n  function (r) { // 9\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L5)\n    return [33 * sinA - 10 * cosA, -9 * sinA - 30 * cosA, -5 * sinA - 13 * cosA]\n  },\n  function (r) { // 10\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L3 - r.L5)\n    return [31 * sinA + cosA, sinA - 28 * cosA, -12 * cosA]\n  },\n  function (r) { // 11\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * r.L3 - 8 * r.L4 + 3 * r.L5)\n    return [8 * sinA - 28 * cosA, 25 * sinA + 8 * cosA, 11 * sinA + 3 * cosA]\n  },\n  function (r) { // 12\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(5 * r.L3 - 8 * r.L4 + 3 * r.L5)\n    return [8 * sinA - 28 * cosA, -25 * sinA - 8 * cosA, -11 * sinA + -3 * cosA]\n  },\n  function (r) { // 13\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L2 - r.L3)\n    return [21 * sinA, -19 * cosA, -8 * cosA]\n  },\n  function (r) { // 14\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L2)\n    return [-19 * sinA, 17 * cosA, 8 * cosA]\n  },\n  function (r) { // 15\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L7)\n    return [17 * sinA, -16 * cosA, -7 * cosA]\n  },\n  function (r) { // 16\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L3 - 2 * r.L5)\n    return [16 * sinA, 15 * cosA, sinA + 7 * cosA]\n  },\n  function (r) { // 17\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L8)\n    return [16 * sinA, sinA - 15 * cosA, -3 * sinA - 6 * cosA]\n  },\n  function (r) { // 18\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L3 + r.L5)\n    return [11 * sinA - cosA, -sinA - 10 * cosA, -sinA - 5 * cosA]\n  },\n  function (r) { // 19\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L2 - 2 * r.L3)\n    return [-11 * cosA, -10 * sinA, -4 * sinA]\n  },\n  function (r) { // 20\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L3 - r.L5)\n    return [-11 * sinA - 2 * cosA, -2 * sinA + 9 * cosA, -sinA + 4 * cosA]\n  },\n  function (r) { // 21\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(4 * r.L3)\n    return [-7 * sinA - 8 * cosA, -8 * sinA + 6 * cosA, -3 * sinA + 3 * cosA]\n  },\n  function (r) { // 22\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * r.L3 - 2 * r.L5)\n    return [-10 * sinA, 9 * cosA, 4 * cosA]\n  },\n  function (r) { // 23\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.L2 - 2 * r.L3)\n    return [-9 * sinA, -9 * cosA, -4 * cosA]\n  },\n  function (r) { // 24\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L2 - 3 * r.L3)\n    return [-9 * sinA, -8 * cosA, -4 * cosA]\n  },\n  function (r) { // 25\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L6)\n    return [-9 * cosA, -8 * sinA, -3 * sinA]\n  },\n  function (r) { // 26\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L2 - 4 * r.L3)\n    return [-9 * cosA, 8 * sinA, 3 * sinA]\n  },\n  function (r) { // 27\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * r.L3 - 2 * r.L4)\n    return [8 * sinA, -8 * cosA, -3 * cosA]\n  },\n  function (r) { // 28\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.Lp + 2 * r.D - r.Mp)\n    return [8 * sinA, -7 * cosA, -3 * cosA]\n  },\n  function (r) { // 29\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(8 * r.L2 - 12 * r.L3)\n    return [-4 * sinA - 7 * cosA, -6 * sinA + 4 * cosA, -3 * sinA + 2 * cosA]\n  },\n  function (r) { // 30\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(8 * r.L2 - 14 * r.L3)\n    return [-4 * sinA - 7 * cosA, 6 * sinA - 4 * cosA, 3 * sinA - 2 * cosA]\n  },\n  function (r) { // 31\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L4)\n    return [-6 * sinA - 5 * cosA, -4 * sinA + 5 * cosA, -2 * sinA + 2 * cosA]\n  },\n  function (r) { // 32\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * r.L2 - 4 * r.L3)\n    return [-sinA - cosA, -2 * sinA - 7 * cosA, sinA - 4 * cosA]\n  },\n  function (r) { // 33\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L3 - 2 * r.L5)\n    return [4 * sinA - 6 * cosA, -5 * sinA - 4 * cosA, -2 * sinA - 2 * cosA]\n  },\n  function (r) { // 34\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * r.L2 - 3 * r.L3)\n    return [-7 * cosA, -6 * sinA, -3 * sinA]\n  },\n  function (r) { // 35\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * r.L3 - 2 * r.L4)\n    return [5 * sinA - 5 * cosA, -4 * sinA - 5 * cosA, -2 * sinA - 2 * cosA]\n  },\n  function (r) { // 36\n    const [sinA, cosA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r.Lp - 2 * r.D)\n    return [5 * sinA, -5 * cosA, -2 * cosA]\n  }\n]\n\n/**\n * PositionRonVondrak computes the apparent position of an object using\n * the Ron-Vondrák expression for aberration.\n *\n * Position is computed for equatorial coordinates in eqFrom, considering\n * proper motion, aberration, precession, and _nutation.  Result is in\n * eqTo.  EqFrom and eqTo must be non-nil, but may point to the same struct.\n *\n * Note the Ron-Vondrák expression is only valid for the epoch J2000.\n * EqFrom must be coordinates at epoch J2000.\n */\nfunction positionRonVondrak (eqFrom, epochTo, mα, mδ) { // (eqFrom, eqTo *coord.Equatorial, epochTo float64, mα sexa.HourAngle, mδ sexa.Angle)  *coord.Equatorial\n  const t = epochTo - 2000\n  let eqTo = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Equatorial()\n  eqTo.ra = eqFrom.ra + mα.rad() * t\n  eqTo.dec = eqFrom.dec + mδ.rad() * t\n  const jd = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianYearToJDE(epochTo)\n  const [Δα, Δδ] = aberrationRonVondrak(eqTo.ra, eqTo.dec, jd)\n  eqTo.ra += Δα\n  eqTo.dec += Δδ\n  eqTo = _precess_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].position(eqTo, 2000, epochTo, 0, 0)\n  const [Δα1, Δδ1] = nutation(eqTo.ra, eqTo.dec, jd)\n  eqTo.ra += Δα1\n  eqTo.dec += Δδ1\n  return eqTo\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  nutation,\n  perihelion,\n  eclipticAberration,\n  aberration,\n  position,\n  aberrationRonVondrak,\n  positionRonVondrak\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/apparent.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/apsis.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/apsis.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EARTH_RADIUS: () => (/* binding */ EARTH_RADIUS),\n/* harmony export */   MOON_RADIUS: () => (/* binding */ MOON_RADIUS),\n/* harmony export */   apogee: () => (/* binding */ apogee),\n/* harmony export */   apogeeParallax: () => (/* binding */ apogeeParallax),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   meanApogee: () => (/* binding */ meanApogee),\n/* harmony export */   meanPerigee: () => (/* binding */ meanPerigee),\n/* harmony export */   perigee: () => (/* binding */ perigee),\n/* harmony export */   perigeeParallax: () => (/* binding */ perigeeParallax)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module apsis\n */\n/**\n * Apsis: Chapter 50, Perigee and apogee of the Moon\n */\n\n\nconst { sin, cos } = Math\n\n/**\n * conversion factor from k to T, given in (50.3) p. 356\n */\nconst ck = 1 / 1325.55\nconst D2R = Math.PI / 180\n\n// from http://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html\nconst EARTH_RADIUS = 6378.137 // km\n// from http://nssdc.gsfc.nasa.gov/planetary/factsheet/moonfact.html\nconst MOON_RADIUS = 1738.1 // km\n\n/**\n * mean time of perigee or apogee\n * (50.1) p. 355\n */\nconst mean = function (T) {\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 2451534.6698, 27.55454989 / ck,\n    -0.0006691, -0.000001098, 0.0000000052)\n}\n\n/**\n * snap returns k at half h nearest year y.\n */\nconst snap = function (y, h) {\n  const k = (y - 1999.97) * 13.2555 // (50.2) p. 355\n  return Math.floor(k - h + 0.5) + h\n}\n\n/**\n * meanPerigee returns the jde of the mean perigee of the Moon nearest the given date.\n *\n * @param {Number} year - is a decimal year specifying a date.\n * @return {Number} jde - Julian ephemeris day\n */\nfunction meanPerigee (year) {\n  return mean(snap(year, 0) * ck)\n}\n\n/**\n * perigee returns the jde of perigee of the Moon nearest the given date.\n *\n * @param {Number} year - is a decimal year specifying a date.\n * @return {Number} jde - Julian ephemeris day\n */\nfunction perigee (year) {\n  const l = new La(year, 0)\n  return mean(l.T) + l.perigeeCorr()\n}\n\n/**\n * meanApogee returns the jde of the mean apogee of the Moon nearest the given date.\n *\n * @param {Number} year - is a decimal year specifying a date.\n * @return {Number} jde - Julian ephemeris day\n */\nfunction meanApogee (year) { // (year float64)  float64\n  return mean(snap(year, 0.5) * ck)\n}\n\n/**\n * apogee returns the jde of apogee of the Moon nearest the given date.\n *\n * @param {Number} year - is a decimal year specifying a date.\n * @return {Number} jde - Julian ephemeris day\n */\nfunction apogee (year) {\n  const l = new La(year, 0.5)\n  return mean(l.T) + l.apogeeCorr()\n}\n\n/**\n * apogeeParallax returns equatorial horizontal parallax of the Moon at the Apogee nearest the given date.\n *\n * @param {Number} year - is a decimal year specifying a date.\n * @return {Number} equatorial horizontal parallax in radians\n */\nfunction apogeeParallax (year) {\n  return new La(year, 0.5).apogeeParallax()\n}\n\n/**\n * perigeeParallax returns equatorial horizontal parallax of the Moon at the Apogee nearest the given date.\n *\n * @param {Number} year - is a decimal year specifying a date.\n * @return {Number} equatorial horizontal parallax in radians\n */\nfunction perigeeParallax (year) {\n  return new La(year, 0).perigeeParallax()\n}\n\n/**\n * Calculate the distance earth - moon (center to center) using the parallax angle in radians\n *\n * @param {Number} parallax - parallax angle in radians\n * @return {Number} distance in `km`\n */\nfunction distance (parallax) {\n  return EARTH_RADIUS / sin(parallax)\n}\n\nclass La {\n  constructor (y, h) {\n    this.k = snap(y, h)\n    this.T = this.k * ck // (50.3) p. 350\n    this.D = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(this.T, 171.9179 * D2R, 335.9106046 * D2R / ck,\n      -0.0100383 * D2R, -0.00001156 * D2R, 0.000000055 * D2R)\n    this.M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(this.T, 347.3477 * D2R, 27.1577721 * D2R / ck,\n      -0.000813 * D2R, -0.000001 * D2R)\n    this.F = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(this.T, 316.6109 * D2R, 364.5287911 * D2R / ck,\n      -0.0125053 * D2R, -0.0000148 * D2R)\n    return this\n  }\n\n  /**\n   * perigee correction\n   */\n  perigeeCorr () {\n    const l = this\n    return -1.6769 * sin(2 * l.D) +\n    0.4589 * sin(4 * l.D) +\n    -0.1856 * sin(6 * l.D) +\n    0.0883 * sin(8 * l.D) +\n    (-0.0773 + 0.00019 * l.T) * sin(2 * l.D - l.M) +\n    (0.0502 - 0.00013 * l.T) * sin(l.M) +\n    -0.046 * sin(10 * l.D) +\n    (0.0422 - 0.00011 * l.T) * sin(4 * l.D - l.M) +\n    -0.0256 * sin(6 * l.D - l.M) +\n    0.0253 * sin(12 * l.D) +\n    0.0237 * sin(l.D) +\n    0.0162 * sin(8 * l.D - l.M) +\n    -0.0145 * sin(14 * l.D) +\n    0.0129 * sin(2 * l.F) +\n    -0.0112 * sin(3 * l.D) +\n    -0.0104 * sin(10 * l.D - l.M) +\n    0.0086 * sin(16 * l.D) +\n    0.0069 * sin(12 * l.D - l.M) +\n    0.0066 * sin(5 * l.D) +\n    -0.0053 * sin(2 * (l.D + l.F)) +\n    -0.0052 * sin(18 * l.D) +\n    -0.0046 * sin(14 * l.D - l.M) +\n    -0.0041 * sin(7 * l.D) +\n    0.004 * sin(2 * l.D + l.M) +\n    0.0032 * sin(20 * l.D) +\n    -0.0032 * sin(l.D + l.M) +\n    0.0031 * sin(16 * l.D - l.M) +\n    -0.0029 * sin(4 * l.D + l.M) +\n    0.0027 * sin(9 * l.D) +\n    0.0027 * sin(4 * l.D + 2 * l.F) +\n    -0.0027 * sin(2 * (l.D - l.M)) +\n    0.0024 * sin(4 * l.D - 2 * l.M) +\n    -0.0021 * sin(6 * l.D - 2 * l.M) +\n    -0.0021 * sin(22 * l.D) +\n    -0.0021 * sin(18 * l.D - l.M) +\n    0.0019 * sin(6 * l.D + l.M) +\n    -0.0018 * sin(11 * l.D) +\n    -0.0014 * sin(8 * l.D + l.M) +\n    -0.0014 * sin(4 * l.D - 2 * l.F) +\n    -0.0014 * sin(6 * l.D + 2 * l.F) +\n    0.0014 * sin(3 * l.D + l.M) +\n    -0.0014 * sin(5 * l.D + l.M) +\n    0.0013 * sin(13 * l.D) +\n    0.0013 * sin(20 * l.D - l.M) +\n    0.0011 * sin(3 * l.D + 2 * l.M) +\n    -0.0011 * sin(2 * (2 * l.D + l.F - l.M)) +\n    -0.001 * sin(l.D + 2 * l.M) +\n    -0.0009 * sin(22 * l.D - l.M) +\n    -0.0008 * sin(4 * l.F) +\n    0.0008 * sin(6 * l.D - 2 * l.F) +\n    0.0008 * sin(2 * (l.D - l.F) + l.M) +\n    0.0007 * sin(2 * l.M) +\n    0.0007 * sin(2 * l.F - l.M) +\n    0.0007 * sin(2 * l.D + 4 * l.F) +\n    -0.0006 * sin(2 * (l.F - l.M)) +\n    -0.0006 * sin(2 * (l.D - l.F + l.M)) +\n    0.0006 * sin(24 * l.D) +\n    0.0005 * sin(4 * (l.D - l.F)) +\n    0.0005 * sin(2 * (l.D + l.M)) +\n    -0.0004 * sin(l.D - l.M)\n  }\n\n  /**\n   * apogee correction\n   */\n  apogeeCorr () {\n    const l = this\n    return 0.4392 * sin(2 * l.D) +\n    0.0684 * sin(4 * l.D) +\n    (0.0456 - 0.00011 * l.T) * sin(l.M) +\n    (0.0426 - 0.00011 * l.T) * sin(2 * l.D - l.M) +\n    0.0212 * sin(2 * l.F) +\n    -0.0189 * sin(l.D) +\n    0.0144 * sin(6 * l.D) +\n    0.0113 * sin(4 * l.D - l.M) +\n    0.0047 * sin(2 * (l.D + l.F)) +\n    0.0036 * sin(l.D + l.M) +\n    0.0035 * sin(8 * l.D) +\n    0.0034 * sin(6 * l.D - l.M) +\n    -0.0034 * sin(2 * (l.D - l.F)) +\n    0.0022 * sin(2 * (l.D - l.M)) +\n    -0.0017 * sin(3 * l.D) +\n    0.0013 * sin(4 * l.D + 2 * l.F) +\n    0.0011 * sin(8 * l.D - l.M) +\n    0.001 * sin(4 * l.D - 2 * l.M) +\n    0.0009 * sin(10 * l.D) +\n    0.0007 * sin(3 * l.D + l.M) +\n    0.0006 * sin(2 * l.M) +\n    0.0005 * sin(2 * l.D + l.M) +\n    0.0005 * sin(2 * (l.D + l.M)) +\n    0.0004 * sin(6 * l.D + 2 * l.F) +\n    0.0004 * sin(6 * l.D - 2 * l.M) +\n    0.0004 * sin(10 * l.D - l.M) +\n    -0.0004 * sin(5 * l.D) +\n    -0.0004 * sin(4 * l.D - 2 * l.F) +\n    0.0003 * sin(2 * l.F + l.M) +\n    0.0003 * sin(12 * l.D) +\n    0.0003 * sin(2 * l.D + 2 * l.F - l.M) +\n    -0.0003 * sin(l.D - l.M)\n  }\n\n  /**\n   * apogee parallax\n   */\n  apogeeParallax () {\n    const s = Math.PI / 180 / 3600\n    const l = this\n    return 3245.251 * s +\n    -9.147 * s * cos(2 * l.D) +\n    -0.841 * s * cos(l.D) +\n    0.697 * s * cos(2 * l.F) +\n    (-0.656 * s + 0.0016 * s * l.T) * cos(l.M) +\n    0.355 * s * cos(4 * l.D) +\n    0.159 * s * cos(2 * l.D - l.M) +\n    0.127 * s * cos(l.D + l.M) +\n    0.065 * s * cos(4 * l.D - l.M) +\n    0.052 * s * cos(6 * l.D) +\n    0.043 * s * cos(2 * l.D + l.M) +\n    0.031 * s * cos(2 * (l.D + l.F)) +\n    -0.023 * s * cos(2 * (l.D - l.F)) +\n    0.022 * s * cos(2 * (l.D - l.M)) +\n    0.019 * s * cos(2 * (l.D + l.M)) +\n    -0.016 * s * cos(2 * l.M) +\n    0.014 * s * cos(6 * l.D - l.M) +\n    0.01 * s * cos(8 * l.D)\n  }\n\n  /**\n   * perigee parallax\n   */\n  perigeeParallax () {\n    const s = Math.PI / 180 / 3600\n    const l = this\n    return 3629.215 * s +\n      63.224 * s * cos(2 * l.D) +\n      -6.990 * s * cos(4 * l.D) +\n      (2.834 * s - 0.0071 * l.T * s) * cos(2 * l.D - l.M) +\n      1.927 * s * cos(6 * l.D) +\n      -1.263 * s * cos(l.D) +\n      -0.702 * s * cos(8 * l.D) +\n      (0.696 * s - 0.0017 * l.T * s) * cos(l.M) +\n      -0.690 * s * cos(2 * l.F) +\n      (-0.629 * s + 0.0016 * l.T * s) * cos(4 * l.D - l.M) +\n      -0.392 * s * cos(2 * (l.D - l.F)) +\n      0.297 * s * cos(10 * l.D) +\n      0.260 * s * cos(6 * l.D - l.M) +\n      0.201 * s * cos(3 * l.D) +\n      -0.161 * s * cos(2 * l.D + l.M) +\n      0.157 * s * cos(l.D + l.M) +\n      -0.138 * s * cos(12 * l.D) +\n      -0.127 * s * cos(8 * l.D - l.M) +\n      0.104 * s * cos(2 * (l.D + l.F)) +\n      0.104 * s * cos(2 * (l.D - l.M)) +\n      -0.079 * s * cos(5 * l.D) +\n      0.068 * s * cos(14 * l.D) +\n      0.067 * s * cos(10 * l.D - l.M) +\n      0.054 * s * cos(4 * l.D + l.M) +\n      -0.038 * s * cos(12 * l.D - l.M) +\n      -0.038 * s * cos(4 * l.D - 2 * l.M) +\n      0.037 * s * cos(7 * l.D) +\n      -0.037 * s * cos(4 * l.D + 2 * l.F) +\n      -0.035 * s * cos(16 * l.D) +\n      -0.030 * s * cos(3 * l.D + l.M) +\n      0.029 * s * cos(l.D - l.M) +\n      -0.025 * s * cos(6 * l.D + l.M) +\n      0.023 * s * cos(2 * l.M) +\n      0.023 * s * cos(14 * l.D - l.M) +\n      -0.023 * s * cos(2 * (l.D + l.M)) +\n      0.022 * s * cos(6 * l.D - 2 * l.M) +\n      -0.021 * s * cos(2 * l.D - 2 * l.F - l.M) +\n      -0.020 * s * cos(9 * l.D) +\n      0.019 * s * cos(18 * l.D) +\n      0.017 * s * cos(6 * l.D + 2 * l.F) +\n      0.014 * s * cos(2 * l.F - l.M) +\n      -0.014 * s * cos(16 * l.D - l.M) +\n      0.013 * s * cos(4 * l.D - 2 * l.F) +\n      0.012 * s * cos(8 * l.D + l.M) +\n      0.011 * s * cos(11 * l.D) +\n      0.010 * s * cos(5 * l.D + l.M) +\n      -0.010 * s * cos(20 * l.D)\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  EARTH_RADIUS,\n  MOON_RADIUS,\n  meanPerigee,\n  perigee,\n  meanApogee,\n  apogee,\n  apogeeParallax,\n  perigeeParallax,\n  distance\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/apsis.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/base.js":
/*!*********************************************!*\
  !*** ./node_modules/astronomia/src/base.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AU: () => (/* binding */ AU),\n/* harmony export */   B1900: () => (/* binding */ B1900),\n/* harmony export */   B1950: () => (/* binding */ B1950),\n/* harmony export */   BesselianYear: () => (/* binding */ BesselianYear),\n/* harmony export */   BesselianYearToJDE: () => (/* binding */ BesselianYearToJDE),\n/* harmony export */   COblJ2000: () => (/* binding */ COblJ2000),\n/* harmony export */   Coord: () => (/* binding */ Coord),\n/* harmony export */   CosSmallAngle: () => (/* binding */ CosSmallAngle),\n/* harmony export */   J1900: () => (/* binding */ J1900),\n/* harmony export */   J2000: () => (/* binding */ J2000),\n/* harmony export */   J2000Century: () => (/* binding */ J2000Century),\n/* harmony export */   JDEToBesselianYear: () => (/* binding */ JDEToBesselianYear),\n/* harmony export */   JDEToJulianYear: () => (/* binding */ JDEToJulianYear),\n/* harmony export */   JMod: () => (/* binding */ JMod),\n/* harmony export */   JulianCentury: () => (/* binding */ JulianCentury),\n/* harmony export */   JulianYear: () => (/* binding */ JulianYear),\n/* harmony export */   JulianYearToJDE: () => (/* binding */ JulianYearToJDE),\n/* harmony export */   K: () => (/* binding */ K),\n/* harmony export */   SOblJ2000: () => (/* binding */ SOblJ2000),\n/* harmony export */   SmallAngle: () => (/* binding */ SmallAngle),\n/* harmony export */   cmp: () => (/* binding */ cmp),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   errorCode: () => (/* binding */ errorCode),\n/* harmony export */   floorDiv: () => (/* binding */ floorDiv),\n/* harmony export */   horner: () => (/* binding */ horner),\n/* harmony export */   illuminated: () => (/* binding */ illuminated),\n/* harmony export */   lightTime: () => (/* binding */ lightTime),\n/* harmony export */   limb: () => (/* binding */ limb),\n/* harmony export */   meanSiderealYear: () => (/* binding */ meanSiderealYear),\n/* harmony export */   modf: () => (/* binding */ modf),\n/* harmony export */   pmod: () => (/* binding */ pmod),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   sincos: () => (/* binding */ sincos),\n/* harmony export */   toDeg: () => (/* binding */ toDeg),\n/* harmony export */   toRad: () => (/* binding */ toRad)\n/* harmony export */ });\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module base\n */\n/**\n * Base: Functions and other definitions useful with multiple packages.\n *\n * Base contains various definitions and support functions useful in multiple\n * chapters.\n *\n * Bessellian and Julian Year\n *\n * Chapter 21, Precession actually contains these definitions.  They are moved\n * here because of their general utility.\n *\n * Chapter 22, Nutation contains the function for Julian centuries since J2000.\n *\n * Phase angle functions\n *\n * Two functions, Illuminated and Limb, concern the illumnated phase of a body\n * and are given in two chapters, 41 an 48.  They are collected here because\n * the identical functions apply in both chapters.\n *\n * General purpose math functions\n *\n * SmallAngle is recommended in chapter 17, p. 109.\n *\n * PMod addresses the issue on p. 7, chapter 1, in the section \"Trigonometric\n * functions of large angles\", but the function is not written to be specific\n * to angles and so has more general utility.\n *\n * Horner is described on p. 10, chapter 1.\n *\n * FloorDiv and FloorDiv64 are optimizations for the INT function described\n * on p. 60, chapter 7.\n*/\n\n// ---- constants ----\n\n/** K is the Gaussian gravitational constant. */\nconst K = 0.01720209895\n// K from ch 33, p. 228, for example\n\n/** AU is one astronomical unit in km. */\nconst AU = 149597870\n// from Appendix I, p, 407.\n\n/** SOblJ2000 sine obliquity at J2000. */\nconst SOblJ2000 = 0.397777156\n/** COblJ2000 cosine obliquity at J2000. */\nconst COblJ2000 = 0.917482062\n// SOblJ2000, COblJ2000 from ch 33, p. 228, for example\n\n/**\n * lightTime returns time for light to travel a given distance.\n * `dist` is distance in to earth in AU. √(x² + y² + z²)\n * Result in seconds of time.\n * @param {Number} dist - distance in to earth in AU\n * @returns {Number} time for light to travel a given distance in seconds\n */\nfunction lightTime (dist) {\n  // Formula given as (33.3) p. 224.\n  return 0.0057755183 * dist\n}\n\n// ---- julian ----\n\n/**\n * Julian and Besselian years described in chapter 21, Precession.\n * T, Julian centuries since J2000 described in chapter 22, Nutation.\n */\n\n/** JMod is the Julian date of the modified Julian date epoch. */\nconst JMod = 2400000.5\n\n/** J2000 is the Julian date corresponding to January 1.5, year 2000. */\nconst J2000 = 2451545.0\n\n// Julian days of common epochs.\n// B1900, B1950 from p. 133\n/** Julian days of Julian epoch 1900 */\nconst J1900 = 2415020.0\n/** Julian days of Besselian epoch 1900 */\nconst B1900 = 2415020.3135\n/** Julian days of Besselian epoch 1950 */\nconst B1950 = 2433282.4235\n\n// JulianYear and other common periods\n/** JulianYear in days */\nconst JulianYear = 365.25 // days\n/** JulianCentury in days */\nconst JulianCentury = 36525 // days\n/** BesselianYear in days; equals mean tropical year */\nconst BesselianYear = 365.2421988 // days\n/** Mean sidereal year */\nconst meanSiderealYear = 365.25636 // days\n\n/**\n * JulianYearToJDE returns the Julian ephemeris day for a Julian year.\n * @param {Number} jy - Julian year\n * @returns {Number} jde - Julian ephemeris day\n */\nfunction JulianYearToJDE (jy) {\n  return J2000 + JulianYear * (jy - 2000)\n}\n\n/**\n * JDEToJulianYear returns a Julian year for a Julian ephemeris day.\n * @param {Number} jde - Julian ephemeris day\n * @returns {Number} jy - Julian year\n */\nfunction JDEToJulianYear (jde) {\n  return 2000 + (jde - J2000) / JulianYear\n}\n\n/**\n * BesselianYearToJDE returns the Julian ephemeris day for a Besselian year.\n * @param {Number} by - Besselian year\n * @returns {Number} jde - Julian ephemeris day\n */\nfunction BesselianYearToJDE (by) {\n  return B1900 + BesselianYear * (by - 1900)\n}\n\n/**\n * JDEToBesselianYear returns the Besselian year for a Julian ephemeris day.\n * @param {Number} jde - Julian ephemeris day\n * @returns {Number} by - Besselian year\n */\nfunction JDEToBesselianYear (jde) {\n  return 1900 + (jde - B1900) / BesselianYear\n}\n\n/**\n * J2000Century returns the number of Julian centuries since J2000.\n *\n * The quantity appears as T in a number of time series.\n * @param {Number} jde - Julian ephemeris day\n * @returns {Number} number of Julian centuries since J2000\n */\nfunction J2000Century (jde) {\n  // The formula is given in a number of places in the book, for example\n  // (12.1) p. 87.\n  // (22.1) p. 143.\n  // (25.1) p. 163.\n  return (jde - J2000) / JulianCentury\n}\n\n// ---- phase ----\n\n/**\n * illuminated returns the illuminated fraction of a body's disk.\n *\n * The illuminated body can be the Moon or a planet.\n *\n * @param {Number} i - phase angle in radians.\n * @returns {Number} illuminated fraction of a body's disk.\n */\nfunction illuminated (i) {\n  // (41.1) p. 283, also (48.1) p. 345.\n  return (1 + Math.cos(i)) * 0.5\n}\n\n/**\n * celestial coordinates in right ascension and declination\n * or ecliptic coordinates in longitude and latitude\n */\nclass Coord {\n  /**\n   * celestial coordinates in right ascension and declination\n   * or ecliptic coordinates in longitude and latitude\n   *\n   * @param {number} ra - right ascension (or longitude)\n   * @param {number} dec - declination (or latitude)\n   * @param {number} [range] - distance\n   * @param {number} [elongation] - elongation\n   */\n  constructor (ra, dec, range, elongation) {\n    this._ra = ra || 0\n    this._dec = dec || 0\n    this.range = range\n    this.elongation = elongation\n  }\n\n  /**\n   * right ascension\n   * @return {number}\n   */\n  get ra () {\n    return this._ra\n  }\n\n  set ra (ra) {\n    this._ra = ra\n  }\n\n  /**\n   * declination\n   * @return {number}\n   */\n  get dec () {\n    return this._dec\n  }\n\n  set dec (dec) {\n    this._dec = dec\n  }\n\n  /**\n   * right ascension (or longitude)\n   * @return {number}\n   */\n  get lon () {\n    return this._ra\n  }\n\n  set lon (ra) {\n    this._ra = ra\n  }\n\n  /**\n   * declination (or latitude)\n   * @return {number}\n   */\n  get lat () {\n    return this._dec\n  }\n\n  set lat (dec) {\n    this._dec = dec\n  }\n}\n\n/**\n * Limb returns the position angle of the midpoint of an illuminated limb.\n *\n * The illuminated body can be the Moon or a planet.\n *\n * @param {Coord} equ - equatorial coordinates of the body `{ra, dec}` (in radians)\n * @param {Coord} appSun - apparent coordinates of the Sun `{ra, dec}` (In radians).\n * @returns {Number} position angle of the midpoint (in radians).\n */\nfunction limb (equ, appSun) {\n  const α = equ.ra\n  const δ = equ.dec\n  const α0 = appSun.ra\n  const δ0 = appSun.dec\n  // Mentioned in ch 41, p. 283.  Formula (48.5) p. 346\n  const sδ = Math.sin(δ)\n  const cδ = Math.cos(δ)\n  const sδ0 = Math.sin(δ0)\n  const cδ0 = Math.cos(δ0)\n  const sα0α = Math.sin(α0 - α)\n  const cα0α = Math.cos(α0 - α)\n  let χ = Math.atan2(cδ0 * sα0α, (sδ0 * cδ - cδ0 * sδ * cα0α))\n  if (χ < 0) {\n    χ += 2 * Math.PI\n  }\n  return χ\n}\n\n// ---- math ----\n\n// In chapter 17, p. 109, Meeus recommends 10′.\n/**\n * SmallAngle is threshold used by various routines for switching between\n * trigonometric functions and Pythagorean approximations.\n */\nconst SmallAngle = 10 * Math.PI / 180 / 60 // about .003 radians\n/** cosine of SmallAngle */\nconst CosSmallAngle = Math.cos(SmallAngle) // about .999996\n\n/**\n * pmod returns a positive floating-point x mod y.\n *\n * For a positive argument y, it returns a value in the range [0,y).\n *\n * @param {Number} x\n * @param {Number} y\n * @returns {Number} x % y - The result may not be useful if y is negative.\n */\nfunction pmod (x, y) {\n  let r = x % y\n  if (r < 0) {\n    r += y\n  }\n  return r\n}\n\n/**\n * horner evaluates a polynomal with coefficients c at x.  The constant\n * term is c[0].\n * @param {Number} x\n * @param {Number[]} c - coefficients; c[0] may be of type Number[]\n * @returns {Number}\n */\nfunction horner (x, ...c) {\n  if (Array.isArray(c[0])) {\n    c = c[0]\n  }\n  let i = c.length - 1\n  let y = c[i]\n  while (i > 0) {\n    i--\n    y = y * x + c[i]\n  }\n  return y\n}\n\n/**\n * FloorDiv returns the integer floor of the fractional value (x / y).\n * @param {Number} x\n * @param {Number} y\n * @returns {Number} (int)\n */\nfunction floorDiv (x, y) {\n  const q = x / y\n  return Math.floor(q)\n}\n\n/**\n * Cmp compares two float64s and returns -1, 0, or 1 if a is <, ==, or > b,\n * respectively.\n * .\n * @param {Number} a\n * @param {Number} b\n * @returns {Number} comparison result\n */\nfunction cmp (a, b) {\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n\n/**\n * shorthand function for Math.sin, Math.cos\n * @param {Number} ε\n * @returns {Number[]} [sin(ε), cos(ε)]\n */\nfunction sincos (ε) {\n  return [Math.sin(ε), Math.cos(ε)]\n}\n\n/**\n * Convert degrees to radians\n * @param  {Number} deg - Angle in degrees\n * @return {Number} Angle in radians\n */\nfunction toRad (deg) {\n  return (Math.PI / 180.0) * deg\n}\n\n/**\n * Convert radians to degrees\n * @param  {Number} rad - Angle in radians\n * @return {Number} Angle in degrees\n */\nfunction toDeg (rad) {\n  return (180.0 / Math.PI) * rad\n}\n\n/**\n * separate fix `i` from fraction `f`\n * @param {Number} float\n * @returns {Array} [i, f]\n *  {Number} i - (int) fix value\n *  {Number} f - (float) fractional portion; always > 1\n */\nfunction modf (float) {\n  const i = Math.trunc(float)\n  const f = Math.abs(float - i)\n  return [i, f]\n}\n\n/**\n * Rounds `float` value by precision\n * @param {Number} float - value to round\n * @param {Number} [precision] - (int) number of post decimal positions\n * @return {Number} rounded `float`\n */\nfunction round (float, precision = 14) {\n  return parseFloat(float.toFixed(precision))\n}\n\nfunction errorCode (msg, code) {\n  const err = new Error(msg)\n  // @ts-ignore\n  err.code = code\n  return err\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  K,\n  AU,\n  SOblJ2000,\n  COblJ2000,\n  lightTime,\n  JMod,\n  J2000,\n  J1900,\n  B1900,\n  B1950,\n  JulianYear,\n  JulianCentury,\n  BesselianYear,\n  meanSiderealYear,\n  JulianYearToJDE,\n  JDEToJulianYear,\n  BesselianYearToJDE,\n  JDEToBesselianYear,\n  J2000Century,\n  illuminated,\n  Coord,\n  limb,\n  SmallAngle,\n  CosSmallAngle,\n  pmod,\n  horner,\n  floorDiv,\n  cmp,\n  sincos,\n  toRad,\n  toDeg,\n  modf,\n  round,\n  errorCode\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/base.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/binary.js":
/*!***********************************************!*\
  !*** ./node_modules/astronomia/src/binary.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apparentEccentricity: () => (/* binding */ apparentEccentricity),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   meanAnomaly: () => (/* binding */ meanAnomaly),\n/* harmony export */   position: () => (/* binding */ position)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module binary\n */\n/**\n * Binary: Chapter 57, Binary Stars\n */\n\nconst { atan, atan2, cos, sqrt, tan } = Math\n\n/**\n * computes mean anomaly for the given date.\n *\n * @param {Number} year - is a decimal year specifying the date\n * @param {Number} T - is time of periastron, as a decimal year\n * @param {Number} P - is period of revolution in mean solar years\n * @returns {Number} mean anomaly in radians.\n */\nfunction meanAnomaly (year, T, P) { // (year, T, P float64)  float64\n  const n = 2 * Math.PI / P\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(n * (year - T), 2 * Math.PI)\n}\n\n/**\n * Position computes apparent position angle and angular distance of\n * components of a binary star.\n *\n * @param {Number} a - is apparent semimajor axis in arc seconds\n * @param {Number} e - is eccentricity of the true orbit\n * @param {Number} i - is inclination relative to the line of sight\n * @param {Number} Ω - is position angle of the ascending node\n * @param {Number} ω - is longitude of periastron\n * @param {Number} E - is eccentric anomaly, computed for example with package kepler\n *  and the mean anomaly as returned by function M in this package.\n * @returns {Number[]} [θ, ρ]\n *  {Number} θ -is the apparent position angle in radians,\n *  {Number} ρ is the angular distance in arc seconds.\n */\nfunction position (a, e, i, Ω, ω, E) { // (a, e, i, Ω, ω, E float64)  (θ, ρ float64)\n  const r = a * (1 - e * cos(E))\n  const ν = 2 * atan(sqrt((1 + e) / (1 - e)) * tan(E / 2))\n  const [sinνω, cosνω] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ν + ω)\n  const cosi = cos(i)\n  const num = sinνω * cosi\n  let θ = atan2(num, cosνω) + Ω\n  if (θ < 0) {\n    θ += 2 * Math.PI\n  }\n  const ρ = r * sqrt(num * num + cosνω * cosνω)\n  return [θ, ρ]\n}\n\n/**\n * ApparentEccentricity returns apparent eccenticity of a binary star\n * given true orbital elements.\n *\n * @param {Number} e - is eccentricity of the true orbit\n * @param {Number} i - is inclination relative to the line of sight\n * @param {Number} ω - is longitude of periastron\n * @returns {Number} apparent eccenticity of a binary star\n */\nfunction apparentEccentricity (e, i, ω) { // (e, i, ω float64)  float64\n  const cosi = cos(i)\n  const [sinω, cosω] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ω)\n  const A = (1 - e * e * cosω * cosω) * cosi * cosi\n  const B = e * e * sinω * cosω * cosi\n  const C = 1 - e * e * sinω * sinω\n  const d = A - C\n  const sqrtD = sqrt(d * d + 4 * B * B)\n  return sqrt(2 * sqrtD / (A + C + sqrtD))\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  meanAnomaly,\n  position,\n  apparentEccentricity\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvYmluYXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzRCO0FBQzVCLFFBQVEsOEJBQThCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDTyxvQ0FBb0M7QUFDM0M7QUFDQSxTQUFTLHFEQUFTO0FBQ2xCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFVBQVU7QUFDdkIsS0FBSyxRQUFRO0FBQ2IsS0FBSyxRQUFRO0FBQ2I7QUFDTyx1Q0FBdUM7QUFDOUM7QUFDQTtBQUNBLHlCQUF5Qix1REFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDTywwQ0FBMEM7QUFDakQ7QUFDQSx1QkFBdUIsdURBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2JpbmFyeS5qcz9mMGU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDEzIFNvbmlhIEtleXNcbiAqIEBjb3B5cmlnaHQgMjAxNiBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgYmluYXJ5XG4gKi9cbi8qKlxuICogQmluYXJ5OiBDaGFwdGVyIDU3LCBCaW5hcnkgU3RhcnNcbiAqL1xuaW1wb3J0IGJhc2UgZnJvbSAnLi9iYXNlLmpzJ1xuY29uc3QgeyBhdGFuLCBhdGFuMiwgY29zLCBzcXJ0LCB0YW4gfSA9IE1hdGhcblxuLyoqXG4gKiBjb21wdXRlcyBtZWFuIGFub21hbHkgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSB5ZWFyIC0gaXMgYSBkZWNpbWFsIHllYXIgc3BlY2lmeWluZyB0aGUgZGF0ZVxuICogQHBhcmFtIHtOdW1iZXJ9IFQgLSBpcyB0aW1lIG9mIHBlcmlhc3Ryb24sIGFzIGEgZGVjaW1hbCB5ZWFyXG4gKiBAcGFyYW0ge051bWJlcn0gUCAtIGlzIHBlcmlvZCBvZiByZXZvbHV0aW9uIGluIG1lYW4gc29sYXIgeWVhcnNcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IG1lYW4gYW5vbWFseSBpbiByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVhbkFub21hbHkgKHllYXIsIFQsIFApIHsgLy8gKHllYXIsIFQsIFAgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgbiA9IDIgKiBNYXRoLlBJIC8gUFxuICByZXR1cm4gYmFzZS5wbW9kKG4gKiAoeWVhciAtIFQpLCAyICogTWF0aC5QSSlcbn1cblxuLyoqXG4gKiBQb3NpdGlvbiBjb21wdXRlcyBhcHBhcmVudCBwb3NpdGlvbiBhbmdsZSBhbmQgYW5ndWxhciBkaXN0YW5jZSBvZlxuICogY29tcG9uZW50cyBvZiBhIGJpbmFyeSBzdGFyLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBhIC0gaXMgYXBwYXJlbnQgc2VtaW1ham9yIGF4aXMgaW4gYXJjIHNlY29uZHNcbiAqIEBwYXJhbSB7TnVtYmVyfSBlIC0gaXMgZWNjZW50cmljaXR5IG9mIHRoZSB0cnVlIG9yYml0XG4gKiBAcGFyYW0ge051bWJlcn0gaSAtIGlzIGluY2xpbmF0aW9uIHJlbGF0aXZlIHRvIHRoZSBsaW5lIG9mIHNpZ2h0XG4gKiBAcGFyYW0ge051bWJlcn0gzqkgLSBpcyBwb3NpdGlvbiBhbmdsZSBvZiB0aGUgYXNjZW5kaW5nIG5vZGVcbiAqIEBwYXJhbSB7TnVtYmVyfSDPiSAtIGlzIGxvbmdpdHVkZSBvZiBwZXJpYXN0cm9uXG4gKiBAcGFyYW0ge051bWJlcn0gRSAtIGlzIGVjY2VudHJpYyBhbm9tYWx5LCBjb21wdXRlZCBmb3IgZXhhbXBsZSB3aXRoIHBhY2thZ2Uga2VwbGVyXG4gKiAgYW5kIHRoZSBtZWFuIGFub21hbHkgYXMgcmV0dXJuZWQgYnkgZnVuY3Rpb24gTSBpbiB0aGlzIHBhY2thZ2UuXG4gKiBAcmV0dXJucyB7TnVtYmVyW119IFvOuCwgz4FdXG4gKiAge051bWJlcn0gzrggLWlzIHRoZSBhcHBhcmVudCBwb3NpdGlvbiBhbmdsZSBpbiByYWRpYW5zLFxuICogIHtOdW1iZXJ9IM+BIGlzIHRoZSBhbmd1bGFyIGRpc3RhbmNlIGluIGFyYyBzZWNvbmRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcG9zaXRpb24gKGEsIGUsIGksIM6pLCDPiSwgRSkgeyAvLyAoYSwgZSwgaSwgzqksIM+JLCBFIGZsb2F0NjQpICAozrgsIM+BIGZsb2F0NjQpXG4gIGNvbnN0IHIgPSBhICogKDEgLSBlICogY29zKEUpKVxuICBjb25zdCDOvSA9IDIgKiBhdGFuKHNxcnQoKDEgKyBlKSAvICgxIC0gZSkpICogdGFuKEUgLyAyKSlcbiAgY29uc3QgW3Npbs69z4ksIGNvc869z4ldID0gYmFzZS5zaW5jb3Mozr0gKyDPiSlcbiAgY29uc3QgY29zaSA9IGNvcyhpKVxuICBjb25zdCBudW0gPSBzaW7Ovc+JICogY29zaVxuICBsZXQgzrggPSBhdGFuMihudW0sIGNvc869z4kpICsgzqlcbiAgaWYgKM64IDwgMCkge1xuICAgIM64ICs9IDIgKiBNYXRoLlBJXG4gIH1cbiAgY29uc3Qgz4EgPSByICogc3FydChudW0gKiBudW0gKyBjb3POvc+JICogY29zzr3PiSlcbiAgcmV0dXJuIFvOuCwgz4FdXG59XG5cbi8qKlxuICogQXBwYXJlbnRFY2NlbnRyaWNpdHkgcmV0dXJucyBhcHBhcmVudCBlY2NlbnRpY2l0eSBvZiBhIGJpbmFyeSBzdGFyXG4gKiBnaXZlbiB0cnVlIG9yYml0YWwgZWxlbWVudHMuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGUgLSBpcyBlY2NlbnRyaWNpdHkgb2YgdGhlIHRydWUgb3JiaXRcbiAqIEBwYXJhbSB7TnVtYmVyfSBpIC0gaXMgaW5jbGluYXRpb24gcmVsYXRpdmUgdG8gdGhlIGxpbmUgb2Ygc2lnaHRcbiAqIEBwYXJhbSB7TnVtYmVyfSDPiSAtIGlzIGxvbmdpdHVkZSBvZiBwZXJpYXN0cm9uXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBhcHBhcmVudCBlY2NlbnRpY2l0eSBvZiBhIGJpbmFyeSBzdGFyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBhcmVudEVjY2VudHJpY2l0eSAoZSwgaSwgz4kpIHsgLy8gKGUsIGksIM+JIGZsb2F0NjQpICBmbG9hdDY0XG4gIGNvbnN0IGNvc2kgPSBjb3MoaSlcbiAgY29uc3QgW3Npbs+JLCBjb3PPiV0gPSBiYXNlLnNpbmNvcyjPiSlcbiAgY29uc3QgQSA9ICgxIC0gZSAqIGUgKiBjb3PPiSAqIGNvc8+JKSAqIGNvc2kgKiBjb3NpXG4gIGNvbnN0IEIgPSBlICogZSAqIHNpbs+JICogY29zz4kgKiBjb3NpXG4gIGNvbnN0IEMgPSAxIC0gZSAqIGUgKiBzaW7PiSAqIHNpbs+JXG4gIGNvbnN0IGQgPSBBIC0gQ1xuICBjb25zdCBzcXJ0RCA9IHNxcnQoZCAqIGQgKyA0ICogQiAqIEIpXG4gIHJldHVybiBzcXJ0KDIgKiBzcXJ0RCAvIChBICsgQyArIHNxcnREKSlcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBtZWFuQW5vbWFseSxcbiAgcG9zaXRpb24sXG4gIGFwcGFyZW50RWNjZW50cmljaXR5XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/binary.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/circle.js":
/*!***********************************************!*\
  !*** ./node_modules/astronomia/src/circle.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   smallest: () => (/* binding */ smallest)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module circle\n */\n/**\n * Circle: Chapter 20, Smallest Circle containing three Celestial Bodies.\n */\n\n // eslint-disable-line no-unused-vars\n\n/**\n * Smallest finds the smallest circle containing three points.\n *\n * Arguments should represent coordinates in right ascension and declination\n * or longitude and latitude.  Result Δ is the diameter of the circle, typeI\n * is true if solution is of type I.\n *\n * @param {Coord} c1 - ra, dec point 1\n * @param {Coord} c2 - ra, dec point 2\n * @param {Coord} c3 - ra, dec point 3\n * @returns {Array} [Δ, typeI]\n *  {Number} Δ - diameter of the circle\n *  {Number} typeI - true - Two points on circle, one interior.\n *                   false - All three points on circle.\n */\nfunction smallest (c1, c2, c3) {\n  // Using haversine formula\n  const cd1 = Math.cos(c1.dec)\n  const cd2 = Math.cos(c2.dec)\n  const cd3 = Math.cos(c3.dec)\n  let a = 2 * Math.asin(Math.sqrt(hav(c2.dec - c1.dec) + cd1 * cd2 * hav(c2.ra - c1.ra)))\n  let b = 2 * Math.asin(Math.sqrt(hav(c3.dec - c2.dec) + cd2 * cd3 * hav(c3.ra - c2.ra)))\n  let c = 2 * Math.asin(Math.sqrt(hav(c1.dec - c3.dec) + cd3 * cd1 * hav(c1.ra - c3.ra)))\n  if (b > a) {\n    [a, b] = noswap(b, a)\n  }\n  if (c > a) {\n    [a, c] = noswap(c, a)\n  }\n  if (a * a >= b * b + c * c) {\n    return [a, true]\n  }\n  // (20.1) p. 128\n  return [2 * a * b * c / Math.sqrt((a + b + c) * (a + b - c) * (b + c - a) * (a + c - b)), false]\n}\n\nconst noswap = function (a, b) {\n  return [a, b]\n}\n\n/**\n * haversine function (17.5) p. 115\n */\nconst hav = function (a) {\n  return 0.5 * (1 - Math.cos(a))\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  smallest\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvY2lyY2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUM7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCLEtBQUssUUFBUTtBQUNiLEtBQUssUUFBUTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvY2lyY2xlLmpzPzkzZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBjaXJjbGVcbiAqL1xuLyoqXG4gKiBDaXJjbGU6IENoYXB0ZXIgMjAsIFNtYWxsZXN0IENpcmNsZSBjb250YWluaW5nIHRocmVlIENlbGVzdGlhbCBCb2RpZXMuXG4gKi9cblxuaW1wb3J0IHsgQ29vcmQgfSBmcm9tICcuL2Jhc2UuanMnIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuLyoqXG4gKiBTbWFsbGVzdCBmaW5kcyB0aGUgc21hbGxlc3QgY2lyY2xlIGNvbnRhaW5pbmcgdGhyZWUgcG9pbnRzLlxuICpcbiAqIEFyZ3VtZW50cyBzaG91bGQgcmVwcmVzZW50IGNvb3JkaW5hdGVzIGluIHJpZ2h0IGFzY2Vuc2lvbiBhbmQgZGVjbGluYXRpb25cbiAqIG9yIGxvbmdpdHVkZSBhbmQgbGF0aXR1ZGUuICBSZXN1bHQgzpQgaXMgdGhlIGRpYW1ldGVyIG9mIHRoZSBjaXJjbGUsIHR5cGVJXG4gKiBpcyB0cnVlIGlmIHNvbHV0aW9uIGlzIG9mIHR5cGUgSS5cbiAqXG4gKiBAcGFyYW0ge0Nvb3JkfSBjMSAtIHJhLCBkZWMgcG9pbnQgMVxuICogQHBhcmFtIHtDb29yZH0gYzIgLSByYSwgZGVjIHBvaW50IDJcbiAqIEBwYXJhbSB7Q29vcmR9IGMzIC0gcmEsIGRlYyBwb2ludCAzXG4gKiBAcmV0dXJucyB7QXJyYXl9IFvOlCwgdHlwZUldXG4gKiAge051bWJlcn0gzpQgLSBkaWFtZXRlciBvZiB0aGUgY2lyY2xlXG4gKiAge051bWJlcn0gdHlwZUkgLSB0cnVlIC0gVHdvIHBvaW50cyBvbiBjaXJjbGUsIG9uZSBpbnRlcmlvci5cbiAqICAgICAgICAgICAgICAgICAgIGZhbHNlIC0gQWxsIHRocmVlIHBvaW50cyBvbiBjaXJjbGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzbWFsbGVzdCAoYzEsIGMyLCBjMykge1xuICAvLyBVc2luZyBoYXZlcnNpbmUgZm9ybXVsYVxuICBjb25zdCBjZDEgPSBNYXRoLmNvcyhjMS5kZWMpXG4gIGNvbnN0IGNkMiA9IE1hdGguY29zKGMyLmRlYylcbiAgY29uc3QgY2QzID0gTWF0aC5jb3MoYzMuZGVjKVxuICBsZXQgYSA9IDIgKiBNYXRoLmFzaW4oTWF0aC5zcXJ0KGhhdihjMi5kZWMgLSBjMS5kZWMpICsgY2QxICogY2QyICogaGF2KGMyLnJhIC0gYzEucmEpKSlcbiAgbGV0IGIgPSAyICogTWF0aC5hc2luKE1hdGguc3FydChoYXYoYzMuZGVjIC0gYzIuZGVjKSArIGNkMiAqIGNkMyAqIGhhdihjMy5yYSAtIGMyLnJhKSkpXG4gIGxldCBjID0gMiAqIE1hdGguYXNpbihNYXRoLnNxcnQoaGF2KGMxLmRlYyAtIGMzLmRlYykgKyBjZDMgKiBjZDEgKiBoYXYoYzEucmEgLSBjMy5yYSkpKVxuICBpZiAoYiA+IGEpIHtcbiAgICBbYSwgYl0gPSBub3N3YXAoYiwgYSlcbiAgfVxuICBpZiAoYyA+IGEpIHtcbiAgICBbYSwgY10gPSBub3N3YXAoYywgYSlcbiAgfVxuICBpZiAoYSAqIGEgPj0gYiAqIGIgKyBjICogYykge1xuICAgIHJldHVybiBbYSwgdHJ1ZV1cbiAgfVxuICAvLyAoMjAuMSkgcC4gMTI4XG4gIHJldHVybiBbMiAqIGEgKiBiICogYyAvIE1hdGguc3FydCgoYSArIGIgKyBjKSAqIChhICsgYiAtIGMpICogKGIgKyBjIC0gYSkgKiAoYSArIGMgLSBiKSksIGZhbHNlXVxufVxuXG5jb25zdCBub3N3YXAgPSBmdW5jdGlvbiAoYSwgYikge1xuICByZXR1cm4gW2EsIGJdXG59XG5cbi8qKlxuICogaGF2ZXJzaW5lIGZ1bmN0aW9uICgxNy41KSBwLiAxMTVcbiAqL1xuY29uc3QgaGF2ID0gZnVuY3Rpb24gKGEpIHtcbiAgcmV0dXJuIDAuNSAqICgxIC0gTWF0aC5jb3MoYSkpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc21hbGxlc3Rcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/circle.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/conjunction.js":
/*!****************************************************!*\
  !*** ./node_modules/astronomia/src/conjunction.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   planetary: () => (/* binding */ planetary),\n/* harmony export */   stellar: () => (/* binding */ stellar)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module conjunction\n */\n/**\n * Conjunction: Chapter 18: Planetary Conjunctions.\n */\n\n // eslint-disable-line no-unused-vars\n\n\n/**\n * Planetary computes a conjunction between two moving objects, such as planets.\n *\n * Conjunction is found with interpolation against length 5 ephemerides.\n *\n * t1, t5 are times of first and last rows of ephemerides.  The scale is\n * arbitrary.\n *\n * cs1 is the ephemeris of the first object. The columns may be celestial\n * coordinates in right ascension and declination or ecliptic coordinates in\n * longitude and latitude.\n *\n * cs2 is the ephemeris of the second object, in the same frame as the first.\n *\n * Return value t is time of conjunction in the scale of t1, t5.\n *\n * @param {Number} t1 - julian ephemeris day of first row\n * @param {Number} t5 - julian ephemeris day of fifth row\n * @param {Coord[]} cs1 - ephemeris of first moving object\n * @param {Coord[]} cs2 - ephemeris of decond moving object\n * @return {Array}\n *    {Number} t - time of conjunction in JDE\n *    {Number} Δd - is the amount that object 2 was \"above\" object 1 at the time of conjunction.\n */\nfunction planetary (t1, t5, cs1, cs2) {\n  if (cs1.length !== 5 || cs2.length !== 5) {\n    throw new Error('Five rows required in ephemerides')\n  }\n  const dr = new Array(5)\n  const dd = new Array(5)\n  cs1.forEach((r, i) => {\n    dr[i] = cs2[i].ra - cs1[i].ra\n    dd[i] = cs2[i].dec - cs1[i].dec\n  })\n  return conj(t1, t5, dr, dd)\n}\n\n/**\n * Stellar computes a conjunction between a moving and non-moving object.\n *\n * Arguments and return values same as with Planetary, except the non-moving\n * object is c1.  The ephemeris of the moving object is cs2.\n *\n * @param {Number} t1 - julian ephemeris day of first row\n * @param {Number} t5 - julian ephemeris day of fifth row\n * @param {Coord} c1 - ephemeris of non-moving object\n * @param {Coord[]} cs2 - ephemeris of moving object\n * @return {Array}\n *    {Number} t - time of conjunction in JDE\n *    {Number} Δd - is the amount that object 2 was \"above\" object 1 at the time of conjunction.\n */\nfunction stellar (t1, t5, c1, cs2) {\n  if (cs2.length !== 5) {\n    throw new Error('Five rows required in ephemerides')\n  }\n  const dr = new Array(5)\n  const dd = new Array(5)\n  cs2.forEach((r, i) => {\n    dr[i] = cs2[i].ra - c1.ra\n    dd[i] = cs2[i].dec - c1.dec\n  })\n  return conj(t1, t5, dr, dd)\n}\n\nconst conj = function (t1, t5, dr, dd) { // (t1, t5 float64, dr, dd []float64)  (t, Δd float64, err error)\n  let l5 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len5(t1, t5, dr)\n  const t = l5.zero(true)\n  l5 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len5(t1, t5, dd)\n  const Δd = l5.interpolateXStrict(t)\n  return [t, Δd]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  planetary,\n  stellar\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvY29uanVuY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDO0FBQ007O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLFlBQVk7QUFDWixPQUFPLFFBQVE7QUFDZixPQUFPLFFBQVE7QUFDZjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsU0FBUztBQUNwQixZQUFZO0FBQ1osT0FBTyxRQUFRO0FBQ2YsT0FBTyxRQUFRO0FBQ2Y7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSx5Q0FBeUM7QUFDekMsZUFBZSw4REFBVztBQUMxQjtBQUNBLFdBQVcsOERBQVc7QUFDdEI7QUFDQTtBQUNBOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvY29uanVuY3Rpb24uanM/MDMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIGNvbmp1bmN0aW9uXG4gKi9cbi8qKlxuICogQ29uanVuY3Rpb246IENoYXB0ZXIgMTg6IFBsYW5ldGFyeSBDb25qdW5jdGlvbnMuXG4gKi9cblxuaW1wb3J0IHsgQ29vcmQgfSBmcm9tICcuL2Jhc2UuanMnIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbmltcG9ydCBpbnRlcnAgZnJvbSAnLi9pbnRlcnBvbGF0aW9uLmpzJ1xuXG4vKipcbiAqIFBsYW5ldGFyeSBjb21wdXRlcyBhIGNvbmp1bmN0aW9uIGJldHdlZW4gdHdvIG1vdmluZyBvYmplY3RzLCBzdWNoIGFzIHBsYW5ldHMuXG4gKlxuICogQ29uanVuY3Rpb24gaXMgZm91bmQgd2l0aCBpbnRlcnBvbGF0aW9uIGFnYWluc3QgbGVuZ3RoIDUgZXBoZW1lcmlkZXMuXG4gKlxuICogdDEsIHQ1IGFyZSB0aW1lcyBvZiBmaXJzdCBhbmQgbGFzdCByb3dzIG9mIGVwaGVtZXJpZGVzLiAgVGhlIHNjYWxlIGlzXG4gKiBhcmJpdHJhcnkuXG4gKlxuICogY3MxIGlzIHRoZSBlcGhlbWVyaXMgb2YgdGhlIGZpcnN0IG9iamVjdC4gVGhlIGNvbHVtbnMgbWF5IGJlIGNlbGVzdGlhbFxuICogY29vcmRpbmF0ZXMgaW4gcmlnaHQgYXNjZW5zaW9uIGFuZCBkZWNsaW5hdGlvbiBvciBlY2xpcHRpYyBjb29yZGluYXRlcyBpblxuICogbG9uZ2l0dWRlIGFuZCBsYXRpdHVkZS5cbiAqXG4gKiBjczIgaXMgdGhlIGVwaGVtZXJpcyBvZiB0aGUgc2Vjb25kIG9iamVjdCwgaW4gdGhlIHNhbWUgZnJhbWUgYXMgdGhlIGZpcnN0LlxuICpcbiAqIFJldHVybiB2YWx1ZSB0IGlzIHRpbWUgb2YgY29uanVuY3Rpb24gaW4gdGhlIHNjYWxlIG9mIHQxLCB0NS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gdDEgLSBqdWxpYW4gZXBoZW1lcmlzIGRheSBvZiBmaXJzdCByb3dcbiAqIEBwYXJhbSB7TnVtYmVyfSB0NSAtIGp1bGlhbiBlcGhlbWVyaXMgZGF5IG9mIGZpZnRoIHJvd1xuICogQHBhcmFtIHtDb29yZFtdfSBjczEgLSBlcGhlbWVyaXMgb2YgZmlyc3QgbW92aW5nIG9iamVjdFxuICogQHBhcmFtIHtDb29yZFtdfSBjczIgLSBlcGhlbWVyaXMgb2YgZGVjb25kIG1vdmluZyBvYmplY3RcbiAqIEByZXR1cm4ge0FycmF5fVxuICogICAge051bWJlcn0gdCAtIHRpbWUgb2YgY29uanVuY3Rpb24gaW4gSkRFXG4gKiAgICB7TnVtYmVyfSDOlGQgLSBpcyB0aGUgYW1vdW50IHRoYXQgb2JqZWN0IDIgd2FzIFwiYWJvdmVcIiBvYmplY3QgMSBhdCB0aGUgdGltZSBvZiBjb25qdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBsYW5ldGFyeSAodDEsIHQ1LCBjczEsIGNzMikge1xuICBpZiAoY3MxLmxlbmd0aCAhPT0gNSB8fCBjczIubGVuZ3RoICE9PSA1KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGaXZlIHJvd3MgcmVxdWlyZWQgaW4gZXBoZW1lcmlkZXMnKVxuICB9XG4gIGNvbnN0IGRyID0gbmV3IEFycmF5KDUpXG4gIGNvbnN0IGRkID0gbmV3IEFycmF5KDUpXG4gIGNzMS5mb3JFYWNoKChyLCBpKSA9PiB7XG4gICAgZHJbaV0gPSBjczJbaV0ucmEgLSBjczFbaV0ucmFcbiAgICBkZFtpXSA9IGNzMltpXS5kZWMgLSBjczFbaV0uZGVjXG4gIH0pXG4gIHJldHVybiBjb25qKHQxLCB0NSwgZHIsIGRkKVxufVxuXG4vKipcbiAqIFN0ZWxsYXIgY29tcHV0ZXMgYSBjb25qdW5jdGlvbiBiZXR3ZWVuIGEgbW92aW5nIGFuZCBub24tbW92aW5nIG9iamVjdC5cbiAqXG4gKiBBcmd1bWVudHMgYW5kIHJldHVybiB2YWx1ZXMgc2FtZSBhcyB3aXRoIFBsYW5ldGFyeSwgZXhjZXB0IHRoZSBub24tbW92aW5nXG4gKiBvYmplY3QgaXMgYzEuICBUaGUgZXBoZW1lcmlzIG9mIHRoZSBtb3Zpbmcgb2JqZWN0IGlzIGNzMi5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gdDEgLSBqdWxpYW4gZXBoZW1lcmlzIGRheSBvZiBmaXJzdCByb3dcbiAqIEBwYXJhbSB7TnVtYmVyfSB0NSAtIGp1bGlhbiBlcGhlbWVyaXMgZGF5IG9mIGZpZnRoIHJvd1xuICogQHBhcmFtIHtDb29yZH0gYzEgLSBlcGhlbWVyaXMgb2Ygbm9uLW1vdmluZyBvYmplY3RcbiAqIEBwYXJhbSB7Q29vcmRbXX0gY3MyIC0gZXBoZW1lcmlzIG9mIG1vdmluZyBvYmplY3RcbiAqIEByZXR1cm4ge0FycmF5fVxuICogICAge051bWJlcn0gdCAtIHRpbWUgb2YgY29uanVuY3Rpb24gaW4gSkRFXG4gKiAgICB7TnVtYmVyfSDOlGQgLSBpcyB0aGUgYW1vdW50IHRoYXQgb2JqZWN0IDIgd2FzIFwiYWJvdmVcIiBvYmplY3QgMSBhdCB0aGUgdGltZSBvZiBjb25qdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0ZWxsYXIgKHQxLCB0NSwgYzEsIGNzMikge1xuICBpZiAoY3MyLmxlbmd0aCAhPT0gNSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRml2ZSByb3dzIHJlcXVpcmVkIGluIGVwaGVtZXJpZGVzJylcbiAgfVxuICBjb25zdCBkciA9IG5ldyBBcnJheSg1KVxuICBjb25zdCBkZCA9IG5ldyBBcnJheSg1KVxuICBjczIuZm9yRWFjaCgociwgaSkgPT4ge1xuICAgIGRyW2ldID0gY3MyW2ldLnJhIC0gYzEucmFcbiAgICBkZFtpXSA9IGNzMltpXS5kZWMgLSBjMS5kZWNcbiAgfSlcbiAgcmV0dXJuIGNvbmoodDEsIHQ1LCBkciwgZGQpXG59XG5cbmNvbnN0IGNvbmogPSBmdW5jdGlvbiAodDEsIHQ1LCBkciwgZGQpIHsgLy8gKHQxLCB0NSBmbG9hdDY0LCBkciwgZGQgW11mbG9hdDY0KSAgKHQsIM6UZCBmbG9hdDY0LCBlcnIgZXJyb3IpXG4gIGxldCBsNSA9IG5ldyBpbnRlcnAuTGVuNSh0MSwgdDUsIGRyKVxuICBjb25zdCB0ID0gbDUuemVybyh0cnVlKVxuICBsNSA9IG5ldyBpbnRlcnAuTGVuNSh0MSwgdDUsIGRkKVxuICBjb25zdCDOlGQgPSBsNS5pbnRlcnBvbGF0ZVhTdHJpY3QodClcbiAgcmV0dXJuIFt0LCDOlGRdXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcGxhbmV0YXJ5LFxuICBzdGVsbGFyXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/conjunction.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/coord.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/coord.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ecliptic: () => (/* binding */ Ecliptic),\n/* harmony export */   Equatorial: () => (/* binding */ Equatorial),\n/* harmony export */   Galactic: () => (/* binding */ Galactic),\n/* harmony export */   Horizontal: () => (/* binding */ Horizontal),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   galactic0Lon1950: () => (/* binding */ galactic0Lon1950),\n/* harmony export */   galacticLon0: () => (/* binding */ galacticLon0),\n/* harmony export */   galacticNorth: () => (/* binding */ galacticNorth),\n/* harmony export */   galacticNorth1950: () => (/* binding */ galacticNorth1950)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/* harmony import */ var _globe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globe.js */ \"./node_modules/astronomia/src/globe.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module coord\n */\n/**\n * Coord: Chapter 13, Transformation of Coordinates.\n *\n * Transforms in this package are provided in two forms, function and method.\n * The results of the two forms should be identical.\n *\n * The function forms pass all arguments and results as single values.  These\n * forms are best used when you are transforming a single pair of coordinates\n * and wish to avoid memory allocation.\n *\n * The method forms take and return pointers to structs.  These forms are best\n * used when you are transforming multiple coordinates and can reuse one or\n * more of the structs.  In this case reuse of structs will minimize\n * allocations, and the struct pointers will pass more efficiently on the\n * stack.  These methods transform their arguments, placing the result in\n * the receiver.  The receiver is then returned for convenience.\n *\n * A number of the functions take sine and cosine of the obliquity of the\n * ecliptic.  This becomes an advantage when you doing multiple transformations\n * with the same obliquity.  The efficiency of computing sine and cosine once\n * and reuse these values far outweighs the overhead of passing one number as\n * opposed to two.\n */\n\n\n\n // eslint-disable-line no-unused-vars\n\n/**\n * @typedef {object} LonLat\n * @property {Number} lon - Longitude (λ) in radians\n * @property {Number} lat - Latitude (β) in radians\n */\n\n/**\n* Ecliptic coordinates are referenced to the plane of the ecliptic.\n*/\nclass Ecliptic {\n  /**\n   * IMPORTANT: Longitudes are measured *positively* westwards\n   * e.g. Washington D.C. +77°04; Vienna -16°23'\n   * @param {Number|LonLat} [lon] - Longitude (λ) in radians\n   * @param {Number} [lat] - Latitude (β) in radians\n   */\n  constructor (lon, lat) {\n    if (typeof lon === 'object') {\n      lat = lon.lat\n      lon = lon.lon\n    }\n    this.lon = lon || 0\n    this.lat = lat || 0\n  }\n\n  /**\n   * converts ecliptic coordinates to equatorial coordinates.\n   * @param {Number} ε - Obliquity\n   * @returns {Equatorial}\n   */\n  toEquatorial (ε) {\n    const [εsin, εcos] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n    const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.lat)\n    const [sλ, cλ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.lon)\n    let ra = Math.atan2(sλ * εcos - (sβ / cβ) * εsin, cλ) // (13.3) p. 93\n    if (ra < 0) {\n      ra += 2 * Math.PI\n    }\n    const dec = Math.asin(sβ * εcos + cβ * εsin * sλ) // (13.4) p. 93\n    return new Equatorial(ra, dec)\n  }\n}\n\n/**\n * Equatorial coordinates are referenced to the Earth's rotational axis.\n */\nclass Equatorial {\n  /**\n   * @param {Number} ra - (float) Right ascension (α) in radians\n   * @param {Number} dec - (float) Declination (δ) in radians\n   */\n  constructor (ra = 0, dec = 0) {\n    this.ra = ra\n    this.dec = dec\n  }\n\n  /**\n   * EqToEcl converts equatorial coordinates to ecliptic coordinates.\n   * @param {Number} ε - Obliquity\n   * @returns {Ecliptic}\n   */\n  toEcliptic (ε) {\n    const [εsin, εcos] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n    const [sα, cα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.ra)\n    const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.dec)\n    const lon = Math.atan2(sα * εcos + (sδ / cδ) * εsin, cα) // (13.1) p. 93\n    const lat = Math.asin(sδ * εcos - cδ * εsin * sα) // (13.2) p. 93\n    return new Ecliptic(lon, lat)\n  }\n\n  /**\n   * EqToHz computes Horizontal coordinates from equatorial coordinates.\n   *\n   * Argument g is the location of the observer on the Earth.  Argument st\n   * is the sidereal time at Greenwich.\n   *\n   * Sidereal time must be consistent with the equatorial coordinates.\n   * If coordinates are apparent, sidereal time must be apparent as well.\n   *\n   * @param {GlobeCoord} g - coordinates of observer on Earth\n   * @param {Number} st - sidereal time at Greenwich at time of observation\n   * @returns {Horizontal}\n   */\n  toHorizontal (g, st) {\n    const H = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Time(st).rad() - g.lon - this.ra\n    const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n    const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(g.lat)\n    const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.dec)\n    const azimuth = Math.atan2(sH, cH * sφ - (sδ / cδ) * cφ) // (13.5) p. 93\n    const altitude = Math.asin(sφ * sδ + cφ * cδ * cH) // (13.6) p. 93\n    return new Horizontal(azimuth, altitude)\n  }\n\n  /**\n   * EqToGal converts equatorial coordinates to galactic coordinates.\n   *\n   * Equatorial coordinates must be referred to the standard equinox of B1950.0.\n   * For conversion to B1950, see package precess and utility functions in\n   * package \"common\".\n   *\n   * @returns {Galactic}\n   */\n  toGalactic () {\n    const [sdα, cdα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(galacticNorth1950.ra - this.ra)\n    const [sgδ, cgδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(galacticNorth1950.dec)\n    const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.dec)\n    const x = Math.atan2(sdα, cdα * sgδ - (sδ / cδ) * cgδ) // (13.7) p. 94\n    // (galactic0Lon1950 + 1.5*math.Pi) = magic number of 303 deg\n    const lon = (galactic0Lon1950 + 1.5 * Math.PI - x) % (2 * Math.PI) // (13.8) p. 94\n    const lat = Math.asin(sδ * sgδ + cδ * cgδ * cdα)\n    return new Galactic(lon, lat)\n  }\n}\n\n/**\n * Horizontal coordinates are referenced to the local horizon of an observer\n * on the surface of the Earth.\n * @param {Number} az - Azimuth (A) in radians\n * @param {Number} alt - Altitude (h) in radians\n */\nclass Horizontal {\n  constructor (az = 0, alt = 0) {\n    this.az = az\n    this.alt = alt\n  }\n\n  /**\n   * transforms horizontal coordinates to equatorial coordinates.\n   *\n   * Sidereal time must be consistent with the equatorial coordinates.\n   * If coordinates are apparent, sidereal time must be apparent as well.\n   * @param {GlobeCoord} g - coordinates of observer on Earth (lat, lon)\n   * @param {Number} st - sidereal time at Greenwich at time of observation.\n   * @returns {Equatorial} (right ascension, declination)\n   */\n  toEquatorial (g, st) {\n    const [sA, cA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.az)\n    const [sh, ch] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.alt)\n    const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(g.lat)\n    const H = Math.atan2(sA, cA * sφ + sh / ch * cφ)\n    const ra = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Time(st).rad() - g.lon - H, 2 * Math.PI)\n    const dec = Math.asin(sφ * sh - cφ * ch * cA)\n    return new Equatorial(ra, dec)\n  }\n}\n\n/**\n * Galactic coordinates are referenced to the plane of the Milky Way.\n * @param {Number} lon - Longitude (l) in radians\n * @param {Number} lat - Latitude (b) in radians\n */\nclass Galactic {\n  constructor (lon = 0, lat = 0) {\n    this.lon = lon\n    this.lat = lat\n  }\n\n  /**\n   * GalToEq converts galactic coordinates to equatorial coordinates.\n   *\n   * Resulting equatorial coordinates will be referred to the standard equinox of\n   * B1950.0.  For subsequent conversion to other epochs, see package precess and\n   * utility functions in package meeus.\n   *\n   * @returns {Equatorial} (right ascension, declination)\n   */\n  toEquatorial () {\n    // (-galactic0Lon1950 - math.Pi/2) = magic number of -123 deg\n    const [sdLon, cdLon] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.lon - galactic0Lon1950 - Math.PI / 2)\n    const [sgδ, cgδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(galacticNorth1950.dec)\n    const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.lat)\n    const y = Math.atan2(sdLon, cdLon * sgδ - (sb / cb) * cgδ)\n    // (galacticNorth1950.RA.Rad() - math.Pi) = magic number of 12.25 deg\n    const ra = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(y + galacticNorth1950.ra - Math.PI, 2 * Math.PI)\n    const dec = Math.asin(sb * sgδ + cb * cgδ * cdLon)\n    return new Equatorial(ra, dec)\n  }\n}\n\n/**\n* equatorial coords for galactic north\n* IAU B1950.0 coordinates of galactic North Pole\n*/\nconst galacticNorth = new Equatorial(\n  new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].RA(12, 49, 0).rad(),\n  27.4 * Math.PI / 180\n)\nconst galacticNorth1950 = galacticNorth\n\n/**\n* Galactic Longitude 0°\n* Meeus gives 33 as the origin of galactic longitudes relative to the\n* ascending node of of the galactic equator.  33 + 90 = 123, the IAU\n* value for origin relative to the equatorial pole.\n*/\nconst galacticLon0 = 33 * Math.PI / 180\nconst galactic0Lon1950 = galacticLon0\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Ecliptic,\n  Equatorial,\n  Horizontal,\n  Galactic,\n  galacticNorth,\n  galacticNorth1950,\n  galacticLon0,\n  galactic0Lon1950\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/coord.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/deltat.js":
/*!***********************************************!*\
  !*** ./node_modules/astronomia/src/deltat.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   deltaT: () => (/* binding */ deltaT)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/* harmony import */ var _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/deltat.js */ \"./node_modules/astronomia/data/deltat.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module deltat\n */\n/**\n * DeltaT: Chapter 10, Dynamical Time and Universal Time.\n *\n * This package uses no functions from the Chapter. Polynoms are from\n * <http://eclipse.gsfc.nasa.gov/SEcat5/deltatpoly.html>, data sets are from\n * <http://maia.usno.navy.mil/ser7/>\n *\n * Functions in this package compute ΔT for various ranges of dates.\n *\n * ΔT = TD - UT1\n *\n * TD = \"Dynamical Time\", which is related to:\n *   ET \"Ephermis Time\", an older term.\n *   TDB \"Barycentric Dynamical Time\", very close to TD.\n *   TDT \"Terrestrial Dynamical Time\", a more correct term.\n *   TT \"Terrestrial Time\", a newer and more correct term.\n *\n * UT = \"Universal Time\", which is related (if ambiguously) to GMT \"Greenwich\n * Mean Time\".\n *\n * Terrestrial Time is effectively equal to International Atomic Time (TAI)\n * plus 32.184 seconds exactly: TT = TAI + 32.184\n * The epoch designated \"J2000.0\" is specified as Julian date 2451545.0 TT,\n * or 2000 January 1, 12h TT. This epoch can also be expressed as\n * 2000 January 1, 11:59:27.816 TAI or 2000 January 1, 11:58:55.816 UTC.\n */\n\n\n\n\n\n// avoids ciclic import { LeapYearGregorian } from './julian.js'\nfunction LeapYearGregorian (y) {\n  return (y % 4 === 0 && y % 100 !== 0) || y % 400 === 0\n}\n\n/**\n * deltaT returns the difference ΔT = TD - UT between Dynamical Time TD and\n * Univeral Time (GMT+12) in seconds\n *\n * Polynoms are from <http://eclipse.gsfc.nasa.gov/SEcat5/deltatpoly.html>\n * and <http://www.staff.science.uu.nl/~gent0113/deltat/deltat_old.htm>\n *\n * @param {Number} dyear - decimal year\n * @returns {Number} ΔT in seconds.\n */\nfunction deltaT (dyear) {\n  let ΔT\n  if (dyear < -500) {\n    ΔT = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner((dyear - 1820) * 0.01, -20, 0, 32)\n  } else if (dyear < 500) {\n    ΔT = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(dyear * 0.01,\n      10583.6, -1014.41, 33.78311, -5.952053, -0.1798452, 0.022174192, 0.0090316521\n    )\n  } else if (dyear < 1600) {\n    ΔT = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner((dyear - 1000) * 0.01,\n      1574.2, -556.01, 71.23472, 0.319781, -0.8503463, -0.005050998, 0.0083572073\n    )\n  } else if (dyear < _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].historic.first) {\n    ΔT = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner((dyear - 1600), 120, -0.9808, -0.01532, 1 / 7129)\n  } else if (dyear < _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].data.first) {\n    ΔT = interpolate(dyear, _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].historic)\n  } else if (dyear < _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].data.last - 0.25) { // -0.25 ~= do not consider last 3 months in dataset\n    ΔT = interpolateData(dyear, _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].data)\n  } else if (dyear < _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].prediction.last) {\n    ΔT = interpolate(dyear, _data_deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].prediction)\n  } else if (dyear < 2050) {\n    ΔT = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner((dyear - 2000) / 100, 62.92, 32.217, 55.89)\n  } else if (dyear < 2150) {\n    ΔT = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner((dyear - 1820) / 100, -205.72, 56.28, 32)\n  } else {\n    const u = (dyear - 1820) / 100\n    ΔT = -20 + 32 * u * u\n  }\n  return ΔT\n}\n\n/**\n * interpolation of dataset\n * @private\n * @param {Number} dyear - julian year\n * @returns {Number} ΔT in seconds.\n */\nfunction interpolate (dyear, data) {\n  const d3 = _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].len3ForInterpolateX(dyear,\n    data.first, data.last, data.table\n  )\n  return d3.interpolateX(dyear)\n}\n\n/**\n * interpolation of dataset from finals2000A with is one entry per month\n * linear interpolation over whole dataset is inaccurate as points per month\n * are not equidistant. Therefore points are approximated using 2nd diff. interpolation\n * from current month using the following two points\n *\n * @private\n * @param {Number} dyear - julian year\n * @returns {Number} ΔT in seconds.\n */\nfunction interpolateData (dyear, data) {\n  const [fyear, fmonth] = data.firstYM\n  const { year, month, first, last } = monthOfYear(dyear)\n  const pos = 12 * (year - fyear) + (month - fmonth)\n  const table = data.table.slice(pos, pos + 3)\n  const d3 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len3(first, last, table)\n  return d3.interpolateX(dyear)\n}\n\n/**\n * Get month of Year from fraction. Fraction differs at leap years.\n * @private\n * @param {Number} dyear - decimal year\n * @return {Object} `{year: Number, month: Number, first: Number, last}`\n */\nfunction monthOfYear (dyear) {\n  // if (!monthOfYear.data) { // memoize yearly fractions per month\n  //   monthOfYear.data = { 0: [], 1: [] }\n  //   for (let m = 0; m <= 12; m++) {\n  //     monthOfYear.data[0][m] = new Calendar(1999, m, 1).toYear() - 1999 // non leap year\n  //     monthOfYear.data[1][m] = new Calendar(2000, m, 1).toYear() - 2000 // leap year\n  //   }\n  // }\n  // console.log(monthOfYear)\n  const year = dyear | 0\n  const f = dyear - year\n  const d = LeapYearGregorian(year) ? 1 : 0\n  const data = monthOfYear.data[d]\n\n  let month = 12 // TODO loop could be improved\n  while (month > 0 && data[month] > f) {\n    month--\n  }\n  const first = year + data[month]\n  const last = month < 11 ? year + data[month + 2] : year + 1 + data[(month + 2) % 12]\n  return { year, month, first, last }\n}\n/**\n  monthOfYear.data[0][m] = new Calendar(1999, m, 1).toYear() - 1999 // non leap year\n  monthOfYear.data[1][m] = new Calendar(2000, m, 1).toYear() - 2000 // leap year\n */\nmonthOfYear.data = [\n  [ // non leap year\n    0,\n    0,\n    0.08493150684921602,\n    0.16164383561635987,\n    0.24657534246580326,\n    0.3287671232876619,\n    0.4136986301368779,\n    0.4958904109589639,\n    0.5808219178081799,\n    0.6657534246576233,\n    0.747945205479482,\n    0.832876712328698,\n    0.915068493150784\n  ],\n  [ // leap year\n    0,\n    0,\n    0.08743169398917416,\n    0.1639344262296163,\n    0.24863387978143692,\n    0.3306010928961314,\n    0.4153005464481794,\n    0.49726775956287383,\n    0.5819672131146945,\n    0.6666666666667425,\n    0.7486338797814369,\n    0.8333333333332575,\n    0.9153005464481794\n  ]\n]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  deltaT\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZGVsdGF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEI7QUFDVztBQUNEOztBQUV0QywwQkFBMEIsb0JBQW9CO0FBQzlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDTztBQUNQO0FBQ0E7QUFDQSxTQUFTLHVEQUFXO0FBQ3BCLElBQUk7QUFDSixTQUFTLHVEQUFXO0FBQ3BCO0FBQ0E7QUFDQSxJQUFJO0FBQ0osU0FBUyx1REFBVztBQUNwQjtBQUNBO0FBQ0EsSUFBSSxpQkFBaUIsdURBQU07QUFDM0IsU0FBUyx1REFBVztBQUNwQixJQUFJLGlCQUFpQix1REFBTTtBQUMzQiw0QkFBNEIsdURBQU07QUFDbEMsSUFBSSxpQkFBaUIsdURBQU0scUJBQXFCO0FBQ2hELGdDQUFnQyx1REFBTTtBQUN0QyxJQUFJLGlCQUFpQix1REFBTTtBQUMzQiw0QkFBNEIsdURBQU07QUFDbEMsSUFBSTtBQUNKLFNBQVMsdURBQVc7QUFDcEIsSUFBSTtBQUNKLFNBQVMsdURBQVc7QUFDcEIsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsYUFBYSw2RUFBMEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMkJBQTJCO0FBQ3JDO0FBQ0E7QUFDQSxpQkFBaUIsOERBQVc7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxRQUFRLEVBQUUsaURBQWlEO0FBQ3ZFO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsNEJBQTRCO0FBQzVCLHVCQUF1QixTQUFTO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZGVsdGF0LmpzP2YxNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBkZWx0YXRcbiAqL1xuLyoqXG4gKiBEZWx0YVQ6IENoYXB0ZXIgMTAsIER5bmFtaWNhbCBUaW1lIGFuZCBVbml2ZXJzYWwgVGltZS5cbiAqXG4gKiBUaGlzIHBhY2thZ2UgdXNlcyBubyBmdW5jdGlvbnMgZnJvbSB0aGUgQ2hhcHRlci4gUG9seW5vbXMgYXJlIGZyb21cbiAqIDxodHRwOi8vZWNsaXBzZS5nc2ZjLm5hc2EuZ292L1NFY2F0NS9kZWx0YXRwb2x5Lmh0bWw+LCBkYXRhIHNldHMgYXJlIGZyb21cbiAqIDxodHRwOi8vbWFpYS51c25vLm5hdnkubWlsL3NlcjcvPlxuICpcbiAqIEZ1bmN0aW9ucyBpbiB0aGlzIHBhY2thZ2UgY29tcHV0ZSDOlFQgZm9yIHZhcmlvdXMgcmFuZ2VzIG9mIGRhdGVzLlxuICpcbiAqIM6UVCA9IFREIC0gVVQxXG4gKlxuICogVEQgPSBcIkR5bmFtaWNhbCBUaW1lXCIsIHdoaWNoIGlzIHJlbGF0ZWQgdG86XG4gKiAgIEVUIFwiRXBoZXJtaXMgVGltZVwiLCBhbiBvbGRlciB0ZXJtLlxuICogICBUREIgXCJCYXJ5Y2VudHJpYyBEeW5hbWljYWwgVGltZVwiLCB2ZXJ5IGNsb3NlIHRvIFRELlxuICogICBURFQgXCJUZXJyZXN0cmlhbCBEeW5hbWljYWwgVGltZVwiLCBhIG1vcmUgY29ycmVjdCB0ZXJtLlxuICogICBUVCBcIlRlcnJlc3RyaWFsIFRpbWVcIiwgYSBuZXdlciBhbmQgbW9yZSBjb3JyZWN0IHRlcm0uXG4gKlxuICogVVQgPSBcIlVuaXZlcnNhbCBUaW1lXCIsIHdoaWNoIGlzIHJlbGF0ZWQgKGlmIGFtYmlndW91c2x5KSB0byBHTVQgXCJHcmVlbndpY2hcbiAqIE1lYW4gVGltZVwiLlxuICpcbiAqIFRlcnJlc3RyaWFsIFRpbWUgaXMgZWZmZWN0aXZlbHkgZXF1YWwgdG8gSW50ZXJuYXRpb25hbCBBdG9taWMgVGltZSAoVEFJKVxuICogcGx1cyAzMi4xODQgc2Vjb25kcyBleGFjdGx5OiBUVCA9IFRBSSArIDMyLjE4NFxuICogVGhlIGVwb2NoIGRlc2lnbmF0ZWQgXCJKMjAwMC4wXCIgaXMgc3BlY2lmaWVkIGFzIEp1bGlhbiBkYXRlIDI0NTE1NDUuMCBUVCxcbiAqIG9yIDIwMDAgSmFudWFyeSAxLCAxMmggVFQuIFRoaXMgZXBvY2ggY2FuIGFsc28gYmUgZXhwcmVzc2VkIGFzXG4gKiAyMDAwIEphbnVhcnkgMSwgMTE6NTk6MjcuODE2IFRBSSBvciAyMDAwIEphbnVhcnkgMSwgMTE6NTg6NTUuODE2IFVUQy5cbiAqL1xuXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5pbXBvcnQgaW50ZXJwIGZyb20gJy4vaW50ZXJwb2xhdGlvbi5qcydcbmltcG9ydCBkZWx0YXQgZnJvbSAnLi4vZGF0YS9kZWx0YXQuanMnXG5cbi8vIGF2b2lkcyBjaWNsaWMgaW1wb3J0IHsgTGVhcFllYXJHcmVnb3JpYW4gfSBmcm9tICcuL2p1bGlhbi5qcydcbmZ1bmN0aW9uIExlYXBZZWFyR3JlZ29yaWFuICh5KSB7XG4gIHJldHVybiAoeSAlIDQgPT09IDAgJiYgeSAlIDEwMCAhPT0gMCkgfHwgeSAlIDQwMCA9PT0gMFxufVxuXG4vKipcbiAqIGRlbHRhVCByZXR1cm5zIHRoZSBkaWZmZXJlbmNlIM6UVCA9IFREIC0gVVQgYmV0d2VlbiBEeW5hbWljYWwgVGltZSBURCBhbmRcbiAqIFVuaXZlcmFsIFRpbWUgKEdNVCsxMikgaW4gc2Vjb25kc1xuICpcbiAqIFBvbHlub21zIGFyZSBmcm9tIDxodHRwOi8vZWNsaXBzZS5nc2ZjLm5hc2EuZ292L1NFY2F0NS9kZWx0YXRwb2x5Lmh0bWw+XG4gKiBhbmQgPGh0dHA6Ly93d3cuc3RhZmYuc2NpZW5jZS51dS5ubC9+Z2VudDAxMTMvZGVsdGF0L2RlbHRhdF9vbGQuaHRtPlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBkeWVhciAtIGRlY2ltYWwgeWVhclxuICogQHJldHVybnMge051bWJlcn0gzpRUIGluIHNlY29uZHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWx0YVQgKGR5ZWFyKSB7XG4gIGxldCDOlFRcbiAgaWYgKGR5ZWFyIDwgLTUwMCkge1xuICAgIM6UVCA9IGJhc2UuaG9ybmVyKChkeWVhciAtIDE4MjApICogMC4wMSwgLTIwLCAwLCAzMilcbiAgfSBlbHNlIGlmIChkeWVhciA8IDUwMCkge1xuICAgIM6UVCA9IGJhc2UuaG9ybmVyKGR5ZWFyICogMC4wMSxcbiAgICAgIDEwNTgzLjYsIC0xMDE0LjQxLCAzMy43ODMxMSwgLTUuOTUyMDUzLCAtMC4xNzk4NDUyLCAwLjAyMjE3NDE5MiwgMC4wMDkwMzE2NTIxXG4gICAgKVxuICB9IGVsc2UgaWYgKGR5ZWFyIDwgMTYwMCkge1xuICAgIM6UVCA9IGJhc2UuaG9ybmVyKChkeWVhciAtIDEwMDApICogMC4wMSxcbiAgICAgIDE1NzQuMiwgLTU1Ni4wMSwgNzEuMjM0NzIsIDAuMzE5NzgxLCAtMC44NTAzNDYzLCAtMC4wMDUwNTA5OTgsIDAuMDA4MzU3MjA3M1xuICAgIClcbiAgfSBlbHNlIGlmIChkeWVhciA8IGRlbHRhdC5oaXN0b3JpYy5maXJzdCkge1xuICAgIM6UVCA9IGJhc2UuaG9ybmVyKChkeWVhciAtIDE2MDApLCAxMjAsIC0wLjk4MDgsIC0wLjAxNTMyLCAxIC8gNzEyOSlcbiAgfSBlbHNlIGlmIChkeWVhciA8IGRlbHRhdC5kYXRhLmZpcnN0KSB7XG4gICAgzpRUID0gaW50ZXJwb2xhdGUoZHllYXIsIGRlbHRhdC5oaXN0b3JpYylcbiAgfSBlbHNlIGlmIChkeWVhciA8IGRlbHRhdC5kYXRhLmxhc3QgLSAwLjI1KSB7IC8vIC0wLjI1IH49IGRvIG5vdCBjb25zaWRlciBsYXN0IDMgbW9udGhzIGluIGRhdGFzZXRcbiAgICDOlFQgPSBpbnRlcnBvbGF0ZURhdGEoZHllYXIsIGRlbHRhdC5kYXRhKVxuICB9IGVsc2UgaWYgKGR5ZWFyIDwgZGVsdGF0LnByZWRpY3Rpb24ubGFzdCkge1xuICAgIM6UVCA9IGludGVycG9sYXRlKGR5ZWFyLCBkZWx0YXQucHJlZGljdGlvbilcbiAgfSBlbHNlIGlmIChkeWVhciA8IDIwNTApIHtcbiAgICDOlFQgPSBiYXNlLmhvcm5lcigoZHllYXIgLSAyMDAwKSAvIDEwMCwgNjIuOTIsIDMyLjIxNywgNTUuODkpXG4gIH0gZWxzZSBpZiAoZHllYXIgPCAyMTUwKSB7XG4gICAgzpRUID0gYmFzZS5ob3JuZXIoKGR5ZWFyIC0gMTgyMCkgLyAxMDAsIC0yMDUuNzIsIDU2LjI4LCAzMilcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB1ID0gKGR5ZWFyIC0gMTgyMCkgLyAxMDBcbiAgICDOlFQgPSAtMjAgKyAzMiAqIHUgKiB1XG4gIH1cbiAgcmV0dXJuIM6UVFxufVxuXG4vKipcbiAqIGludGVycG9sYXRpb24gb2YgZGF0YXNldFxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7TnVtYmVyfSBkeWVhciAtIGp1bGlhbiB5ZWFyXG4gKiBAcmV0dXJucyB7TnVtYmVyfSDOlFQgaW4gc2Vjb25kcy5cbiAqL1xuZnVuY3Rpb24gaW50ZXJwb2xhdGUgKGR5ZWFyLCBkYXRhKSB7XG4gIGNvbnN0IGQzID0gaW50ZXJwLmxlbjNGb3JJbnRlcnBvbGF0ZVgoZHllYXIsXG4gICAgZGF0YS5maXJzdCwgZGF0YS5sYXN0LCBkYXRhLnRhYmxlXG4gIClcbiAgcmV0dXJuIGQzLmludGVycG9sYXRlWChkeWVhcilcbn1cblxuLyoqXG4gKiBpbnRlcnBvbGF0aW9uIG9mIGRhdGFzZXQgZnJvbSBmaW5hbHMyMDAwQSB3aXRoIGlzIG9uZSBlbnRyeSBwZXIgbW9udGhcbiAqIGxpbmVhciBpbnRlcnBvbGF0aW9uIG92ZXIgd2hvbGUgZGF0YXNldCBpcyBpbmFjY3VyYXRlIGFzIHBvaW50cyBwZXIgbW9udGhcbiAqIGFyZSBub3QgZXF1aWRpc3RhbnQuIFRoZXJlZm9yZSBwb2ludHMgYXJlIGFwcHJveGltYXRlZCB1c2luZyAybmQgZGlmZi4gaW50ZXJwb2xhdGlvblxuICogZnJvbSBjdXJyZW50IG1vbnRoIHVzaW5nIHRoZSBmb2xsb3dpbmcgdHdvIHBvaW50c1xuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge051bWJlcn0gZHllYXIgLSBqdWxpYW4geWVhclxuICogQHJldHVybnMge051bWJlcn0gzpRUIGluIHNlY29uZHMuXG4gKi9cbmZ1bmN0aW9uIGludGVycG9sYXRlRGF0YSAoZHllYXIsIGRhdGEpIHtcbiAgY29uc3QgW2Z5ZWFyLCBmbW9udGhdID0gZGF0YS5maXJzdFlNXG4gIGNvbnN0IHsgeWVhciwgbW9udGgsIGZpcnN0LCBsYXN0IH0gPSBtb250aE9mWWVhcihkeWVhcilcbiAgY29uc3QgcG9zID0gMTIgKiAoeWVhciAtIGZ5ZWFyKSArIChtb250aCAtIGZtb250aClcbiAgY29uc3QgdGFibGUgPSBkYXRhLnRhYmxlLnNsaWNlKHBvcywgcG9zICsgMylcbiAgY29uc3QgZDMgPSBuZXcgaW50ZXJwLkxlbjMoZmlyc3QsIGxhc3QsIHRhYmxlKVxuICByZXR1cm4gZDMuaW50ZXJwb2xhdGVYKGR5ZWFyKVxufVxuXG4vKipcbiAqIEdldCBtb250aCBvZiBZZWFyIGZyb20gZnJhY3Rpb24uIEZyYWN0aW9uIGRpZmZlcnMgYXQgbGVhcCB5ZWFycy5cbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge051bWJlcn0gZHllYXIgLSBkZWNpbWFsIHllYXJcbiAqIEByZXR1cm4ge09iamVjdH0gYHt5ZWFyOiBOdW1iZXIsIG1vbnRoOiBOdW1iZXIsIGZpcnN0OiBOdW1iZXIsIGxhc3R9YFxuICovXG5mdW5jdGlvbiBtb250aE9mWWVhciAoZHllYXIpIHtcbiAgLy8gaWYgKCFtb250aE9mWWVhci5kYXRhKSB7IC8vIG1lbW9pemUgeWVhcmx5IGZyYWN0aW9ucyBwZXIgbW9udGhcbiAgLy8gICBtb250aE9mWWVhci5kYXRhID0geyAwOiBbXSwgMTogW10gfVxuICAvLyAgIGZvciAobGV0IG0gPSAwOyBtIDw9IDEyOyBtKyspIHtcbiAgLy8gICAgIG1vbnRoT2ZZZWFyLmRhdGFbMF1bbV0gPSBuZXcgQ2FsZW5kYXIoMTk5OSwgbSwgMSkudG9ZZWFyKCkgLSAxOTk5IC8vIG5vbiBsZWFwIHllYXJcbiAgLy8gICAgIG1vbnRoT2ZZZWFyLmRhdGFbMV1bbV0gPSBuZXcgQ2FsZW5kYXIoMjAwMCwgbSwgMSkudG9ZZWFyKCkgLSAyMDAwIC8vIGxlYXAgeWVhclxuICAvLyAgIH1cbiAgLy8gfVxuICAvLyBjb25zb2xlLmxvZyhtb250aE9mWWVhcilcbiAgY29uc3QgeWVhciA9IGR5ZWFyIHwgMFxuICBjb25zdCBmID0gZHllYXIgLSB5ZWFyXG4gIGNvbnN0IGQgPSBMZWFwWWVhckdyZWdvcmlhbih5ZWFyKSA/IDEgOiAwXG4gIGNvbnN0IGRhdGEgPSBtb250aE9mWWVhci5kYXRhW2RdXG5cbiAgbGV0IG1vbnRoID0gMTIgLy8gVE9ETyBsb29wIGNvdWxkIGJlIGltcHJvdmVkXG4gIHdoaWxlIChtb250aCA+IDAgJiYgZGF0YVttb250aF0gPiBmKSB7XG4gICAgbW9udGgtLVxuICB9XG4gIGNvbnN0IGZpcnN0ID0geWVhciArIGRhdGFbbW9udGhdXG4gIGNvbnN0IGxhc3QgPSBtb250aCA8IDExID8geWVhciArIGRhdGFbbW9udGggKyAyXSA6IHllYXIgKyAxICsgZGF0YVsobW9udGggKyAyKSAlIDEyXVxuICByZXR1cm4geyB5ZWFyLCBtb250aCwgZmlyc3QsIGxhc3QgfVxufVxuLyoqXG4gIG1vbnRoT2ZZZWFyLmRhdGFbMF1bbV0gPSBuZXcgQ2FsZW5kYXIoMTk5OSwgbSwgMSkudG9ZZWFyKCkgLSAxOTk5IC8vIG5vbiBsZWFwIHllYXJcbiAgbW9udGhPZlllYXIuZGF0YVsxXVttXSA9IG5ldyBDYWxlbmRhcigyMDAwLCBtLCAxKS50b1llYXIoKSAtIDIwMDAgLy8gbGVhcCB5ZWFyXG4gKi9cbm1vbnRoT2ZZZWFyLmRhdGEgPSBbXG4gIFsgLy8gbm9uIGxlYXAgeWVhclxuICAgIDAsXG4gICAgMCxcbiAgICAwLjA4NDkzMTUwNjg0OTIxNjAyLFxuICAgIDAuMTYxNjQzODM1NjE2MzU5ODcsXG4gICAgMC4yNDY1NzUzNDI0NjU4MDMyNixcbiAgICAwLjMyODc2NzEyMzI4NzY2MTksXG4gICAgMC40MTM2OTg2MzAxMzY4Nzc5LFxuICAgIDAuNDk1ODkwNDEwOTU4OTYzOSxcbiAgICAwLjU4MDgyMTkxNzgwODE3OTksXG4gICAgMC42NjU3NTM0MjQ2NTc2MjMzLFxuICAgIDAuNzQ3OTQ1MjA1NDc5NDgyLFxuICAgIDAuODMyODc2NzEyMzI4Njk4LFxuICAgIDAuOTE1MDY4NDkzMTUwNzg0XG4gIF0sXG4gIFsgLy8gbGVhcCB5ZWFyXG4gICAgMCxcbiAgICAwLFxuICAgIDAuMDg3NDMxNjkzOTg5MTc0MTYsXG4gICAgMC4xNjM5MzQ0MjYyMjk2MTYzLFxuICAgIDAuMjQ4NjMzODc5NzgxNDM2OTIsXG4gICAgMC4zMzA2MDEwOTI4OTYxMzE0LFxuICAgIDAuNDE1MzAwNTQ2NDQ4MTc5NCxcbiAgICAwLjQ5NzI2Nzc1OTU2Mjg3MzgzLFxuICAgIDAuNTgxOTY3MjEzMTE0Njk0NSxcbiAgICAwLjY2NjY2NjY2NjY2Njc0MjUsXG4gICAgMC43NDg2MzM4Nzk3ODE0MzY5LFxuICAgIDAuODMzMzMzMzMzMzMzMjU3NSxcbiAgICAwLjkxNTMwMDU0NjQ0ODE3OTRcbiAgXVxuXVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRlbHRhVFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/deltat.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/eclipse.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/eclipse.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TYPE: () => (/* binding */ TYPE),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   lunar: () => (/* binding */ lunar),\n/* harmony export */   solar: () => (/* binding */ solar)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _moonphase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./moonphase.js */ \"./node_modules/astronomia/src/moonphase.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module eclipse\n */\n/**\n * Eclipse: Chapter 54, Eclipses.\n */\n\n\n\n/**\n * @private\n */\nconst g = function (k, jm, c1, c2) { // (k, jm, c1, c2 float64)  (eclipse bool, jdeMax, γ, u, Mʹ float64)\n  const ck = 1 / 1236.85\n  const p = Math.PI / 180\n  const T = k * ck\n  const F = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 160.7108 * p, 390.67050284 * p / ck,\n    -0.0016118 * p, -0.00000227 * p, 0.000000011 * p)\n  if (Math.abs(Math.sin(F)) > 0.36) {\n    return [false] // no eclipse\n  }\n  const eclipse = true\n  const E = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1, -0.002516, -0.0000074)\n  const M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 2.5534 * p, 29.1053567 * p / ck,\n    -0.0000014 * p, -0.00000011 * p)\n  const Mʹ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 201.5643 * p, 385.81693528 * p / ck,\n    0.0107582 * p, 0.00001238 * p, -0.000000058 * p)\n  const Ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 124.7746 * p, -1.56375588 * p / ck,\n    0.0020672 * p, 0.00000215 * p)\n  const sΩ = Math.sin(Ω)\n  const F1 = F - 0.02665 * p * sΩ\n  const A1 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 299.77 * p, 0.107408 * p / ck, -0.009173 * p)\n  // (54.1) p. 380\n  const jdeMax = jm +\n    c1 * Math.sin(Mʹ) +\n    c2 * Math.sin(M) * E +\n    0.0161 * Math.sin(2 * Mʹ) +\n    -0.0097 * Math.sin(2 * F1) +\n    0.0073 * Math.sin(Mʹ - M) * E +\n    -0.005 * Math.sin(Mʹ + M) * E +\n    -0.0023 * Math.sin(Mʹ - 2 * F1) +\n    0.0021 * Math.sin(2 * M) * E +\n    0.0012 * Math.sin(Mʹ + 2 * F1) +\n    0.0006 * Math.sin(2 * Mʹ + M) * E +\n    -0.0004 * Math.sin(3 * Mʹ) +\n    -0.0003 * Math.sin(M + 2 * F1) * E +\n    0.0003 * Math.sin(A1) +\n    -0.0002 * Math.sin(M - 2 * F1) * E +\n    -0.0002 * Math.sin(2 * Mʹ - M) * E +\n    -0.0002 * sΩ\n  const P = 0.207 * Math.sin(M) * E +\n    0.0024 * Math.sin(2 * M) * E +\n    -0.0392 * Math.sin(Mʹ) +\n    0.0116 * Math.sin(2 * Mʹ) +\n    -0.0073 * Math.sin(Mʹ + M) * E +\n    0.0067 * Math.sin(Mʹ - M) * E +\n    0.0118 * Math.sin(2 * F1)\n  const Q = 5.2207 +\n    -0.0048 * Math.cos(M) * E +\n    0.002 * Math.cos(2 * M) * E +\n    -0.3299 * Math.cos(Mʹ) +\n    -0.006 * Math.cos(Mʹ + M) * E +\n    0.0041 * Math.cos(Mʹ - M) * E\n  const [sF1, cF1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(F1)\n  const W = Math.abs(cF1)\n  const γ = (P * cF1 + Q * sF1) * (1 - 0.0048 * W)\n  const u = 0.0059 +\n    0.0046 * Math.cos(M) * E +\n    -0.0182 * Math.cos(Mʹ) +\n    0.0004 * Math.cos(2 * Mʹ) +\n    -0.0005 * Math.cos(M + Mʹ)\n  return [eclipse, jdeMax, γ, u, Mʹ] // (eclipse bool, jdeMax, γ, u, Mʹ float64)\n}\n\n/**\n * Eclipse type identifiers returned from Solar and Lunar.\n */\nconst TYPE = {\n  None: 0,\n  Partial: 1, // for solar eclipses\n  Annular: 2, // solar\n  AnnularTotal: 3, // solar\n  Penumbral: 4, // for lunar eclipses\n  Umbral: 5, // lunar\n  Total: 6 // solar or lunar\n}\n\n/**\n * Snap returns k at specified quarter q nearest year y.\n * Cut and paste from moonphase.  Time corresponding to k needed in these\n * algorithms but otherwise not meaningful enough to export from moonphase.\n */\nconst snap = function (y, q) { // (y, q float64)  float64\n  const k = (y - 2000) * 12.3685 // (49.2) p. 350\n  return Math.floor(k - q + 0.5) + q\n}\n\n/**\n * Solar computes quantities related to solar eclipses.\n *\n * Argument year is a decimal year specifying a date.\n *\n * eclipseType will be None, Partial, Annular, AnnularTotal, or Total.\n * If None, none of the other return values may be meaningful.\n *\n * central is true if the center of the eclipse shadow touches the Earth.\n *\n * jdeMax is the jde when the center of the eclipse shadow is closest to the\n * Earth center, in a plane through the center of the Earth.\n *\n * γ is the distance from the eclipse shadow center to the Earth center\n * at time jdeMax.\n *\n * u is the radius of the Moon's umbral cone in the plane of the Earth.\n *\n * p is the radius of the penumbral cone.\n *\n * mag is eclipse magnitude for partial eclipses.  It is not valid for other\n * eclipse types.\n *\n * γ, u, and p are in units of equatorial Earth radii.\n */\nfunction solar (year) { // (year float64)  (eclipseType int, central bool, jdeMax, γ, u, p, mag float64)\n  let eclipseType = TYPE.None\n  let mag\n\n  const [e, jdeMax, γ, u, _] = g(snap(year, 0), _moonphase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].meanNew(year), -0.4075, 0.1721) // eslint-disable-line no-unused-vars\n\n  const p = u + 0.5461\n  if (!e) {\n    return { type: eclipseType } // no eclipse\n  }\n  const aγ = Math.abs(γ)\n  if (aγ > 1.5433 + u) {\n    return { type: eclipseType } // no eclipse\n  }\n  const central = aγ < 0.9972 // eclipse center touches Earth\n\n  if (!central) {\n    eclipseType = TYPE.Partial // most common case\n    if (aγ < 1.026) { // umbral cone may touch earth\n      if (aγ < 0.9972 + Math.abs(u)) { // total or annular\n        eclipseType = TYPE.Total // report total in both cases\n      }\n    }\n  } else if (u < 0) {\n    eclipseType = TYPE.Total\n  } else if (u > 0.0047) {\n    eclipseType = TYPE.Annular\n  } else {\n    const ω = 0.00464 * Math.sqrt(1 - γ * γ)\n    if (u < ω) {\n      eclipseType = TYPE.AnnularTotal\n    } else {\n      eclipseType = TYPE.Annular\n    }\n  }\n\n  if (eclipseType === TYPE.Partial) {\n    // (54.2) p. 382\n    mag = (1.5433 + u - aγ) / (0.5461 + 2 * u)\n  }\n\n  return {\n    type: eclipseType,\n    central,\n    jdeMax,\n    magnitude: mag,\n    distance: γ,\n    umbral: u,\n    penumbral: p\n  }\n}\n\n/**\n * Lunar computes quantities related to lunar eclipses.\n *\n * Argument year is a decimal year specifying a date.\n *\n * eclipseType will be None, Penumbral, Umbral, or Total.\n * If None, none of the other return values may be meaningful.\n *\n * jdeMax is the jde when the center of the eclipse shadow is closest to the\n * Moon center, in a plane through the center of the Moon.\n *\n * γ is the distance from the eclipse shadow center to the moon center\n * at time jdeMax.\n *\n * σ is the radius of the umbral cone in the plane of the Moon.\n *\n * ρ is the radius of the penumbral cone.\n *\n * mag is eclipse magnitude.\n *\n * sd- return values are semidurations of the phases of the eclipse, in days.\n *\n * γ, σ, and ρ are in units of equatorial Earth radii.\n */\nfunction lunar (year) { // (year float64)  (eclipseType int, jdeMax, γ, ρ, σ, mag, sdTotal, sdPartial, sdPenumbral float64)\n  let eclipseType = TYPE.None\n  let mag\n  let sdTotal\n  let sdPartial\n  let sdPenumbral\n\n  const [e, jdeMax, γ, u, Mʹ] = g(snap(year, 0.5),\n    _moonphase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].meanFull(year), -0.4065, 0.1727)\n  if (!e) {\n    return { type: eclipseType } // no eclipse\n  }\n  const ρ = 1.2848 + u\n  const σ = 0.7403 - u\n  const aγ = Math.abs(γ)\n  mag = (1.0128 - u - aγ) / 0.545 // (54.3) p. 382\n\n  if (mag > 1) {\n    eclipseType = TYPE.Total\n  } else if (mag > 0) {\n    eclipseType = TYPE.Umbral\n  } else {\n    mag = (1.5573 + u - aγ) / 0.545 // (54.4) p. 382\n    if (mag < 0) {\n      return { type: eclipseType } // no eclipse\n    }\n    eclipseType = TYPE.Penumbral\n  }\n\n  const p = 1.0128 - u\n  const t = 0.4678 - u\n  const n = 0.5458 + 0.04 * Math.cos(Mʹ)\n  const γ2 = γ * γ\n\n  /* eslint-disable no-fallthrough */\n  switch (eclipseType) {\n    case TYPE.Total: {\n      sdTotal = Math.sqrt(t * t - γ2) / n / 24\n    }\n    case TYPE.Umbral: {\n      sdPartial = Math.sqrt(p * p - γ2) / n / 24\n    }\n    default: {\n      const h = 1.5573 + u\n      sdPenumbral = Math.sqrt(h * h - γ2) / n / 24\n    }\n  }\n  /* eslint-enable */\n\n  return {\n    type: eclipseType,\n    jdeMax,\n    magnitude: mag,\n    distance: γ,\n    umbral: σ,\n    penumbral: ρ,\n    sdTotal,\n    sdPartial,\n    sdPenumbral\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  TYPE,\n  solar,\n  lunar\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/eclipse.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/elementequinox.js":
/*!*******************************************************!*\
  !*** ./node_modules/astronomia/src/elementequinox.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Elements: () => (/* binding */ Elements),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   reduceB1950FK4ToJ2000FK5: () => (/* binding */ reduceB1950FK4ToJ2000FK5),\n/* harmony export */   reduceB1950ToJ2000: () => (/* binding */ reduceB1950ToJ2000)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module elementequinox\n */\n/**\n * Elementequinox: Chapter 24, Reduction of Ecliptical Elements\n * from one Equinox to another one.\n *\n * See package precess for the method EclipticPrecessor.ReduceElements and\n * associated example.  The method is described in this chapter but located\n * in package precess so that it can be a method of EclipticPrecessor.\n */\n\n\n\n/**\n * Elements are the orbital elements of a solar system object which change\n * from one equinox to another.\n *\n * @param {Number} inc  - inclination\n * @param {Number} node - longitude of ascending node (Ω)\n * @param {Number} peri - argument of perihelion (ω)\n */\nclass Elements {\n  constructor (inc, node, peri) {\n    if (typeof inc === 'object') {\n      node = inc.pode\n      peri = inc.peri\n      inc = inc.inc\n    }\n    this.inc = inc || 0\n    this.node = node || 0\n    this.peri = peri || 0\n  }\n}\n\n// (24.4) p. 161\nconst S = 0.0001139788\nconst C = 0.9999999935\n/**\n * ReduceB1950ToJ2000 reduces orbital elements of a solar system body from\n * equinox B1950 to J2000.\n *\n * @param {Elements} eFrom\n * @returns {Elements} eTo\n */\nfunction reduceB1950ToJ2000 (eFrom) {\n  const W = eFrom.node - 174.298782 * Math.PI / 180\n  const [si, ci] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eFrom.inc)\n  const [sW, cW] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(W)\n  const A = si * sW\n  const B = C * si * cW - S * ci\n  const eTo = new Elements()\n  eTo.inc = Math.asin(Math.hypot(A, B))\n  eTo.node = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(174.997194 * Math.PI / 180 + Math.atan2(A, B),\n    2 * Math.PI)\n  eTo.peri = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(eFrom.peri + Math.atan2(-S * sW, C * si - S * ci * cW),\n    2 * Math.PI)\n  return eTo\n}\n\nconst Lp = 4.50001688 * Math.PI / 180\nconst L = 5.19856209 * Math.PI / 180\nconst J = 0.00651966 * Math.PI / 180\n\n/**\n * ReduceB1950ToJ2000 reduces orbital elements of a solar system body from\n * equinox B1950 in the FK4 system to equinox J2000 in the FK5 system.\n *\n * @param {Elements} eFrom\n * @returns {Elements} eTo\n */\nfunction reduceB1950FK4ToJ2000FK5 (eFrom) {\n  const W = L + eFrom.node\n  const [si, ci] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eFrom.inc)\n  const [sJ, cJ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(J)\n  const [sW, cW] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(W)\n  const eTo = new Elements()\n  eTo.inc = Math.acos(ci * cJ - si * sJ * cW)\n  eTo.node = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(Math.atan2(si * sW, ci * sJ + si * cJ * cW) - Lp,\n    2 * Math.PI)\n  eTo.peri = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(eFrom.peri + Math.atan2(sJ * sW, si * cJ + ci * sJ * cW),\n    2 * Math.PI)\n  return eTo\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Elements,\n  reduceB1950ToJ2000,\n  reduceB1950FK4ToJ2000FK5\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZWxlbWVudGVxdWlub3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0Qjs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhLFVBQVU7QUFDdkI7QUFDTztBQUNQO0FBQ0EsbUJBQW1CLHVEQUFXO0FBQzlCLG1CQUFtQix1REFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscURBQVM7QUFDdEI7QUFDQSxhQUFhLHFEQUFTO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ087QUFDUDtBQUNBLG1CQUFtQix1REFBVztBQUM5QixtQkFBbUIsdURBQVc7QUFDOUIsbUJBQW1CLHVEQUFXO0FBQzlCO0FBQ0E7QUFDQSxhQUFhLHFEQUFTO0FBQ3RCO0FBQ0EsYUFBYSxxREFBUztBQUN0QjtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2VsZW1lbnRlcXVpbm94LmpzPzQwNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBlbGVtZW50ZXF1aW5veFxuICovXG4vKipcbiAqIEVsZW1lbnRlcXVpbm94OiBDaGFwdGVyIDI0LCBSZWR1Y3Rpb24gb2YgRWNsaXB0aWNhbCBFbGVtZW50c1xuICogZnJvbSBvbmUgRXF1aW5veCB0byBhbm90aGVyIG9uZS5cbiAqXG4gKiBTZWUgcGFja2FnZSBwcmVjZXNzIGZvciB0aGUgbWV0aG9kIEVjbGlwdGljUHJlY2Vzc29yLlJlZHVjZUVsZW1lbnRzIGFuZFxuICogYXNzb2NpYXRlZCBleGFtcGxlLiAgVGhlIG1ldGhvZCBpcyBkZXNjcmliZWQgaW4gdGhpcyBjaGFwdGVyIGJ1dCBsb2NhdGVkXG4gKiBpbiBwYWNrYWdlIHByZWNlc3Mgc28gdGhhdCBpdCBjYW4gYmUgYSBtZXRob2Qgb2YgRWNsaXB0aWNQcmVjZXNzb3IuXG4gKi9cblxuaW1wb3J0IGJhc2UgZnJvbSAnLi9iYXNlLmpzJ1xuXG4vKipcbiAqIEVsZW1lbnRzIGFyZSB0aGUgb3JiaXRhbCBlbGVtZW50cyBvZiBhIHNvbGFyIHN5c3RlbSBvYmplY3Qgd2hpY2ggY2hhbmdlXG4gKiBmcm9tIG9uZSBlcXVpbm94IHRvIGFub3RoZXIuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGluYyAgLSBpbmNsaW5hdGlvblxuICogQHBhcmFtIHtOdW1iZXJ9IG5vZGUgLSBsb25naXR1ZGUgb2YgYXNjZW5kaW5nIG5vZGUgKM6pKVxuICogQHBhcmFtIHtOdW1iZXJ9IHBlcmkgLSBhcmd1bWVudCBvZiBwZXJpaGVsaW9uICjPiSlcbiAqL1xuZXhwb3J0IGNsYXNzIEVsZW1lbnRzIHtcbiAgY29uc3RydWN0b3IgKGluYywgbm9kZSwgcGVyaSkge1xuICAgIGlmICh0eXBlb2YgaW5jID09PSAnb2JqZWN0Jykge1xuICAgICAgbm9kZSA9IGluYy5wb2RlXG4gICAgICBwZXJpID0gaW5jLnBlcmlcbiAgICAgIGluYyA9IGluYy5pbmNcbiAgICB9XG4gICAgdGhpcy5pbmMgPSBpbmMgfHwgMFxuICAgIHRoaXMubm9kZSA9IG5vZGUgfHwgMFxuICAgIHRoaXMucGVyaSA9IHBlcmkgfHwgMFxuICB9XG59XG5cbi8vICgyNC40KSBwLiAxNjFcbmNvbnN0IFMgPSAwLjAwMDExMzk3ODhcbmNvbnN0IEMgPSAwLjk5OTk5OTk5MzVcbi8qKlxuICogUmVkdWNlQjE5NTBUb0oyMDAwIHJlZHVjZXMgb3JiaXRhbCBlbGVtZW50cyBvZiBhIHNvbGFyIHN5c3RlbSBib2R5IGZyb21cbiAqIGVxdWlub3ggQjE5NTAgdG8gSjIwMDAuXG4gKlxuICogQHBhcmFtIHtFbGVtZW50c30gZUZyb21cbiAqIEByZXR1cm5zIHtFbGVtZW50c30gZVRvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWR1Y2VCMTk1MFRvSjIwMDAgKGVGcm9tKSB7XG4gIGNvbnN0IFcgPSBlRnJvbS5ub2RlIC0gMTc0LjI5ODc4MiAqIE1hdGguUEkgLyAxODBcbiAgY29uc3QgW3NpLCBjaV0gPSBiYXNlLnNpbmNvcyhlRnJvbS5pbmMpXG4gIGNvbnN0IFtzVywgY1ddID0gYmFzZS5zaW5jb3MoVylcbiAgY29uc3QgQSA9IHNpICogc1dcbiAgY29uc3QgQiA9IEMgKiBzaSAqIGNXIC0gUyAqIGNpXG4gIGNvbnN0IGVUbyA9IG5ldyBFbGVtZW50cygpXG4gIGVUby5pbmMgPSBNYXRoLmFzaW4oTWF0aC5oeXBvdChBLCBCKSlcbiAgZVRvLm5vZGUgPSBiYXNlLnBtb2QoMTc0Ljk5NzE5NCAqIE1hdGguUEkgLyAxODAgKyBNYXRoLmF0YW4yKEEsIEIpLFxuICAgIDIgKiBNYXRoLlBJKVxuICBlVG8ucGVyaSA9IGJhc2UucG1vZChlRnJvbS5wZXJpICsgTWF0aC5hdGFuMigtUyAqIHNXLCBDICogc2kgLSBTICogY2kgKiBjVyksXG4gICAgMiAqIE1hdGguUEkpXG4gIHJldHVybiBlVG9cbn1cblxuY29uc3QgTHAgPSA0LjUwMDAxNjg4ICogTWF0aC5QSSAvIDE4MFxuY29uc3QgTCA9IDUuMTk4NTYyMDkgKiBNYXRoLlBJIC8gMTgwXG5jb25zdCBKID0gMC4wMDY1MTk2NiAqIE1hdGguUEkgLyAxODBcblxuLyoqXG4gKiBSZWR1Y2VCMTk1MFRvSjIwMDAgcmVkdWNlcyBvcmJpdGFsIGVsZW1lbnRzIG9mIGEgc29sYXIgc3lzdGVtIGJvZHkgZnJvbVxuICogZXF1aW5veCBCMTk1MCBpbiB0aGUgRks0IHN5c3RlbSB0byBlcXVpbm94IEoyMDAwIGluIHRoZSBGSzUgc3lzdGVtLlxuICpcbiAqIEBwYXJhbSB7RWxlbWVudHN9IGVGcm9tXG4gKiBAcmV0dXJucyB7RWxlbWVudHN9IGVUb1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlQjE5NTBGSzRUb0oyMDAwRks1IChlRnJvbSkge1xuICBjb25zdCBXID0gTCArIGVGcm9tLm5vZGVcbiAgY29uc3QgW3NpLCBjaV0gPSBiYXNlLnNpbmNvcyhlRnJvbS5pbmMpXG4gIGNvbnN0IFtzSiwgY0pdID0gYmFzZS5zaW5jb3MoSilcbiAgY29uc3QgW3NXLCBjV10gPSBiYXNlLnNpbmNvcyhXKVxuICBjb25zdCBlVG8gPSBuZXcgRWxlbWVudHMoKVxuICBlVG8uaW5jID0gTWF0aC5hY29zKGNpICogY0ogLSBzaSAqIHNKICogY1cpXG4gIGVUby5ub2RlID0gYmFzZS5wbW9kKE1hdGguYXRhbjIoc2kgKiBzVywgY2kgKiBzSiArIHNpICogY0ogKiBjVykgLSBMcCxcbiAgICAyICogTWF0aC5QSSlcbiAgZVRvLnBlcmkgPSBiYXNlLnBtb2QoZUZyb20ucGVyaSArIE1hdGguYXRhbjIoc0ogKiBzVywgc2kgKiBjSiArIGNpICogc0ogKiBjVyksXG4gICAgMiAqIE1hdGguUEkpXG4gIHJldHVybiBlVG9cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBFbGVtZW50cyxcbiAgcmVkdWNlQjE5NTBUb0oyMDAwLFxuICByZWR1Y2VCMTk1MEZLNFRvSjIwMDBGSzVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/elementequinox.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/elliptic.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/elliptic.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Elements: () => (/* binding */ Elements),\n/* harmony export */   astrometricJ2000: () => (/* binding */ astrometricJ2000),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   length1: () => (/* binding */ length1),\n/* harmony export */   length2: () => (/* binding */ length2),\n/* harmony export */   length4: () => (/* binding */ length4),\n/* harmony export */   position: () => (/* binding */ position),\n/* harmony export */   vAphelion: () => (/* binding */ vAphelion),\n/* harmony export */   vPerihelion: () => (/* binding */ vPerihelion),\n/* harmony export */   velocity: () => (/* binding */ velocity)\n/* harmony export */ });\n/* harmony import */ var _apparent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apparent.js */ \"./node_modules/astronomia/src/apparent.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _kepler_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kepler.js */ \"./node_modules/astronomia/src/kepler.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/* harmony import */ var _solarxyz_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./solarxyz.js */ \"./node_modules/astronomia/src/solarxyz.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module elliptic\n */\n/**\n * Elliptic: Chapter 33, Elliptic Motion.\n *\n * Partial: Various formulas and algorithms are unimplemented for lack of\n * examples or test cases.\n */\n\n\n\n\n\n\n\n\n/**\n * Position returns observed equatorial coordinates of a planet at a given time.\n *\n * Argument p must be a valid V87Planet object for the observed planet.\n * Argument earth must be a valid V87Planet object for Earth.\n *\n * Results are right ascension and declination, α and δ in radians.\n */\nfunction position (planet, earth, jde) { // (p, earth *pp.V87Planet, jde float64)  (α, δ float64)\n  let x = 0\n  let y = 0\n  let z = 0\n  const posEarth = earth.position(jde)\n  const [L0, B0, R0] = [posEarth.lon, posEarth.lat, posEarth.range]\n  const [sB0, cB0] = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sincos(B0)\n  const [sL0, cL0] = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sincos(L0)\n\n  function pos (τ = 0) {\n    const pos = planet.position(jde - τ)\n    const [L, B, R] = [pos.lon, pos.lat, pos.range]\n    const [sB, cB] = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sincos(B)\n    const [sL, cL] = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sincos(L)\n    x = R * cB * cL - R0 * cB0 * cL0\n    y = R * cB * sL - R0 * cB0 * sL0\n    z = R * sB - R0 * sB0\n  }\n\n  pos()\n  const Δ = Math.sqrt(x * x + y * y + z * z) // (33.4) p. 224\n  const τ = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lightTime(Δ)\n  // repeating with jde-τ\n  pos(τ)\n\n  let λ = Math.atan2(y, x) // (33.1) p. 223\n  let β = Math.atan2(z, Math.hypot(x, y)) // (33.2) p. 223\n  const [Δλ, Δβ] = _apparent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].eclipticAberration(λ, β, jde)\n  const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].toFK5(λ + Δλ, β + Δβ, jde)\n  λ = fk5.lon\n  β = fk5.lat\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].nutation(jde)\n  λ += Δψ\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].meanObliquity(jde) + Δε\n  return new _coord_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Ecliptic(λ, β).toEquatorial(ε)\n  // Meeus gives a formula for elongation but doesn't spell out how to\n  // obtaion term λ0 and doesn't give an example solution.\n}\n\n/**\n * Elements holds keplerian elements.\n */\nclass Elements {\n  /*\n  Axis  float64 // Semimajor axis, a, in AU\n  Ecc   float64 // Eccentricity, e\n  Inc   float64 // Inclination, i, in radians\n  ArgP  float64 // Argument of perihelion, ω, in radians\n  Node  float64 // Longitude of ascending node, Ω, in radians\n  TimeP float64 // Time of perihelion, T, as jde\n  */\n  constructor (axis, ecc, inc, argP, node, timeP) {\n    let o = {}\n    if (typeof axis === 'object') {\n      o = axis\n    }\n    this.axis = o.axis || axis\n    this.ecc = o.ecc || ecc\n    this.inc = o.inc || inc\n    this.argP = o.argP || argP\n    this.node = o.node || node\n    this.timeP = o.timeP || timeP\n  }\n\n  /**\n   * Position returns observed equatorial coordinates of a body with Keplerian elements.\n   *\n   * Argument e must be a valid V87Planet object for Earth.\n   *\n   * Results are right ascension and declination α and δ, and elongation ψ,\n   * all in radians.\n   */\n  position (jde, earth) { // (α, δ, ψ float64) {\n    // (33.6) p. 227\n    const n = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].K / this.axis / Math.sqrt(this.axis)\n    const sε = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SOblJ2000\n    const cε = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].COblJ2000\n    const [sΩ, cΩ] = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sincos(this.node)\n    const [si, ci] = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sincos(this.inc)\n    // (33.7) p. 228\n    const F = cΩ\n    const G = sΩ * cε\n    const H = sΩ * sε\n    const P = -sΩ * ci\n    const Q = cΩ * ci * cε - si * sε\n    const R = cΩ * ci * sε + si * cε\n    // (33.8) p. 229\n    const A = Math.atan2(F, P)\n    const B = Math.atan2(G, Q)\n    const C = Math.atan2(H, R)\n    const a = Math.hypot(F, P)\n    const b = Math.hypot(G, Q)\n    const c = Math.hypot(H, R)\n\n    const f = (jde) => { // (x, y, z float64) {\n      const M = n * (jde - this.timeP)\n      let E\n      try {\n        E = _kepler_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].kepler2b(this.ecc, M, 15)\n      } catch (e) {\n        E = _kepler_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].kepler3(this.ecc, M)\n      }\n      const ν = _kepler_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].trueAnomaly(E, this.ecc)\n      const r = _kepler_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].radius(E, this.ecc, this.axis)\n      // (33.9) p. 229\n      const x = r * a * Math.sin(A + this.argP + ν)\n      const y = r * b * Math.sin(B + this.argP + ν)\n      const z = r * c * Math.sin(C + this.argP + ν)\n      return { x, y, z }\n    }\n    return astrometricJ2000(f, jde, earth)\n  }\n}\n\n/**\n * AstrometricJ2000 is a utility function for computing astrometric coordinates.\n *\n * It is used internally and only exported so that it can be used from\n * multiple packages.  It is not otherwise expected to be used.\n *\n * Argument f is a function that returns J2000 equatorial rectangular\n * coodinates of a body.\n *\n * Results are J2000 right ascention, declination, and elongation.\n */\nfunction astrometricJ2000 (f, jde, earth) { // (f func(float64)  (x, y, z float64), jde float64, e *pp.V87Planet) (α, δ, ψ float64)\n  const sol = _solarxyz_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].positionJ2000(earth, jde)\n  const [X, Y, Z] = [sol.x, sol.y, sol.z]\n  let ξ = 0\n  let η = 0\n  let ζ = 0\n  let Δ = 0\n\n  function fn (τ = 0) {\n    // (33.10) p. 229\n    const { x, y, z } = f(jde - τ)\n    ξ = X + x\n    η = Y + y\n    ζ = Z + z\n    Δ = Math.sqrt(ξ * ξ + η * η + ζ * ζ)\n  }\n\n  fn()\n  const τ = _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lightTime(Δ)\n  fn(τ)\n\n  let α = Math.atan2(η, ξ)\n  if (α < 0) {\n    α += 2 * Math.PI\n  }\n  const δ = Math.asin(ζ / Δ)\n  const R0 = Math.sqrt(X * X + Y * Y + Z * Z)\n  const ψ = Math.acos((ξ * X + η * Y + ζ * Z) / R0 / Δ)\n  return new _base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Coord(α, δ, undefined, ψ)\n}\n\n/**\n * Velocity returns instantaneous velocity of a body in elliptical orbit around the Sun.\n *\n * Argument a is the semimajor axis of the body, r is the instaneous distance\n * to the Sun, both in AU.\n *\n * Result is in Km/sec.\n */\nfunction velocity (a, r) { // (a, r float64)  float64\n  return 42.1219 * Math.sqrt(1 / r - 0.5 / a)\n}\n\n/**\n * Velocity returns the velocity of a body at aphelion.\n *\n * Argument a is the semimajor axis of the body in AU, e is eccentricity.\n *\n * Result is in Km/sec.\n */\nfunction vAphelion (a, e) { // (a, e float64)  float64\n  return 29.7847 * Math.sqrt((1 - e) / (1 + e) / a)\n}\n\n/**\n * Velocity returns the velocity of a body at perihelion.\n *\n * Argument a is the semimajor axis of the body in AU, e is eccentricity.\n *\n * Result is in Km/sec.\n */\nfunction vPerihelion (a, e) { // (a, e float64)  float64\n  return 29.7847 * Math.sqrt((1 + e) / (1 - e) / a)\n}\n\n/**\n * Length1 returns Ramanujan's approximation for the length of an elliptical\n * orbit.\n *\n * Argument a is semimajor axis, e is eccentricity.\n *\n * Result is in units used for semimajor axis, typically AU.\n */\nfunction length1 (a, e) { // (a, e float64)  float64\n  const b = a * Math.sqrt(1 - e * e)\n  return Math.PI * (3 * (a + b) - Math.sqrt((a + 3 * b) * (3 * a + b)))\n}\n\n/**\n * Length2 returns an alternate approximation for the length of an elliptical\n * orbit.\n *\n * Argument a is semimajor axis, e is eccentricity.\n *\n * Result is in units used for semimajor axis, typically AU.\n */\nfunction length2 (a, e) { // (a, e float64)  float64\n  const b = a * Math.sqrt(1 - e * e)\n  const s = a + b\n  const p = a * b\n  const A = s * 0.5\n  const G = Math.sqrt(p)\n  const H = 2 * p / s\n  return Math.PI * (21 * A - 2 * G - 3 * H) * 0.125\n}\n\n/**\n * Length3 returns the length of an elliptical orbit.\n *\n * Argument a is semimajor axis, e is eccentricity.\n *\n * Result is exact, and in units used for semimajor axis, typically AU.\n */\n/* As Meeus notes, Length4 converges faster.  There is no reason to use\nthis function\nexport function length3 (a, e) { // (a, e float64)  float64\n  const sum0 = 1.0\n  const e2 = e * e\n  const term = e2 * 0.25\n  const sum1 = 1.0 - term\n  const nf = 1.0\n  const df = 2.0\n  while (sum1 !== sum0) {\n    term *= nf\n    nf += 2\n    df += 2\n    term *= nf * e2 / (df * df)\n    sum0 = sum1\n    sum1 -= term\n  }\n  return 2 * Math.PI * a * sum0\n} */\n\n/**\n * Length4 returns the length of an elliptical orbit.\n *\n * Argument a is semimajor axis, e is eccentricity.\n *\n * Result is exact, and in units used for semimajor axis, typically AU.\n */\nfunction length4 (a, e) { // (a, e float64)  float64\n  const b = a * Math.sqrt(1 - e * e)\n  const m = (a - b) / (a + b)\n  const m2 = m * m\n  let sum0 = 1.0\n  let term = m2 * 0.25\n  let sum1 = 1.0 + term\n  let nf = -1.0\n  let df = 2.0\n  while (sum1 !== sum0) {\n    nf += 2\n    df += 2\n    term *= nf * nf * m2 / (df * df)\n    sum0 = sum1\n    sum1 += term\n  }\n  return 2 * Math.PI * a * sum0 / (1 + m)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  position,\n  Elements,\n  astrometricJ2000,\n  velocity,\n  vAphelion,\n  vPerihelion,\n  length1,\n  length2,\n  // length3,\n  length4\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/elliptic.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/elp.js":
/*!********************************************!*\
  !*** ./node_modules/astronomia/src/elp.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Moon: () => (/* binding */ Moon),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   position: () => (/* binding */ position)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2020 mdmunir\n * @copyright 2020 commenthol\n * @license MIT\n * @module elp\n */\n\n/**\n * Elp Mpp02\n * source ftp://cyrano-se.obspm.fr/pub/2_lunar_solutions/2_elpmpp02/elpmpp02.pdf\n */\n\n\n\nconst SEC2RAD = 1 / 3600 * Math.PI / 180\n\nfunction sum (T, series) {\n  const coeffs = []\n  Object.keys(series).forEach((x) => {\n    coeffs[x] = 0.0\n    let y = series[x].length - 1\n    for (y; y >= 0; y--) {\n      // A, t0, t1, t2, t3, t4\n      const row = series[x][y]\n      const φ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, row.slice(1))\n      coeffs[x] += row[0] * Math.sin(φ)\n    }\n  })\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...coeffs)\n}\n\n/**\n *\n */\nclass Moon {\n  /**\n   * ELP representation of a Moon\n   * @constructs Moon\n   * @param {object} data - elp data series\n   * @example\n   * ```js\n   * // for use in browser\n   * import {data} from 'astronomia.js'\n   * const moon = new elp.Moon(data.elpMppDe)\n   * ```\n   */\n  constructor (data) {\n    if (typeof data !== 'object') throw new TypeError('need Elp data')\n    this.series = data\n  }\n\n  _calcLBR (T) {\n    const L = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, this.series.W1) + sum(T, this.series.L) * SEC2RAD\n    const B = sum(T, this.series.B) * SEC2RAD\n    const R = sum(T, this.series.R)\n    return { L: _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(L, 2 * Math.PI), B, R }\n  }\n\n  /**\n   * Position returns rectangular coordinates referred to the inertial mean ecliptic and equinox of J2000.\n   * @param {Number} jde - Julian ephemeris day\n   * @return {object} rectangular coordinates\n   *   {Number} x\n   *   {Number} y\n   *   {Number} z\n   */\n  positionXYZ (jde) {\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    const { L, B, R } = this._calcLBR(T)\n\n    const x = R * Math.cos(L) * Math.cos(B)\n    const y = R * Math.sin(L) * Math.cos(B)\n    const z = R * Math.sin(B)\n\n    const P = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 0, 0.10180391e-4, 0.47020439e-6, -0.5417367e-9, -0.2507948e-11, 0.463486e-14)\n    const Q = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 0, -0.113469002e-3, 0.12372674e-6, 0.12654170e-8, -0.1371808e-11, -0.320334e-14)\n    const sq = Math.sqrt(1 - P * P - Q * Q)\n    const p11 = 1 - 2 * P * P\n    const p12 = 2 * P * Q\n    const p13 = 2 * P * sq\n    const p21 = 2 * P * Q\n    const p22 = 1 - 2 * Q * Q\n    const p23 = -2 * Q * sq\n    const p31 = -2 * P * sq\n    const p32 = 2 * Q * sq\n    const p33 = 1 - 2 * P * P - 2 * Q * Q\n\n    const result = {\n      x: p11 * x + p12 * y + p13 * z,\n      y: p21 * x + p22 * y + p23 * z,\n      z: p31 * x + p32 * y + p33 * z\n    }\n    return result\n  }\n\n  /**\n   * Delay effect of light time\n   *\n   * @param {Number} jde - Julian ephemeris day\n   * @returns {Number} Delay time in days\n   */\n  lightTime (jde) {\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    const R = sum(T, this.series.R)\n    return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(R / _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AU)\n  }\n\n  /**\n   * Position returns ecliptic position of moon at equinox and ecliptic of date.\n   *\n   * @param {Number} jde - the date for which positions are desired.\n   * @returns {Coord} Results are positions consistent with those elp data,\n   * that is, at equinox and ecliptic of date.\n   *  {Number} lon - geocentric longitude in radians.\n   *  {Number} lat - geocentric latitude in radians.\n   *  {Number} range - geocentric range in KM.\n   */\n  position (jde) {\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    const { L, B, R } = this._calcLBR(T)\n\n    // precession\n    const pA = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 0, 5029.0966 - 0.29965, 1.1120, 0.000077, -0.00002353) * SEC2RAD\n    return new _base_js__WEBPACK_IMPORTED_MODULE_0__.Coord(\n      _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(L + pA, 2 * Math.PI),\n      B,\n      R)\n  }\n}\n\n/**\n * Position returns the true geometric position of the moon as ecliptic coordinates.\n *\n * Result computed by Elp theory.  Result is at equator and equinox\n * of date in the FK5 frame.  It does not include nutation or aberration.\n *\n * @param {Object} elpData\n * @param {Number} jde - Julian ephemeris day\n * @returns {Object}\n *   {Number} lon - ecliptic longitude in radians\n *   {Number} lat - ecliptic latitude in radians\n *   {Number} range - range in KM\n */\nfunction position (elpData, jde) {\n  const moon = new Moon(elpData)\n  return moon.position(jde)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Moon,\n  position\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZWxwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRXVDOztBQUV2Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQSxnQkFBZ0IsdURBQVc7QUFDM0I7QUFDQTtBQUNBLEdBQUc7QUFDSCxTQUFTLHVEQUFXO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBLGFBQWEsR0FBRyxxREFBUztBQUN6Qjs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QixRQUFRLFFBQVE7QUFDaEIsUUFBUSxRQUFRO0FBQ2hCLFFBQVEsUUFBUTtBQUNoQjtBQUNBO0FBQ0EsY0FBYyw2REFBaUI7QUFDL0IsWUFBWSxVQUFVOztBQUV0QjtBQUNBO0FBQ0E7O0FBRUEsY0FBYyx1REFBVztBQUN6QixjQUFjLHVEQUFXO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBLGNBQWMsNkRBQWlCO0FBQy9CO0FBQ0EsV0FBVywwREFBYyxLQUFLLG1EQUFPO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlLE9BQU87QUFDdEI7QUFDQSxPQUFPLFFBQVE7QUFDZixPQUFPLFFBQVE7QUFDZixPQUFPLFFBQVE7QUFDZjtBQUNBO0FBQ0EsY0FBYyw2REFBaUI7QUFDL0IsWUFBWSxVQUFVOztBQUV0QjtBQUNBLGVBQWUsdURBQVc7QUFDMUIsZUFBZSwyQ0FBSztBQUNwQixNQUFNLHFEQUFTO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2IsTUFBTSxRQUFRO0FBQ2QsTUFBTSxRQUFRO0FBQ2QsTUFBTSxRQUFRO0FBQ2Q7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2VscC5qcz8xNjczIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDIwIG1kbXVuaXJcbiAqIEBjb3B5cmlnaHQgMjAyMCBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgZWxwXG4gKi9cblxuLyoqXG4gKiBFbHAgTXBwMDJcbiAqIHNvdXJjZSBmdHA6Ly9jeXJhbm8tc2Uub2JzcG0uZnIvcHViLzJfbHVuYXJfc29sdXRpb25zLzJfZWxwbXBwMDIvZWxwbXBwMDIucGRmXG4gKi9cblxuaW1wb3J0IGJhc2UsIHsgQ29vcmQgfSBmcm9tICcuL2Jhc2UuanMnXG5cbmNvbnN0IFNFQzJSQUQgPSAxIC8gMzYwMCAqIE1hdGguUEkgLyAxODBcblxuZnVuY3Rpb24gc3VtIChULCBzZXJpZXMpIHtcbiAgY29uc3QgY29lZmZzID0gW11cbiAgT2JqZWN0LmtleXMoc2VyaWVzKS5mb3JFYWNoKCh4KSA9PiB7XG4gICAgY29lZmZzW3hdID0gMC4wXG4gICAgbGV0IHkgPSBzZXJpZXNbeF0ubGVuZ3RoIC0gMVxuICAgIGZvciAoeTsgeSA+PSAwOyB5LS0pIHtcbiAgICAgIC8vIEEsIHQwLCB0MSwgdDIsIHQzLCB0NFxuICAgICAgY29uc3Qgcm93ID0gc2VyaWVzW3hdW3ldXG4gICAgICBjb25zdCDPhiA9IGJhc2UuaG9ybmVyKFQsIHJvdy5zbGljZSgxKSlcbiAgICAgIGNvZWZmc1t4XSArPSByb3dbMF0gKiBNYXRoLnNpbijPhilcbiAgICB9XG4gIH0pXG4gIHJldHVybiBiYXNlLmhvcm5lcihULCAuLi5jb2VmZnMpXG59XG5cbi8qKlxuICpcbiAqL1xuZXhwb3J0IGNsYXNzIE1vb24ge1xuICAvKipcbiAgICogRUxQIHJlcHJlc2VudGF0aW9uIG9mIGEgTW9vblxuICAgKiBAY29uc3RydWN0cyBNb29uXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIC0gZWxwIGRhdGEgc2VyaWVzXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGpzXG4gICAqIC8vIGZvciB1c2UgaW4gYnJvd3NlclxuICAgKiBpbXBvcnQge2RhdGF9IGZyb20gJ2FzdHJvbm9taWEuanMnXG4gICAqIGNvbnN0IG1vb24gPSBuZXcgZWxwLk1vb24oZGF0YS5lbHBNcHBEZSlcbiAgICogYGBgXG4gICAqL1xuICBjb25zdHJ1Y3RvciAoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcpIHRocm93IG5ldyBUeXBlRXJyb3IoJ25lZWQgRWxwIGRhdGEnKVxuICAgIHRoaXMuc2VyaWVzID0gZGF0YVxuICB9XG5cbiAgX2NhbGNMQlIgKFQpIHtcbiAgICBjb25zdCBMID0gYmFzZS5ob3JuZXIoVCwgdGhpcy5zZXJpZXMuVzEpICsgc3VtKFQsIHRoaXMuc2VyaWVzLkwpICogU0VDMlJBRFxuICAgIGNvbnN0IEIgPSBzdW0oVCwgdGhpcy5zZXJpZXMuQikgKiBTRUMyUkFEXG4gICAgY29uc3QgUiA9IHN1bShULCB0aGlzLnNlcmllcy5SKVxuICAgIHJldHVybiB7IEw6IGJhc2UucG1vZChMLCAyICogTWF0aC5QSSksIEIsIFIgfVxuICB9XG5cbiAgLyoqXG4gICAqIFBvc2l0aW9uIHJldHVybnMgcmVjdGFuZ3VsYXIgY29vcmRpbmF0ZXMgcmVmZXJyZWQgdG8gdGhlIGluZXJ0aWFsIG1lYW4gZWNsaXB0aWMgYW5kIGVxdWlub3ggb2YgSjIwMDAuXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBqZGUgLSBKdWxpYW4gZXBoZW1lcmlzIGRheVxuICAgKiBAcmV0dXJuIHtvYmplY3R9IHJlY3Rhbmd1bGFyIGNvb3JkaW5hdGVzXG4gICAqICAge051bWJlcn0geFxuICAgKiAgIHtOdW1iZXJ9IHlcbiAgICogICB7TnVtYmVyfSB6XG4gICAqL1xuICBwb3NpdGlvblhZWiAoamRlKSB7XG4gICAgY29uc3QgVCA9IGJhc2UuSjIwMDBDZW50dXJ5KGpkZSlcbiAgICBjb25zdCB7IEwsIEIsIFIgfSA9IHRoaXMuX2NhbGNMQlIoVClcblxuICAgIGNvbnN0IHggPSBSICogTWF0aC5jb3MoTCkgKiBNYXRoLmNvcyhCKVxuICAgIGNvbnN0IHkgPSBSICogTWF0aC5zaW4oTCkgKiBNYXRoLmNvcyhCKVxuICAgIGNvbnN0IHogPSBSICogTWF0aC5zaW4oQilcblxuICAgIGNvbnN0IFAgPSBiYXNlLmhvcm5lcihULCAwLCAwLjEwMTgwMzkxZS00LCAwLjQ3MDIwNDM5ZS02LCAtMC41NDE3MzY3ZS05LCAtMC4yNTA3OTQ4ZS0xMSwgMC40NjM0ODZlLTE0KVxuICAgIGNvbnN0IFEgPSBiYXNlLmhvcm5lcihULCAwLCAtMC4xMTM0NjkwMDJlLTMsIDAuMTIzNzI2NzRlLTYsIDAuMTI2NTQxNzBlLTgsIC0wLjEzNzE4MDhlLTExLCAtMC4zMjAzMzRlLTE0KVxuICAgIGNvbnN0IHNxID0gTWF0aC5zcXJ0KDEgLSBQICogUCAtIFEgKiBRKVxuICAgIGNvbnN0IHAxMSA9IDEgLSAyICogUCAqIFBcbiAgICBjb25zdCBwMTIgPSAyICogUCAqIFFcbiAgICBjb25zdCBwMTMgPSAyICogUCAqIHNxXG4gICAgY29uc3QgcDIxID0gMiAqIFAgKiBRXG4gICAgY29uc3QgcDIyID0gMSAtIDIgKiBRICogUVxuICAgIGNvbnN0IHAyMyA9IC0yICogUSAqIHNxXG4gICAgY29uc3QgcDMxID0gLTIgKiBQICogc3FcbiAgICBjb25zdCBwMzIgPSAyICogUSAqIHNxXG4gICAgY29uc3QgcDMzID0gMSAtIDIgKiBQICogUCAtIDIgKiBRICogUVxuXG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgeDogcDExICogeCArIHAxMiAqIHkgKyBwMTMgKiB6LFxuICAgICAgeTogcDIxICogeCArIHAyMiAqIHkgKyBwMjMgKiB6LFxuICAgICAgejogcDMxICogeCArIHAzMiAqIHkgKyBwMzMgKiB6XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWxheSBlZmZlY3Qgb2YgbGlnaHQgdGltZVxuICAgKlxuICAgKiBAcGFyYW0ge051bWJlcn0gamRlIC0gSnVsaWFuIGVwaGVtZXJpcyBkYXlcbiAgICogQHJldHVybnMge051bWJlcn0gRGVsYXkgdGltZSBpbiBkYXlzXG4gICAqL1xuICBsaWdodFRpbWUgKGpkZSkge1xuICAgIGNvbnN0IFQgPSBiYXNlLkoyMDAwQ2VudHVyeShqZGUpXG4gICAgY29uc3QgUiA9IHN1bShULCB0aGlzLnNlcmllcy5SKVxuICAgIHJldHVybiBiYXNlLmxpZ2h0VGltZShSIC8gYmFzZS5BVSlcbiAgfVxuXG4gIC8qKlxuICAgKiBQb3NpdGlvbiByZXR1cm5zIGVjbGlwdGljIHBvc2l0aW9uIG9mIG1vb24gYXQgZXF1aW5veCBhbmQgZWNsaXB0aWMgb2YgZGF0ZS5cbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGpkZSAtIHRoZSBkYXRlIGZvciB3aGljaCBwb3NpdGlvbnMgYXJlIGRlc2lyZWQuXG4gICAqIEByZXR1cm5zIHtDb29yZH0gUmVzdWx0cyBhcmUgcG9zaXRpb25zIGNvbnNpc3RlbnQgd2l0aCB0aG9zZSBlbHAgZGF0YSxcbiAgICogdGhhdCBpcywgYXQgZXF1aW5veCBhbmQgZWNsaXB0aWMgb2YgZGF0ZS5cbiAgICogIHtOdW1iZXJ9IGxvbiAtIGdlb2NlbnRyaWMgbG9uZ2l0dWRlIGluIHJhZGlhbnMuXG4gICAqICB7TnVtYmVyfSBsYXQgLSBnZW9jZW50cmljIGxhdGl0dWRlIGluIHJhZGlhbnMuXG4gICAqICB7TnVtYmVyfSByYW5nZSAtIGdlb2NlbnRyaWMgcmFuZ2UgaW4gS00uXG4gICAqL1xuICBwb3NpdGlvbiAoamRlKSB7XG4gICAgY29uc3QgVCA9IGJhc2UuSjIwMDBDZW50dXJ5KGpkZSlcbiAgICBjb25zdCB7IEwsIEIsIFIgfSA9IHRoaXMuX2NhbGNMQlIoVClcblxuICAgIC8vIHByZWNlc3Npb25cbiAgICBjb25zdCBwQSA9IGJhc2UuaG9ybmVyKFQsIDAsIDUwMjkuMDk2NiAtIDAuMjk5NjUsIDEuMTEyMCwgMC4wMDAwNzcsIC0wLjAwMDAyMzUzKSAqIFNFQzJSQURcbiAgICByZXR1cm4gbmV3IENvb3JkKFxuICAgICAgYmFzZS5wbW9kKEwgKyBwQSwgMiAqIE1hdGguUEkpLFxuICAgICAgQixcbiAgICAgIFIpXG4gIH1cbn1cblxuLyoqXG4gKiBQb3NpdGlvbiByZXR1cm5zIHRoZSB0cnVlIGdlb21ldHJpYyBwb3NpdGlvbiBvZiB0aGUgbW9vbiBhcyBlY2xpcHRpYyBjb29yZGluYXRlcy5cbiAqXG4gKiBSZXN1bHQgY29tcHV0ZWQgYnkgRWxwIHRoZW9yeS4gIFJlc3VsdCBpcyBhdCBlcXVhdG9yIGFuZCBlcXVpbm94XG4gKiBvZiBkYXRlIGluIHRoZSBGSzUgZnJhbWUuICBJdCBkb2VzIG5vdCBpbmNsdWRlIG51dGF0aW9uIG9yIGFiZXJyYXRpb24uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGVscERhdGFcbiAqIEBwYXJhbSB7TnVtYmVyfSBqZGUgLSBKdWxpYW4gZXBoZW1lcmlzIGRheVxuICogQHJldHVybnMge09iamVjdH1cbiAqICAge051bWJlcn0gbG9uIC0gZWNsaXB0aWMgbG9uZ2l0dWRlIGluIHJhZGlhbnNcbiAqICAge051bWJlcn0gbGF0IC0gZWNsaXB0aWMgbGF0aXR1ZGUgaW4gcmFkaWFuc1xuICogICB7TnVtYmVyfSByYW5nZSAtIHJhbmdlIGluIEtNXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwb3NpdGlvbiAoZWxwRGF0YSwgamRlKSB7XG4gIGNvbnN0IG1vb24gPSBuZXcgTW9vbihlbHBEYXRhKVxuICByZXR1cm4gbW9vbi5wb3NpdGlvbihqZGUpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgTW9vbixcbiAgcG9zaXRpb25cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/elp.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/eqtime.js":
/*!***********************************************!*\
  !*** ./node_modules/astronomia/src/eqtime.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   e: () => (/* binding */ e),\n/* harmony export */   eSmart: () => (/* binding */ eSmart)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module eqtime\n */\n/**\n * Eqtime: Chapter 28, Equation of time.\n */\n\n\n\n\n\nconst { cos, sin, tan } = Math\n\n/**\n * e computes the \"equation of time\" for the given JDE.\n *\n * Parameter planet must be a planetposition.Planet object for Earth obtained\n * with `new planetposition.Planet('earth')`.\n *\n * @param {Number} jde - Julian ephemeris day\n * @param {planetposition.Planet} earth - VSOP87 planet\n * @returns {Number} equation of time as an hour angle in radians.\n */\nfunction e (jde, earth) {\n  const τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde) * 0.1\n  const L0 = l0(τ)\n  // code duplicated from solar.ApparentEquatorialVSOP87 so that\n  // we can keep Δψ and cε\n  const { lon, lat, range } = _solar_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].trueVSOP87(earth, jde)\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].nutation(jde)\n  const a = -20.4898 / 3600 * Math.PI / 180 / range\n  const λ = lon + Δψ + a\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].meanObliquity(jde) + Δε\n  const eq = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ, lat).toEquatorial(ε)\n  // (28.1) p. 183\n  const E = L0 - 0.0057183 * Math.PI / 180 - eq.ra + Δψ * cos(ε)\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(E + Math.PI, 2 * Math.PI) - Math.PI\n}\n\n/**\n * (28.2) p. 183\n */\nconst l0 = function (τ) {\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(τ, 280.4664567, 360007.6982779, 0.03032028,\n    1.0 / 49931, -1.0 / 15300, -1.0 / 2000000) * Math.PI / 180\n}\n\n/**\n * eSmart computes the \"equation of time\" for the given JDE.\n *\n * Result is less accurate that e() but the function has the advantage\n * of not requiring the V87Planet object.\n *\n * @param {Number} jde - Julian ephemeris day\n * @returns {Number} equation of time as an hour angle in radians.\n */\nfunction eSmart (jde) {\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].meanObliquity(jde)\n  const t = tan(ε * 0.5)\n  const y = t * t\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const L0 = l0(T * 0.1)\n  const e = _solar_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eccentricity(T)\n  const M = _solar_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanAnomaly(T)\n  const [sin2L0, cos2L0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * L0)\n  const sinM = sin(M)\n  // (28.3) p. 185\n  return y * sin2L0 - 2 * e * sinM + 4 * e * y * sinM * cos2L0 -\n    y * y * sin2L0 * cos2L0 - 1.25 * e * e * sin(2 * M)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  e,\n  eSmart\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZXF0aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRCO0FBQ0U7QUFDTTtBQUNOO0FBQzlCLFFBQVEsZ0JBQWdCOztBQUV4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyx1QkFBdUI7QUFDbEMsYUFBYSxRQUFRO0FBQ3JCO0FBQ087QUFDUCxZQUFZLDZEQUFpQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxVQUFVLGtCQUFrQixFQUFFLDREQUFnQjtBQUM5QyxtQkFBbUIsNkRBQWlCO0FBQ3BDO0FBQ0E7QUFDQSxZQUFZLGtFQUFzQjtBQUNsQyxpQkFBaUIsMERBQWM7QUFDL0I7QUFDQTtBQUNBLFNBQVMscURBQVM7QUFDbEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHVEQUFXO0FBQ3BCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNPO0FBQ1AsWUFBWSxrRUFBc0I7QUFDbEM7QUFDQTtBQUNBLFlBQVksNkRBQWlCO0FBQzdCO0FBQ0EsWUFBWSw4REFBa0I7QUFDOUIsWUFBWSw2REFBaUI7QUFDN0IsMkJBQTJCLHVEQUFXO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9lcXRpbWUuanM/YTMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIGVxdGltZVxuICovXG4vKipcbiAqIEVxdGltZTogQ2hhcHRlciAyOCwgRXF1YXRpb24gb2YgdGltZS5cbiAqL1xuXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5pbXBvcnQgY29vcmQgZnJvbSAnLi9jb29yZC5qcydcbmltcG9ydCBudXRhdGlvbiBmcm9tICcuL251dGF0aW9uLmpzJ1xuaW1wb3J0IHNvbGFyIGZyb20gJy4vc29sYXIuanMnXG5jb25zdCB7IGNvcywgc2luLCB0YW4gfSA9IE1hdGhcblxuLyoqXG4gKiBlIGNvbXB1dGVzIHRoZSBcImVxdWF0aW9uIG9mIHRpbWVcIiBmb3IgdGhlIGdpdmVuIEpERS5cbiAqXG4gKiBQYXJhbWV0ZXIgcGxhbmV0IG11c3QgYmUgYSBwbGFuZXRwb3NpdGlvbi5QbGFuZXQgb2JqZWN0IGZvciBFYXJ0aCBvYnRhaW5lZFxuICogd2l0aCBgbmV3IHBsYW5ldHBvc2l0aW9uLlBsYW5ldCgnZWFydGgnKWAuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGpkZSAtIEp1bGlhbiBlcGhlbWVyaXMgZGF5XG4gKiBAcGFyYW0ge3BsYW5ldHBvc2l0aW9uLlBsYW5ldH0gZWFydGggLSBWU09QODcgcGxhbmV0XG4gKiBAcmV0dXJucyB7TnVtYmVyfSBlcXVhdGlvbiBvZiB0aW1lIGFzIGFuIGhvdXIgYW5nbGUgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGUgKGpkZSwgZWFydGgpIHtcbiAgY29uc3Qgz4QgPSBiYXNlLkoyMDAwQ2VudHVyeShqZGUpICogMC4xXG4gIGNvbnN0IEwwID0gbDAoz4QpXG4gIC8vIGNvZGUgZHVwbGljYXRlZCBmcm9tIHNvbGFyLkFwcGFyZW50RXF1YXRvcmlhbFZTT1A4NyBzbyB0aGF0XG4gIC8vIHdlIGNhbiBrZWVwIM6Uz4ggYW5kIGPOtVxuICBjb25zdCB7IGxvbiwgbGF0LCByYW5nZSB9ID0gc29sYXIudHJ1ZVZTT1A4NyhlYXJ0aCwgamRlKVxuICBjb25zdCBbzpTPiCwgzpTOtV0gPSBudXRhdGlvbi5udXRhdGlvbihqZGUpXG4gIGNvbnN0IGEgPSAtMjAuNDg5OCAvIDM2MDAgKiBNYXRoLlBJIC8gMTgwIC8gcmFuZ2VcbiAgY29uc3QgzrsgPSBsb24gKyDOlM+IICsgYVxuICBjb25zdCDOtSA9IG51dGF0aW9uLm1lYW5PYmxpcXVpdHkoamRlKSArIM6UzrVcbiAgY29uc3QgZXEgPSBuZXcgY29vcmQuRWNsaXB0aWMozrssIGxhdCkudG9FcXVhdG9yaWFsKM61KVxuICAvLyAoMjguMSkgcC4gMTgzXG4gIGNvbnN0IEUgPSBMMCAtIDAuMDA1NzE4MyAqIE1hdGguUEkgLyAxODAgLSBlcS5yYSArIM6Uz4ggKiBjb3MozrUpXG4gIHJldHVybiBiYXNlLnBtb2QoRSArIE1hdGguUEksIDIgKiBNYXRoLlBJKSAtIE1hdGguUElcbn1cblxuLyoqXG4gKiAoMjguMikgcC4gMTgzXG4gKi9cbmNvbnN0IGwwID0gZnVuY3Rpb24gKM+EKSB7XG4gIHJldHVybiBiYXNlLmhvcm5lcijPhCwgMjgwLjQ2NjQ1NjcsIDM2MDAwNy42OTgyNzc5LCAwLjAzMDMyMDI4LFxuICAgIDEuMCAvIDQ5OTMxLCAtMS4wIC8gMTUzMDAsIC0xLjAgLyAyMDAwMDAwKSAqIE1hdGguUEkgLyAxODBcbn1cblxuLyoqXG4gKiBlU21hcnQgY29tcHV0ZXMgdGhlIFwiZXF1YXRpb24gb2YgdGltZVwiIGZvciB0aGUgZ2l2ZW4gSkRFLlxuICpcbiAqIFJlc3VsdCBpcyBsZXNzIGFjY3VyYXRlIHRoYXQgZSgpIGJ1dCB0aGUgZnVuY3Rpb24gaGFzIHRoZSBhZHZhbnRhZ2VcbiAqIG9mIG5vdCByZXF1aXJpbmcgdGhlIFY4N1BsYW5ldCBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGpkZSAtIEp1bGlhbiBlcGhlbWVyaXMgZGF5XG4gKiBAcmV0dXJucyB7TnVtYmVyfSBlcXVhdGlvbiBvZiB0aW1lIGFzIGFuIGhvdXIgYW5nbGUgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVTbWFydCAoamRlKSB7XG4gIGNvbnN0IM61ID0gbnV0YXRpb24ubWVhbk9ibGlxdWl0eShqZGUpXG4gIGNvbnN0IHQgPSB0YW4ozrUgKiAwLjUpXG4gIGNvbnN0IHkgPSB0ICogdFxuICBjb25zdCBUID0gYmFzZS5KMjAwMENlbnR1cnkoamRlKVxuICBjb25zdCBMMCA9IGwwKFQgKiAwLjEpXG4gIGNvbnN0IGUgPSBzb2xhci5lY2NlbnRyaWNpdHkoVClcbiAgY29uc3QgTSA9IHNvbGFyLm1lYW5Bbm9tYWx5KFQpXG4gIGNvbnN0IFtzaW4yTDAsIGNvczJMMF0gPSBiYXNlLnNpbmNvcygyICogTDApXG4gIGNvbnN0IHNpbk0gPSBzaW4oTSlcbiAgLy8gKDI4LjMpIHAuIDE4NVxuICByZXR1cm4geSAqIHNpbjJMMCAtIDIgKiBlICogc2luTSArIDQgKiBlICogeSAqIHNpbk0gKiBjb3MyTDAgLVxuICAgIHkgKiB5ICogc2luMkwwICogY29zMkwwIC0gMS4yNSAqIGUgKiBlICogc2luKDIgKiBNKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGUsXG4gIGVTbWFydFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/eqtime.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/fit.js":
/*!********************************************!*\
  !*** ./node_modules/astronomia/src/fit.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correlationCoefficient: () => (/* binding */ correlationCoefficient),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   func1: () => (/* binding */ func1),\n/* harmony export */   func3: () => (/* binding */ func3),\n/* harmony export */   linear: () => (/* binding */ linear),\n/* harmony export */   quadratic: () => (/* binding */ quadratic)\n/* harmony export */ });\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module fit\n */\n/**\n * Fit: Chapter 4, Curve Fitting.\n */\n\n/**\n * Linear fits a line to sample data.\n *\n * Argument p is a list of data points.  Results a and b are coefficients\n * of the best fit line y = ax + b.\n */\nfunction linear (points) { // (p []struct{ X, Y float64 })  (a, b float64)\n  let sx = 0\n  let sy = 0\n  let sx2 = 0\n  let sxy = 0\n  for (const p of points) {\n    const x = p.x\n    const y = p.y\n    sx += x\n    sy += y\n    sx2 += x * x\n    sxy += x * y\n  }\n  const n = points.length\n  const d = n * sx2 - sx * sx\n  // (4.2) p. 36\n  const a = (n * sxy - sx * sy) / d\n  const b = (sy * sx2 - sx * sxy) / d\n  return [a, b]\n}\n\n/**\n * CorrelationCoefficient returns a correlation coefficient for sample data.\n */\nfunction correlationCoefficient (points) { // (p []struct{ X, Y float64 })  float64\n  let sx = 0\n  let sy = 0\n  let sx2 = 0\n  let sy2 = 0\n  let sxy = 0\n  for (const p of points) {\n    const x = p.x\n    const y = p.y\n    sx += x\n    sy += y\n    sx2 += x * x\n    sy2 += y * y\n    sxy += x * y\n  }\n  const n = points.length\n  // (4.3) p. 38\n  return (n * sxy - sx * sy) / (Math.sqrt(n * sx2 - sx * sx) * Math.sqrt(n * sy2 - sy * sy))\n}\n\n/**\n * Quadratic fits y = ax² + bx + c to sample data.\n *\n * Argument p is a list of data points.  Results a, b, and c are coefficients\n * of the best fit quadratic y = ax² + bx + c.\n */\nfunction quadratic (points) {\n  let P = 0\n  let Q = 0\n  let R = 0\n  let S = 0\n  let T = 0\n  let U = 0\n  let V = 0\n  for (const p of points) {\n    const x = p.x\n    const y = p.y\n    const x2 = x * x\n    P += x\n    Q += x2\n    R += x * x2\n    S += x2 * x2\n    T += y\n    U += x * y\n    V += x2 * y\n  }\n  const N = points.length\n  // (4.5) p. 43\n  const D = N * Q * S + 2 * P * Q * R - Q * Q * Q - P * P * S - N * R * R\n  // (4.6) p. 43\n  const a = (N * Q * V + P * R * T + P * Q * U - Q * Q * T - P * P * V - N * R * U) / D\n  const b = (N * S * U + P * Q * V + Q * R * T - Q * Q * U - P * S * T - N * R * V) / D\n  const c = (Q * S * T + Q * R * U + P * R * V - Q * Q * V - P * S * U - R * R * T) / D\n  return [a, b, c]\n}\n\n/**\n * Func3 implements multiple linear regression for a linear combination\n * of three functions.\n *\n * Given sample data and three functions in x, Func3 returns coefficients\n * a, b, and c fitting y = aƒ₀(x) + bƒ₁(x) + cƒ₂(x) to sample data.\n */\nfunction func3 (points, f0, f1, f2) {\n  let M = 0\n  let P = 0\n  let Q = 0\n  let R = 0\n  let S = 0\n  let T = 0\n  let U = 0\n  let V = 0\n  let W = 0\n  for (const p of points) {\n    const x = p.x\n    const y = p.y\n    const y0 = f0(x)\n    const y1 = f1(x)\n    const y2 = f2(x)\n    M += y0 * y0\n    P += y0 * y1\n    Q += y0 * y2\n    R += y1 * y1\n    S += y1 * y2\n    T += y2 * y2\n    U += y * y0\n    V += y * y1\n    W += y * y2\n  }\n  // (4.7) p. 44\n  const D = M * R * T + 2 * P * Q * S - M * S * S - R * Q * Q - T * P * P\n  const a = (U * (R * T - S * S) + V * (Q * S - P * T) + W * (P * S - Q * R)) / D\n  const b = (U * (S * Q - P * T) + V * (M * T - Q * Q) + W * (P * Q - M * S)) / D\n  const c = (U * (P * S - R * Q) + V * (P * Q - M * S) + W * (M * R - P * P)) / D\n  return [a, b, c]\n}\n\n/**\n * Func1 fits a linear multiple of a function to sample data.\n *\n * Given sample data and a function in x, Func1 returns coefficient\n * a fitting y = aƒ(x).\n */\nfunction func1 (points, f) {\n  let syf = 0\n  let sf2 = 0\n  // (4.8) p. 45\n  for (const p of points) {\n    const fx = f(p.x)\n    const y = p.y\n    syf += y * fx\n    sf2 += fx * fx\n  }\n  return syf / sf2\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  linear,\n  correlationCoefficient,\n  quadratic,\n  func3,\n  func1\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZml0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQkFBMkIsZ0JBQWdCLGNBQWM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ08sMkNBQTJDLGdCQUFnQixjQUFjO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2ZpdC5qcz85MDMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDEzIFNvbmlhIEtleXNcbiAqIEBjb3B5cmlnaHQgMjAxNiBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgZml0XG4gKi9cbi8qKlxuICogRml0OiBDaGFwdGVyIDQsIEN1cnZlIEZpdHRpbmcuXG4gKi9cblxuLyoqXG4gKiBMaW5lYXIgZml0cyBhIGxpbmUgdG8gc2FtcGxlIGRhdGEuXG4gKlxuICogQXJndW1lbnQgcCBpcyBhIGxpc3Qgb2YgZGF0YSBwb2ludHMuICBSZXN1bHRzIGEgYW5kIGIgYXJlIGNvZWZmaWNpZW50c1xuICogb2YgdGhlIGJlc3QgZml0IGxpbmUgeSA9IGF4ICsgYi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbmVhciAocG9pbnRzKSB7IC8vIChwIFtdc3RydWN0eyBYLCBZIGZsb2F0NjQgfSkgIChhLCBiIGZsb2F0NjQpXG4gIGxldCBzeCA9IDBcbiAgbGV0IHN5ID0gMFxuICBsZXQgc3gyID0gMFxuICBsZXQgc3h5ID0gMFxuICBmb3IgKGNvbnN0IHAgb2YgcG9pbnRzKSB7XG4gICAgY29uc3QgeCA9IHAueFxuICAgIGNvbnN0IHkgPSBwLnlcbiAgICBzeCArPSB4XG4gICAgc3kgKz0geVxuICAgIHN4MiArPSB4ICogeFxuICAgIHN4eSArPSB4ICogeVxuICB9XG4gIGNvbnN0IG4gPSBwb2ludHMubGVuZ3RoXG4gIGNvbnN0IGQgPSBuICogc3gyIC0gc3ggKiBzeFxuICAvLyAoNC4yKSBwLiAzNlxuICBjb25zdCBhID0gKG4gKiBzeHkgLSBzeCAqIHN5KSAvIGRcbiAgY29uc3QgYiA9IChzeSAqIHN4MiAtIHN4ICogc3h5KSAvIGRcbiAgcmV0dXJuIFthLCBiXVxufVxuXG4vKipcbiAqIENvcnJlbGF0aW9uQ29lZmZpY2llbnQgcmV0dXJucyBhIGNvcnJlbGF0aW9uIGNvZWZmaWNpZW50IGZvciBzYW1wbGUgZGF0YS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvcnJlbGF0aW9uQ29lZmZpY2llbnQgKHBvaW50cykgeyAvLyAocCBbXXN0cnVjdHsgWCwgWSBmbG9hdDY0IH0pICBmbG9hdDY0XG4gIGxldCBzeCA9IDBcbiAgbGV0IHN5ID0gMFxuICBsZXQgc3gyID0gMFxuICBsZXQgc3kyID0gMFxuICBsZXQgc3h5ID0gMFxuICBmb3IgKGNvbnN0IHAgb2YgcG9pbnRzKSB7XG4gICAgY29uc3QgeCA9IHAueFxuICAgIGNvbnN0IHkgPSBwLnlcbiAgICBzeCArPSB4XG4gICAgc3kgKz0geVxuICAgIHN4MiArPSB4ICogeFxuICAgIHN5MiArPSB5ICogeVxuICAgIHN4eSArPSB4ICogeVxuICB9XG4gIGNvbnN0IG4gPSBwb2ludHMubGVuZ3RoXG4gIC8vICg0LjMpIHAuIDM4XG4gIHJldHVybiAobiAqIHN4eSAtIHN4ICogc3kpIC8gKE1hdGguc3FydChuICogc3gyIC0gc3ggKiBzeCkgKiBNYXRoLnNxcnQobiAqIHN5MiAtIHN5ICogc3kpKVxufVxuXG4vKipcbiAqIFF1YWRyYXRpYyBmaXRzIHkgPSBheMKyICsgYnggKyBjIHRvIHNhbXBsZSBkYXRhLlxuICpcbiAqIEFyZ3VtZW50IHAgaXMgYSBsaXN0IG9mIGRhdGEgcG9pbnRzLiAgUmVzdWx0cyBhLCBiLCBhbmQgYyBhcmUgY29lZmZpY2llbnRzXG4gKiBvZiB0aGUgYmVzdCBmaXQgcXVhZHJhdGljIHkgPSBheMKyICsgYnggKyBjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVhZHJhdGljIChwb2ludHMpIHtcbiAgbGV0IFAgPSAwXG4gIGxldCBRID0gMFxuICBsZXQgUiA9IDBcbiAgbGV0IFMgPSAwXG4gIGxldCBUID0gMFxuICBsZXQgVSA9IDBcbiAgbGV0IFYgPSAwXG4gIGZvciAoY29uc3QgcCBvZiBwb2ludHMpIHtcbiAgICBjb25zdCB4ID0gcC54XG4gICAgY29uc3QgeSA9IHAueVxuICAgIGNvbnN0IHgyID0geCAqIHhcbiAgICBQICs9IHhcbiAgICBRICs9IHgyXG4gICAgUiArPSB4ICogeDJcbiAgICBTICs9IHgyICogeDJcbiAgICBUICs9IHlcbiAgICBVICs9IHggKiB5XG4gICAgViArPSB4MiAqIHlcbiAgfVxuICBjb25zdCBOID0gcG9pbnRzLmxlbmd0aFxuICAvLyAoNC41KSBwLiA0M1xuICBjb25zdCBEID0gTiAqIFEgKiBTICsgMiAqIFAgKiBRICogUiAtIFEgKiBRICogUSAtIFAgKiBQICogUyAtIE4gKiBSICogUlxuICAvLyAoNC42KSBwLiA0M1xuICBjb25zdCBhID0gKE4gKiBRICogViArIFAgKiBSICogVCArIFAgKiBRICogVSAtIFEgKiBRICogVCAtIFAgKiBQICogViAtIE4gKiBSICogVSkgLyBEXG4gIGNvbnN0IGIgPSAoTiAqIFMgKiBVICsgUCAqIFEgKiBWICsgUSAqIFIgKiBUIC0gUSAqIFEgKiBVIC0gUCAqIFMgKiBUIC0gTiAqIFIgKiBWKSAvIERcbiAgY29uc3QgYyA9IChRICogUyAqIFQgKyBRICogUiAqIFUgKyBQICogUiAqIFYgLSBRICogUSAqIFYgLSBQICogUyAqIFUgLSBSICogUiAqIFQpIC8gRFxuICByZXR1cm4gW2EsIGIsIGNdXG59XG5cbi8qKlxuICogRnVuYzMgaW1wbGVtZW50cyBtdWx0aXBsZSBsaW5lYXIgcmVncmVzc2lvbiBmb3IgYSBsaW5lYXIgY29tYmluYXRpb25cbiAqIG9mIHRocmVlIGZ1bmN0aW9ucy5cbiAqXG4gKiBHaXZlbiBzYW1wbGUgZGF0YSBhbmQgdGhyZWUgZnVuY3Rpb25zIGluIHgsIEZ1bmMzIHJldHVybnMgY29lZmZpY2llbnRzXG4gKiBhLCBiLCBhbmQgYyBmaXR0aW5nIHkgPSBhxpLigoAoeCkgKyBixpLigoEoeCkgKyBjxpLigoIoeCkgdG8gc2FtcGxlIGRhdGEuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmdW5jMyAocG9pbnRzLCBmMCwgZjEsIGYyKSB7XG4gIGxldCBNID0gMFxuICBsZXQgUCA9IDBcbiAgbGV0IFEgPSAwXG4gIGxldCBSID0gMFxuICBsZXQgUyA9IDBcbiAgbGV0IFQgPSAwXG4gIGxldCBVID0gMFxuICBsZXQgViA9IDBcbiAgbGV0IFcgPSAwXG4gIGZvciAoY29uc3QgcCBvZiBwb2ludHMpIHtcbiAgICBjb25zdCB4ID0gcC54XG4gICAgY29uc3QgeSA9IHAueVxuICAgIGNvbnN0IHkwID0gZjAoeClcbiAgICBjb25zdCB5MSA9IGYxKHgpXG4gICAgY29uc3QgeTIgPSBmMih4KVxuICAgIE0gKz0geTAgKiB5MFxuICAgIFAgKz0geTAgKiB5MVxuICAgIFEgKz0geTAgKiB5MlxuICAgIFIgKz0geTEgKiB5MVxuICAgIFMgKz0geTEgKiB5MlxuICAgIFQgKz0geTIgKiB5MlxuICAgIFUgKz0geSAqIHkwXG4gICAgViArPSB5ICogeTFcbiAgICBXICs9IHkgKiB5MlxuICB9XG4gIC8vICg0LjcpIHAuIDQ0XG4gIGNvbnN0IEQgPSBNICogUiAqIFQgKyAyICogUCAqIFEgKiBTIC0gTSAqIFMgKiBTIC0gUiAqIFEgKiBRIC0gVCAqIFAgKiBQXG4gIGNvbnN0IGEgPSAoVSAqIChSICogVCAtIFMgKiBTKSArIFYgKiAoUSAqIFMgLSBQICogVCkgKyBXICogKFAgKiBTIC0gUSAqIFIpKSAvIERcbiAgY29uc3QgYiA9IChVICogKFMgKiBRIC0gUCAqIFQpICsgViAqIChNICogVCAtIFEgKiBRKSArIFcgKiAoUCAqIFEgLSBNICogUykpIC8gRFxuICBjb25zdCBjID0gKFUgKiAoUCAqIFMgLSBSICogUSkgKyBWICogKFAgKiBRIC0gTSAqIFMpICsgVyAqIChNICogUiAtIFAgKiBQKSkgLyBEXG4gIHJldHVybiBbYSwgYiwgY11cbn1cblxuLyoqXG4gKiBGdW5jMSBmaXRzIGEgbGluZWFyIG11bHRpcGxlIG9mIGEgZnVuY3Rpb24gdG8gc2FtcGxlIGRhdGEuXG4gKlxuICogR2l2ZW4gc2FtcGxlIGRhdGEgYW5kIGEgZnVuY3Rpb24gaW4geCwgRnVuYzEgcmV0dXJucyBjb2VmZmljaWVudFxuICogYSBmaXR0aW5nIHkgPSBhxpIoeCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmdW5jMSAocG9pbnRzLCBmKSB7XG4gIGxldCBzeWYgPSAwXG4gIGxldCBzZjIgPSAwXG4gIC8vICg0LjgpIHAuIDQ1XG4gIGZvciAoY29uc3QgcCBvZiBwb2ludHMpIHtcbiAgICBjb25zdCBmeCA9IGYocC54KVxuICAgIGNvbnN0IHkgPSBwLnlcbiAgICBzeWYgKz0geSAqIGZ4XG4gICAgc2YyICs9IGZ4ICogZnhcbiAgfVxuICByZXR1cm4gc3lmIC8gc2YyXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbGluZWFyLFxuICBjb3JyZWxhdGlvbkNvZWZmaWNpZW50LFxuICBxdWFkcmF0aWMsXG4gIGZ1bmMzLFxuICBmdW5jMVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/fit.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/globe.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/globe.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Coord: () => (/* binding */ Coord),\n/* harmony export */   Earth76: () => (/* binding */ Earth76),\n/* harmony export */   Ellipsoid: () => (/* binding */ Ellipsoid),\n/* harmony export */   RotationRate1996_5: () => (/* binding */ RotationRate1996_5),\n/* harmony export */   approxAngularDistance: () => (/* binding */ approxAngularDistance),\n/* harmony export */   approxLinearDistance: () => (/* binding */ approxLinearDistance),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   geocentricLatitudeDifference: () => (/* binding */ geocentricLatitudeDifference),\n/* harmony export */   oneDegreeOfLatitude: () => (/* binding */ oneDegreeOfLatitude),\n/* harmony export */   oneDegreeOfLongitude: () => (/* binding */ oneDegreeOfLongitude)\n/* harmony export */ });\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module globe\n */\n/**\n * Globe: Chapter 11, The Earth's Globe.\n *\n * Globe contains functions concerning the surface of the Earth idealized as\n * an ellipsoid of revolution.\n */\n\n/**\n * Ellipsoid represents an ellipsoid of revolution. */\nclass Ellipsoid {\n  /**\n   * @param {number} radius - equatorial radius\n   * @param {number} flat - ellipsiod flattening\n   */\n  constructor (radius, flat) {\n    this.radius = radius\n    this.flat = flat\n  }\n\n  /** A is a common identifier for equatorial radius. */\n  A () {\n    return this.radius\n  }\n\n  /** B is a common identifier for polar radius. */\n  B () {\n    return this.radius * (1 - this.flat)\n  }\n\n  /** eccentricity of a meridian. */\n  eccentricity () {\n    return Math.sqrt((2 - this.flat) * this.flat)\n  }\n\n  /**\n   * parallaxConstants computes parallax constants ρ sin φ′ and ρ cos φ′.\n   *\n   * Arguments are geographic latitude φ in radians and height h\n   * in meters above the ellipsoid.\n   *\n   * @param {number} φ - geographic latitude in radians\n   * @param {number} h - height in meters above the ellipsoid\n   * @return {number[]} [ρ sin φ′, ρ cos φ] parallax constants [ρsφ, ρcφ]\n   */\n  parallaxConstants (φ, h) {\n    const boa = 1 - this.flat\n    const su = Math.sin(Math.atan(boa * Math.tan(φ)))\n    const cu = Math.cos(Math.atan(boa * Math.tan(φ)))\n    const s = Math.sin(φ)\n    const c = Math.cos(φ)\n    const hoa = h * 1e-3 / this.radius\n    // (s, c float)\n    const ρsφ = su * boa + hoa * s\n    const ρcφ = cu + hoa * c\n    return [ρsφ, ρcφ]\n  }\n\n  /**\n   * rho is distance from Earth center to a point on the ellipsoid.\n   *\n   * Result unit is fraction of the equatorial radius.\n   * @param {number} φ - geographic latitude in radians\n   * @returns {number} // TODO\n   */\n  rho (φ) {\n    // Magic numbers...\n    return 0.9983271 + 0.0016764 * Math.cos(2 * φ) - 0.0000035 * Math.cos(4 * φ)\n  }\n\n  /**\n   * radiusAtLatitude returns the radius of the circle that is the parallel of\n   * latitude at φ.\n   *\n   * Result unit is Km.\n   *\n   * @param {number} φ\n   * @return {number} radius in km\n   */\n  radiusAtLatitude (φ) {\n    const s = Math.sin(φ)\n    const c = Math.cos(φ)\n    return this.A() * c / Math.sqrt(1 - (2 - this.flat) * this.flat * s * s)\n  }\n\n  /**\n   * radiusOfCurvature of meridian at latitude φ.\n   *\n   * Result unit is Km.\n   *\n   * @param {number} φ\n   * @return {number} radius in km\n   */\n  radiusOfCurvature (φ) {\n    const s = Math.sin(φ)\n    const e2 = (2 - this.flat) * this.flat\n    return this.A() * (1 - e2) / Math.pow(1 - e2 * s * s, 1.5)\n  }\n\n  /**\n   * distance is distance between two points measured along the surface\n   * of an ellipsoid.\n   *\n   * Accuracy is much better than that of approxAngularDistance or\n   * approxLinearDistance.\n   *\n   * Result unit is Km.\n   *\n   * @param {Coord} c1\n   * @param {Coord} c2\n   * @return {number} radius in km\n   */\n  distance (c1, c2) {\n    // From AA, ch 11, p 84.\n    const [s2f, c2f] = sincos2((c1.lat + c2.lat) / 2)\n    const [s2g, c2g] = sincos2((c1.lat - c2.lat) / 2)\n    const [s2λ, c2λ] = sincos2((c1.lon - c2.lon) / 2)\n    const s = s2g * c2λ + c2f * s2λ\n    const c = c2g * c2λ + s2f * s2λ\n    const ω = Math.atan(Math.sqrt(s / c))\n    const r = Math.sqrt(s * c) / ω\n    const d = 2 * ω * this.radius\n    const h1 = (3 * r - 1) / (2 * c)\n    const h2 = (3 * r + 1) / (2 * s)\n    return d * (1 + this.flat * (h1 * s2f * c2g - h2 * c2f * s2g))\n  }\n}\n\n/** IAU 1976 values.  Radius in Km. */\nconst Earth76 = new Ellipsoid(6378.14, 1 / 298.257)\n\n/**\n * RotationRate1996_5 is the rotational angular velocity of the Earth\n * with respect to the stars at the epoch 1996.5.\n *\n * Unit is radian/second.\n */\nconst RotationRate1996_5 = 7.292114992e-5 // eslint-disable-line camelcase\n\n/**\n * oneDegreeOfLongitude returns the length of one degree of longitude.\n *\n * Argument `rp` is the radius in Km of a circle that is a parallel of latitude\n * (as returned by Ellipsoid.radiusAtLatitude.)\n * Result is distance in Km along one degree of the circle.\n *\n * @param {number} rp\n * @return {number} distance in Km\n */\nfunction oneDegreeOfLongitude (rp) {\n  return rp * Math.PI / 180\n}\n\n/**\n * oneDegreeOfLatitude returns the length of one degree of latitude.\n *\n * Argument `rm` is the radius in Km of curvature along a meridian.\n * (as returned by Ellipsoid.radiusOfCurvature.)\n * Result is distance in Km along one degree of the meridian.\n *\n * @param {number} rm\n * @return {number} distance in Km\n */\nfunction oneDegreeOfLatitude (rm) {\n  return rm * Math.PI / 180\n}\n\n/**\n * geocentricLatitudeDifference returns geographic latitude - geocentric\n * latitude (φ - φ′) with given geographic latitude (φ).\n *\n * Units are radians.\n * @param {number} φ\n * @returns {number} difference in Deg\n */\nfunction geocentricLatitudeDifference (φ) {\n  // This appears to be an approximation with hard coded magic numbers.\n  // No explanation is given in the text. The ellipsoid is not specified.\n  // Perhaps the approximation works well enough for all ellipsoids?\n  return (692.73 * Math.sin(2 * φ) - 1.16 * Math.sin(4 * φ)) * Math.PI / (180 * 3600)\n}\n\n/**\n * Coord represents geographic coordinates on the Earth.\n *\n * Longitude is measured positively westward from the Greenwich meridian.\n */\nclass Coord {\n  /**\n   * @param {number} lat - latitude (φ) in radians\n   * @param {number} lon - longitude (ψ, or L) in radians (measured positively westward)\n   */\n  constructor (lat = 0, lon = 0) {\n    this.lat = lat\n    this.lon = lon\n  }\n}\n\n/**\n * approxAngularDistance returns the cosine of the angle between two points.\n *\n * The accuracy deteriorates at small angles.\n *\n * @param {Coord} p1 - Point 1\n * @param {Coord} p2 - Point 2\n * @returns {number} cosine `cos` of the angle between two points.\n * Use `d = Math.acos(cos)` to obtain geocentric angular distance in radians\n */\nfunction approxAngularDistance (p1, p2) {\n  const s1 = Math.sin(p1.lat)\n  const c1 = Math.cos(p1.lat)\n  const s2 = Math.sin(p2.lat)\n  const c2 = Math.cos(p2.lat)\n  return s1 * s2 + c1 * c2 * Math.cos(p1.lon - p2.lon)\n}\n\n/**\n * approxLinearDistance computes a distance across the surface of the Earth.\n *\n * Approximating the Earth as a sphere, the function takes a geocentric angular\n * distance in radians and returns the corresponding linear distance in Km.\n *\n * @param {number} d - geocentric angular distance in radians\n * @returns linear distance in Km\n */\nfunction approxLinearDistance (d) {\n  return 6371 * d\n}\n\n/**\n * @private\n */\nfunction sincos2 (x) {\n  const s = Math.sin(x)\n  const c = Math.cos(x)\n  return [s * s, c * c]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Ellipsoid,\n  Earth76,\n  // eslint-disable-next-line camelcase\n  RotationRate1996_5,\n  oneDegreeOfLongitude,\n  oneDegreeOfLatitude,\n  geocentricLatitudeDifference,\n  Coord,\n  approxAngularDistance,\n  approxLinearDistance\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvZ2xvYmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsT0FBTztBQUNwQixjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZLFFBQVE7QUFDcEI7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxRQUFRO0FBQ3BCO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2dsb2JlLmpzP2E0NTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBnbG9iZVxuICovXG4vKipcbiAqIEdsb2JlOiBDaGFwdGVyIDExLCBUaGUgRWFydGgncyBHbG9iZS5cbiAqXG4gKiBHbG9iZSBjb250YWlucyBmdW5jdGlvbnMgY29uY2VybmluZyB0aGUgc3VyZmFjZSBvZiB0aGUgRWFydGggaWRlYWxpemVkIGFzXG4gKiBhbiBlbGxpcHNvaWQgb2YgcmV2b2x1dGlvbi5cbiAqL1xuXG4vKipcbiAqIEVsbGlwc29pZCByZXByZXNlbnRzIGFuIGVsbGlwc29pZCBvZiByZXZvbHV0aW9uLiAqL1xuZXhwb3J0IGNsYXNzIEVsbGlwc29pZCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gcmFkaXVzIC0gZXF1YXRvcmlhbCByYWRpdXNcbiAgICogQHBhcmFtIHtudW1iZXJ9IGZsYXQgLSBlbGxpcHNpb2QgZmxhdHRlbmluZ1xuICAgKi9cbiAgY29uc3RydWN0b3IgKHJhZGl1cywgZmxhdCkge1xuICAgIHRoaXMucmFkaXVzID0gcmFkaXVzXG4gICAgdGhpcy5mbGF0ID0gZmxhdFxuICB9XG5cbiAgLyoqIEEgaXMgYSBjb21tb24gaWRlbnRpZmllciBmb3IgZXF1YXRvcmlhbCByYWRpdXMuICovXG4gIEEgKCkge1xuICAgIHJldHVybiB0aGlzLnJhZGl1c1xuICB9XG5cbiAgLyoqIEIgaXMgYSBjb21tb24gaWRlbnRpZmllciBmb3IgcG9sYXIgcmFkaXVzLiAqL1xuICBCICgpIHtcbiAgICByZXR1cm4gdGhpcy5yYWRpdXMgKiAoMSAtIHRoaXMuZmxhdClcbiAgfVxuXG4gIC8qKiBlY2NlbnRyaWNpdHkgb2YgYSBtZXJpZGlhbi4gKi9cbiAgZWNjZW50cmljaXR5ICgpIHtcbiAgICByZXR1cm4gTWF0aC5zcXJ0KCgyIC0gdGhpcy5mbGF0KSAqIHRoaXMuZmxhdClcbiAgfVxuXG4gIC8qKlxuICAgKiBwYXJhbGxheENvbnN0YW50cyBjb21wdXRlcyBwYXJhbGxheCBjb25zdGFudHMgz4Egc2luIM+G4oCyIGFuZCDPgSBjb3Mgz4bigLIuXG4gICAqXG4gICAqIEFyZ3VtZW50cyBhcmUgZ2VvZ3JhcGhpYyBsYXRpdHVkZSDPhiBpbiByYWRpYW5zIGFuZCBoZWlnaHQgaFxuICAgKiBpbiBtZXRlcnMgYWJvdmUgdGhlIGVsbGlwc29pZC5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IM+GIC0gZ2VvZ3JhcGhpYyBsYXRpdHVkZSBpbiByYWRpYW5zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBoIC0gaGVpZ2h0IGluIG1ldGVycyBhYm92ZSB0aGUgZWxsaXBzb2lkXG4gICAqIEByZXR1cm4ge251bWJlcltdfSBbz4Egc2luIM+G4oCyLCDPgSBjb3Mgz4ZdIHBhcmFsbGF4IGNvbnN0YW50cyBbz4Fzz4YsIM+BY8+GXVxuICAgKi9cbiAgcGFyYWxsYXhDb25zdGFudHMgKM+GLCBoKSB7XG4gICAgY29uc3QgYm9hID0gMSAtIHRoaXMuZmxhdFxuICAgIGNvbnN0IHN1ID0gTWF0aC5zaW4oTWF0aC5hdGFuKGJvYSAqIE1hdGgudGFuKM+GKSkpXG4gICAgY29uc3QgY3UgPSBNYXRoLmNvcyhNYXRoLmF0YW4oYm9hICogTWF0aC50YW4oz4YpKSlcbiAgICBjb25zdCBzID0gTWF0aC5zaW4oz4YpXG4gICAgY29uc3QgYyA9IE1hdGguY29zKM+GKVxuICAgIGNvbnN0IGhvYSA9IGggKiAxZS0zIC8gdGhpcy5yYWRpdXNcbiAgICAvLyAocywgYyBmbG9hdClcbiAgICBjb25zdCDPgXPPhiA9IHN1ICogYm9hICsgaG9hICogc1xuICAgIGNvbnN0IM+BY8+GID0gY3UgKyBob2EgKiBjXG4gICAgcmV0dXJuIFvPgXPPhiwgz4Fjz4ZdXG4gIH1cblxuICAvKipcbiAgICogcmhvIGlzIGRpc3RhbmNlIGZyb20gRWFydGggY2VudGVyIHRvIGEgcG9pbnQgb24gdGhlIGVsbGlwc29pZC5cbiAgICpcbiAgICogUmVzdWx0IHVuaXQgaXMgZnJhY3Rpb24gb2YgdGhlIGVxdWF0b3JpYWwgcmFkaXVzLlxuICAgKiBAcGFyYW0ge251bWJlcn0gz4YgLSBnZW9ncmFwaGljIGxhdGl0dWRlIGluIHJhZGlhbnNcbiAgICogQHJldHVybnMge251bWJlcn0gLy8gVE9ET1xuICAgKi9cbiAgcmhvICjPhikge1xuICAgIC8vIE1hZ2ljIG51bWJlcnMuLi5cbiAgICByZXR1cm4gMC45OTgzMjcxICsgMC4wMDE2NzY0ICogTWF0aC5jb3MoMiAqIM+GKSAtIDAuMDAwMDAzNSAqIE1hdGguY29zKDQgKiDPhilcbiAgfVxuXG4gIC8qKlxuICAgKiByYWRpdXNBdExhdGl0dWRlIHJldHVybnMgdGhlIHJhZGl1cyBvZiB0aGUgY2lyY2xlIHRoYXQgaXMgdGhlIHBhcmFsbGVsIG9mXG4gICAqIGxhdGl0dWRlIGF0IM+GLlxuICAgKlxuICAgKiBSZXN1bHQgdW5pdCBpcyBLbS5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IM+GXG4gICAqIEByZXR1cm4ge251bWJlcn0gcmFkaXVzIGluIGttXG4gICAqL1xuICByYWRpdXNBdExhdGl0dWRlICjPhikge1xuICAgIGNvbnN0IHMgPSBNYXRoLnNpbijPhilcbiAgICBjb25zdCBjID0gTWF0aC5jb3Moz4YpXG4gICAgcmV0dXJuIHRoaXMuQSgpICogYyAvIE1hdGguc3FydCgxIC0gKDIgLSB0aGlzLmZsYXQpICogdGhpcy5mbGF0ICogcyAqIHMpXG4gIH1cblxuICAvKipcbiAgICogcmFkaXVzT2ZDdXJ2YXR1cmUgb2YgbWVyaWRpYW4gYXQgbGF0aXR1ZGUgz4YuXG4gICAqXG4gICAqIFJlc3VsdCB1bml0IGlzIEttLlxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcn0gz4ZcbiAgICogQHJldHVybiB7bnVtYmVyfSByYWRpdXMgaW4ga21cbiAgICovXG4gIHJhZGl1c09mQ3VydmF0dXJlICjPhikge1xuICAgIGNvbnN0IHMgPSBNYXRoLnNpbijPhilcbiAgICBjb25zdCBlMiA9ICgyIC0gdGhpcy5mbGF0KSAqIHRoaXMuZmxhdFxuICAgIHJldHVybiB0aGlzLkEoKSAqICgxIC0gZTIpIC8gTWF0aC5wb3coMSAtIGUyICogcyAqIHMsIDEuNSlcbiAgfVxuXG4gIC8qKlxuICAgKiBkaXN0YW5jZSBpcyBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHMgbWVhc3VyZWQgYWxvbmcgdGhlIHN1cmZhY2VcbiAgICogb2YgYW4gZWxsaXBzb2lkLlxuICAgKlxuICAgKiBBY2N1cmFjeSBpcyBtdWNoIGJldHRlciB0aGFuIHRoYXQgb2YgYXBwcm94QW5ndWxhckRpc3RhbmNlIG9yXG4gICAqIGFwcHJveExpbmVhckRpc3RhbmNlLlxuICAgKlxuICAgKiBSZXN1bHQgdW5pdCBpcyBLbS5cbiAgICpcbiAgICogQHBhcmFtIHtDb29yZH0gYzFcbiAgICogQHBhcmFtIHtDb29yZH0gYzJcbiAgICogQHJldHVybiB7bnVtYmVyfSByYWRpdXMgaW4ga21cbiAgICovXG4gIGRpc3RhbmNlIChjMSwgYzIpIHtcbiAgICAvLyBGcm9tIEFBLCBjaCAxMSwgcCA4NC5cbiAgICBjb25zdCBbczJmLCBjMmZdID0gc2luY29zMigoYzEubGF0ICsgYzIubGF0KSAvIDIpXG4gICAgY29uc3QgW3MyZywgYzJnXSA9IHNpbmNvczIoKGMxLmxhdCAtIGMyLmxhdCkgLyAyKVxuICAgIGNvbnN0IFtzMs67LCBjMs67XSA9IHNpbmNvczIoKGMxLmxvbiAtIGMyLmxvbikgLyAyKVxuICAgIGNvbnN0IHMgPSBzMmcgKiBjMs67ICsgYzJmICogczLOu1xuICAgIGNvbnN0IGMgPSBjMmcgKiBjMs67ICsgczJmICogczLOu1xuICAgIGNvbnN0IM+JID0gTWF0aC5hdGFuKE1hdGguc3FydChzIC8gYykpXG4gICAgY29uc3QgciA9IE1hdGguc3FydChzICogYykgLyDPiVxuICAgIGNvbnN0IGQgPSAyICogz4kgKiB0aGlzLnJhZGl1c1xuICAgIGNvbnN0IGgxID0gKDMgKiByIC0gMSkgLyAoMiAqIGMpXG4gICAgY29uc3QgaDIgPSAoMyAqIHIgKyAxKSAvICgyICogcylcbiAgICByZXR1cm4gZCAqICgxICsgdGhpcy5mbGF0ICogKGgxICogczJmICogYzJnIC0gaDIgKiBjMmYgKiBzMmcpKVxuICB9XG59XG5cbi8qKiBJQVUgMTk3NiB2YWx1ZXMuICBSYWRpdXMgaW4gS20uICovXG5leHBvcnQgY29uc3QgRWFydGg3NiA9IG5ldyBFbGxpcHNvaWQoNjM3OC4xNCwgMSAvIDI5OC4yNTcpXG5cbi8qKlxuICogUm90YXRpb25SYXRlMTk5Nl81IGlzIHRoZSByb3RhdGlvbmFsIGFuZ3VsYXIgdmVsb2NpdHkgb2YgdGhlIEVhcnRoXG4gKiB3aXRoIHJlc3BlY3QgdG8gdGhlIHN0YXJzIGF0IHRoZSBlcG9jaCAxOTk2LjUuXG4gKlxuICogVW5pdCBpcyByYWRpYW4vc2Vjb25kLlxuICovXG5leHBvcnQgY29uc3QgUm90YXRpb25SYXRlMTk5Nl81ID0gNy4yOTIxMTQ5OTJlLTUgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjYW1lbGNhc2VcblxuLyoqXG4gKiBvbmVEZWdyZWVPZkxvbmdpdHVkZSByZXR1cm5zIHRoZSBsZW5ndGggb2Ygb25lIGRlZ3JlZSBvZiBsb25naXR1ZGUuXG4gKlxuICogQXJndW1lbnQgYHJwYCBpcyB0aGUgcmFkaXVzIGluIEttIG9mIGEgY2lyY2xlIHRoYXQgaXMgYSBwYXJhbGxlbCBvZiBsYXRpdHVkZVxuICogKGFzIHJldHVybmVkIGJ5IEVsbGlwc29pZC5yYWRpdXNBdExhdGl0dWRlLilcbiAqIFJlc3VsdCBpcyBkaXN0YW5jZSBpbiBLbSBhbG9uZyBvbmUgZGVncmVlIG9mIHRoZSBjaXJjbGUuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHJwXG4gKiBAcmV0dXJuIHtudW1iZXJ9IGRpc3RhbmNlIGluIEttXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbmVEZWdyZWVPZkxvbmdpdHVkZSAocnApIHtcbiAgcmV0dXJuIHJwICogTWF0aC5QSSAvIDE4MFxufVxuXG4vKipcbiAqIG9uZURlZ3JlZU9mTGF0aXR1ZGUgcmV0dXJucyB0aGUgbGVuZ3RoIG9mIG9uZSBkZWdyZWUgb2YgbGF0aXR1ZGUuXG4gKlxuICogQXJndW1lbnQgYHJtYCBpcyB0aGUgcmFkaXVzIGluIEttIG9mIGN1cnZhdHVyZSBhbG9uZyBhIG1lcmlkaWFuLlxuICogKGFzIHJldHVybmVkIGJ5IEVsbGlwc29pZC5yYWRpdXNPZkN1cnZhdHVyZS4pXG4gKiBSZXN1bHQgaXMgZGlzdGFuY2UgaW4gS20gYWxvbmcgb25lIGRlZ3JlZSBvZiB0aGUgbWVyaWRpYW4uXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHJtXG4gKiBAcmV0dXJuIHtudW1iZXJ9IGRpc3RhbmNlIGluIEttXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbmVEZWdyZWVPZkxhdGl0dWRlIChybSkge1xuICByZXR1cm4gcm0gKiBNYXRoLlBJIC8gMTgwXG59XG5cbi8qKlxuICogZ2VvY2VudHJpY0xhdGl0dWRlRGlmZmVyZW5jZSByZXR1cm5zIGdlb2dyYXBoaWMgbGF0aXR1ZGUgLSBnZW9jZW50cmljXG4gKiBsYXRpdHVkZSAoz4YgLSDPhuKAsikgd2l0aCBnaXZlbiBnZW9ncmFwaGljIGxhdGl0dWRlICjPhikuXG4gKlxuICogVW5pdHMgYXJlIHJhZGlhbnMuXG4gKiBAcGFyYW0ge251bWJlcn0gz4ZcbiAqIEByZXR1cm5zIHtudW1iZXJ9IGRpZmZlcmVuY2UgaW4gRGVnXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW9jZW50cmljTGF0aXR1ZGVEaWZmZXJlbmNlICjPhikge1xuICAvLyBUaGlzIGFwcGVhcnMgdG8gYmUgYW4gYXBwcm94aW1hdGlvbiB3aXRoIGhhcmQgY29kZWQgbWFnaWMgbnVtYmVycy5cbiAgLy8gTm8gZXhwbGFuYXRpb24gaXMgZ2l2ZW4gaW4gdGhlIHRleHQuIFRoZSBlbGxpcHNvaWQgaXMgbm90IHNwZWNpZmllZC5cbiAgLy8gUGVyaGFwcyB0aGUgYXBwcm94aW1hdGlvbiB3b3JrcyB3ZWxsIGVub3VnaCBmb3IgYWxsIGVsbGlwc29pZHM/XG4gIHJldHVybiAoNjkyLjczICogTWF0aC5zaW4oMiAqIM+GKSAtIDEuMTYgKiBNYXRoLnNpbig0ICogz4YpKSAqIE1hdGguUEkgLyAoMTgwICogMzYwMClcbn1cblxuLyoqXG4gKiBDb29yZCByZXByZXNlbnRzIGdlb2dyYXBoaWMgY29vcmRpbmF0ZXMgb24gdGhlIEVhcnRoLlxuICpcbiAqIExvbmdpdHVkZSBpcyBtZWFzdXJlZCBwb3NpdGl2ZWx5IHdlc3R3YXJkIGZyb20gdGhlIEdyZWVud2ljaCBtZXJpZGlhbi5cbiAqL1xuZXhwb3J0IGNsYXNzIENvb3JkIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBsYXQgLSBsYXRpdHVkZSAoz4YpIGluIHJhZGlhbnNcbiAgICogQHBhcmFtIHtudW1iZXJ9IGxvbiAtIGxvbmdpdHVkZSAoz4gsIG9yIEwpIGluIHJhZGlhbnMgKG1lYXN1cmVkIHBvc2l0aXZlbHkgd2VzdHdhcmQpXG4gICAqL1xuICBjb25zdHJ1Y3RvciAobGF0ID0gMCwgbG9uID0gMCkge1xuICAgIHRoaXMubGF0ID0gbGF0XG4gICAgdGhpcy5sb24gPSBsb25cbiAgfVxufVxuXG4vKipcbiAqIGFwcHJveEFuZ3VsYXJEaXN0YW5jZSByZXR1cm5zIHRoZSBjb3NpbmUgb2YgdGhlIGFuZ2xlIGJldHdlZW4gdHdvIHBvaW50cy5cbiAqXG4gKiBUaGUgYWNjdXJhY3kgZGV0ZXJpb3JhdGVzIGF0IHNtYWxsIGFuZ2xlcy5cbiAqXG4gKiBAcGFyYW0ge0Nvb3JkfSBwMSAtIFBvaW50IDFcbiAqIEBwYXJhbSB7Q29vcmR9IHAyIC0gUG9pbnQgMlxuICogQHJldHVybnMge251bWJlcn0gY29zaW5lIGBjb3NgIG9mIHRoZSBhbmdsZSBiZXR3ZWVuIHR3byBwb2ludHMuXG4gKiBVc2UgYGQgPSBNYXRoLmFjb3MoY29zKWAgdG8gb2J0YWluIGdlb2NlbnRyaWMgYW5ndWxhciBkaXN0YW5jZSBpbiByYWRpYW5zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHByb3hBbmd1bGFyRGlzdGFuY2UgKHAxLCBwMikge1xuICBjb25zdCBzMSA9IE1hdGguc2luKHAxLmxhdClcbiAgY29uc3QgYzEgPSBNYXRoLmNvcyhwMS5sYXQpXG4gIGNvbnN0IHMyID0gTWF0aC5zaW4ocDIubGF0KVxuICBjb25zdCBjMiA9IE1hdGguY29zKHAyLmxhdClcbiAgcmV0dXJuIHMxICogczIgKyBjMSAqIGMyICogTWF0aC5jb3MocDEubG9uIC0gcDIubG9uKVxufVxuXG4vKipcbiAqIGFwcHJveExpbmVhckRpc3RhbmNlIGNvbXB1dGVzIGEgZGlzdGFuY2UgYWNyb3NzIHRoZSBzdXJmYWNlIG9mIHRoZSBFYXJ0aC5cbiAqXG4gKiBBcHByb3hpbWF0aW5nIHRoZSBFYXJ0aCBhcyBhIHNwaGVyZSwgdGhlIGZ1bmN0aW9uIHRha2VzIGEgZ2VvY2VudHJpYyBhbmd1bGFyXG4gKiBkaXN0YW5jZSBpbiByYWRpYW5zIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIGxpbmVhciBkaXN0YW5jZSBpbiBLbS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gZCAtIGdlb2NlbnRyaWMgYW5ndWxhciBkaXN0YW5jZSBpbiByYWRpYW5zXG4gKiBAcmV0dXJucyBsaW5lYXIgZGlzdGFuY2UgaW4gS21cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcHJveExpbmVhckRpc3RhbmNlIChkKSB7XG4gIHJldHVybiA2MzcxICogZFxufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNpbmNvczIgKHgpIHtcbiAgY29uc3QgcyA9IE1hdGguc2luKHgpXG4gIGNvbnN0IGMgPSBNYXRoLmNvcyh4KVxuICByZXR1cm4gW3MgKiBzLCBjICogY11cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBFbGxpcHNvaWQsXG4gIEVhcnRoNzYsXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjYW1lbGNhc2VcbiAgUm90YXRpb25SYXRlMTk5Nl81LFxuICBvbmVEZWdyZWVPZkxvbmdpdHVkZSxcbiAgb25lRGVncmVlT2ZMYXRpdHVkZSxcbiAgZ2VvY2VudHJpY0xhdGl0dWRlRGlmZmVyZW5jZSxcbiAgQ29vcmQsXG4gIGFwcHJveEFuZ3VsYXJEaXN0YW5jZSxcbiAgYXBwcm94TGluZWFyRGlzdGFuY2Vcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/globe.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/illum.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/illum.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fraction: () => (/* binding */ fraction),\n/* harmony export */   fractionVenus: () => (/* binding */ fractionVenus),\n/* harmony export */   jupiter: () => (/* binding */ jupiter),\n/* harmony export */   jupiter84: () => (/* binding */ jupiter84),\n/* harmony export */   mars: () => (/* binding */ mars),\n/* harmony export */   mars84: () => (/* binding */ mars84),\n/* harmony export */   mercury: () => (/* binding */ mercury),\n/* harmony export */   mercury84: () => (/* binding */ mercury84),\n/* harmony export */   neptune: () => (/* binding */ neptune),\n/* harmony export */   neptune84: () => (/* binding */ neptune84),\n/* harmony export */   phaseAngle: () => (/* binding */ phaseAngle),\n/* harmony export */   phaseAngle2: () => (/* binding */ phaseAngle2),\n/* harmony export */   phaseAngle3: () => (/* binding */ phaseAngle3),\n/* harmony export */   pluto84: () => (/* binding */ pluto84),\n/* harmony export */   saturn: () => (/* binding */ saturn),\n/* harmony export */   saturn84: () => (/* binding */ saturn84),\n/* harmony export */   uranus: () => (/* binding */ uranus),\n/* harmony export */   uranus84: () => (/* binding */ uranus84),\n/* harmony export */   venus: () => (/* binding */ venus),\n/* harmony export */   venus84: () => (/* binding */ venus84)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module illum\n */\n/**\n * Illum: Chapter 41, Illuminated Fraction of the Disk and Magnitude of a Planet.\n *\n * Also see functions `illuminated` and `limb` in package base.  While this\n * chapter title includes \"illumnated fraction,\" the function for computing\n * illuminated fraction given a phase angle is `base.illuminated`.\n * `base.limb` is the function mentioned at the bottom of p. 283.0\n */\n\n\n\nconst { toDeg } = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\nconst D2R = Math.PI / 180\n\n/**\n * PhaseAngle computes the phase angle of a planet.\n *\n * Argument r is planet's distance to Sun, Δ its distance to Earth, and R\n * the distance from Sun to Earth.  All distances in AU.\n *\n * Result in radians.\n */\nfunction phaseAngle (r, Δ, R) { // (r, Δ, R float64)  float64\n  return Math.acos((r * r + Δ * Δ - R * R) / (2 * r * Δ))\n}\n\n/**\n * Fraction computes the illuminated fraction of the disk of a planet.\n *\n * Argument r is planet's distance to Sun, Δ its distance to Earth, and R\n * the distance from Sun to Earth.  All distances in AU.\n */\nfunction fraction (r, Δ, R) { // (r, Δ, R float64)  float64\n  // (41.2) p. 283\n  const s = r + Δ\n  return (s * s - R * R) / (4 * r * Δ)\n}\n\n/**\n * PhaseAngle2 computes the phase angle of a planet.\n *\n * Arguments L, B, R are heliocentric ecliptical coordinates of the planet.\n * L0, R0 are longitude and radius for Earth, Δ is distance from Earth to\n * the planet.  All distances in AU, angles in radians.\n *\n * The phase angle result is in radians.\n */\nfunction phaseAngle2 (L, B, R, L0, R0, Δ) { // (L, B, R, L0, R0, Δ float64)  float64\n  // (41.3) p. 283\n  return Math.acos((R - R0 * Math.cos(B) * Math.cos(L - L0)) / Δ)\n}\n\n/**\n * PhaseAngle3 computes the phase angle of a planet.\n *\n * Arguments L, B are heliocentric ecliptical longitude and latitude of the\n * planet.  x, y, z are cartesian coordinates of the planet, Δ is distance\n * from Earth to the planet.  All distances in AU, angles in radians.\n *\n * The phase angle result is in radians.\n */\nfunction phaseAngle3 (L, B, x, y, z, Δ) { // (L, B, x, y, z, Δ float64)  float64\n  // (41.4) p. 283\n  const [sL, cL] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(L)\n  const [sB, cB] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(B)\n  return Math.acos((x * cB * cL + y * cB * sL + z * sB) / Δ)\n}\n\n/**\n * FractionVenus computes an approximation of the illumanted fraction of Venus.\n */\nfunction fractionVenus (jde) { // (jde float64)  float64\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const V = (261.51 + 22518.443 * T) * D2R\n  const M = (177.53 + 35999.05 * T) * D2R\n  const N = (50.42 + 58517.811 * T) * D2R\n  const W = V + (1.91 * Math.sin(M) + 0.78 * Math.sin(N)) * D2R\n  const Δ = Math.sqrt(1.52321 + 1.44666 * Math.cos(W))\n  const s = 0.72333 + Δ\n  return (s * s - 1) / 2.89332 / Δ\n}\n\n/**\n * Mercury computes the visual magnitude of Mercury.\n * Formula by G. Müller\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction mercury (r, Δ, i) { // (r, Δ, i float64)  float64\n  const s = toDeg(i) - 50\n  return 1.16 + 5 * Math.log10(r * Δ) + (0.02838 + 0.0001023 * s) * s\n}\n\n/**\n * Venus computes the visual magnitude of Venus.\n * Formula by G. Müller\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction venus (r, Δ, i) { // (r, Δ, i float64)  float64\n  const iDeg = toDeg(i)\n  return -4 + 5 * Math.log10(r * Δ) + (0.01322 + 0.0000004247 * iDeg * iDeg) * iDeg\n}\n\n/**\n * Mars computes the visual magnitude of Mars.\n * Formula by G. Müller\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction mars (r, Δ, i) { // (r, Δ, i float64)  float64\n  return -1.3 + 5 * Math.log10(r * Δ) + 0.01486 * toDeg(i)\n}\n\n/**\n * Jupiter computes the visual magnitude of Jupiter.\n * Formula by G. Müller\n * Effect of phase not considered\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n */\nfunction jupiter (r, Δ) { // (r, Δ float64)  float64\n  return -8.93 + 5 * Math.log10(r * Δ)\n}\n\n/**\n * Saturn computes the visual magnitude of Saturn.\n * Formula by G. Müller\n * Sun's altitude above the plane of the ring is not considered.\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n * B is the Saturnicentric latitude of the Earth referred to the plane of\n * Saturn's ring.\n * ΔU (in radians) is the difference between the Saturnicentric longitudes\n * of the Sun and the Earth, measured in the plane of the ring.\n * You can use saturndisk.Disk() to obtain B and ΔU.\n */\nfunction saturn (r, Δ, B, ΔU) { // (r, Δ, B, ΔU float64)  float64\n  const s = Math.sin(Math.abs(B))\n  return -8.68 + 5 * Math.log10(r * Δ) + 0.044 * Math.abs(toDeg(ΔU)) - 2.6 * s + 1.25 * s * s\n}\n\n/**\n * Uranus computes the visual magnitude of Uranus.\n * Formula by G. Müller\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n */\nfunction uranus (r, Δ) { // (r, Δ float64)  float64\n  return -6.85 + 5 * Math.log10(r * Δ)\n}\n\n/**\n * Neptune computes the visual magnitude of Neptune.\n * Formulae by G. Müller\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n */\nfunction neptune (r, Δ) { // (r, Δ float64)  float64\n  return -7.05 + 5 * Math.log10(r * Δ)\n}\n\n/**\n * Mercury84 computes the visual magnitude of Mercury.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction mercury84 (r, Δ, i) { // (r, Δ, i float64)  float64\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(toDeg(i), -0.42 + 5 * Math.log10(r * Δ),\n    0.038, -0.000273, 0.000002)\n}\n\n/**\n * Venus84 computes the visual magnitude of Venus.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction venus84 (r, Δ, i) { // (r, Δ, i float64)  float64\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(toDeg(i), -4.4 + 5 * Math.log10(r * Δ),\n    0.0009, 0.000239, -0.00000065)\n}\n\n/**\n * Mars84 computes the visual magnitude of Mars.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction mars84 (r, Δ, i) { // (r, Δ, i float64)  float64\n  return -1.52 + 5 * Math.log10(r * Δ) + 0.016 * toDeg(i)\n}\n\n/**\n * Jupiter84 computes the visual magnitude of Jupiter.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth,\n * and i the phase angle in radians.\n */\nfunction jupiter84 (r, Δ, i) { // (r, Δ, i float64)  float64\n  return -9.4 + 5 * Math.log10(r * Δ) + 0.005 * toDeg(i)\n}\n\n/**\n * Saturn84 computes the visual magnitude of Saturn.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n * B is the Saturnicentric latitude of the Earth referred to the plane of\n * Saturn's ring.\n * ΔU (in radians) is the difference between the Saturnicentric longitudes\n * of the Sun and the Earth, measured in the plane of the ring.\n */\nfunction saturn84 (r, Δ, B, ΔU) { // (r, Δ, B, ΔU float64)  float64\n  const s = Math.sin(Math.abs(B))\n  return -8.88 + 5 * Math.log10(r * Δ) + 0.044 * Math.abs(toDeg(ΔU)) - 2.6 * s + 1.25 * s * s\n}\n\n/**\n * Uranus84 computes the visual magnitude of Uranus.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n */\nfunction uranus84 (r, Δ) { // (r, Δ float64)  float64\n  return -7.19 + 5 * Math.log10(r * Δ)\n}\n\n/**\n * Neptune84 computes the visual magnitude of Neptune.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n */\nfunction neptune84 (r, Δ) { // (r, Δ float64)  float64\n  return -6.87 + 5 * Math.log10(r * Δ)\n}\n\n/**\n * Pluto84 computes the visual magnitude of Pluto.\n * The formula is that adopted in \"Astronomical Almanac\" in 1984.0\n *\n * Argument r is the planet's distance from the Sun, Δ the distance from Earth.\n */\nfunction pluto84 (r, Δ) { // (r, Δ float64)  float64\n  return -1 + 5 * Math.log10(r * Δ)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  phaseAngle,\n  fraction,\n  phaseAngle2,\n  phaseAngle3,\n  fractionVenus,\n  mercury,\n  venus,\n  mars,\n  jupiter,\n  saturn,\n  uranus,\n  neptune,\n  mercury84,\n  venus84,\n  mars84,\n  jupiter84,\n  saturn84,\n  uranus84,\n  neptune84,\n  pluto84\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvaWxsdW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRCOztBQUU1QixRQUFRLFFBQVEsRUFBRSxnREFBSTtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDO0FBQ3ZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEJBQThCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRDQUE0QztBQUNuRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMENBQTBDO0FBQ2pEO0FBQ0EsbUJBQW1CLHVEQUFXO0FBQzlCLG1CQUFtQix1REFBVztBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPLCtCQUErQjtBQUN0QyxZQUFZLDZEQUFpQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkJBQTZCO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQjtBQUNsQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwQkFBMEI7QUFDakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQjtBQUNqQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdDQUFnQztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seUJBQXlCO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMEJBQTBCO0FBQ2pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQkFBK0I7QUFDdEMsU0FBUyx1REFBVztBQUNwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkJBQTZCO0FBQ3BDLFNBQVMsdURBQVc7QUFDcEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRCQUE0QjtBQUNuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrQ0FBa0M7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQjtBQUNsQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRCQUE0QjtBQUNuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQjtBQUNqQztBQUNBOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvaWxsdW0uanM/ZDdkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIGlsbHVtXG4gKi9cbi8qKlxuICogSWxsdW06IENoYXB0ZXIgNDEsIElsbHVtaW5hdGVkIEZyYWN0aW9uIG9mIHRoZSBEaXNrIGFuZCBNYWduaXR1ZGUgb2YgYSBQbGFuZXQuXG4gKlxuICogQWxzbyBzZWUgZnVuY3Rpb25zIGBpbGx1bWluYXRlZGAgYW5kIGBsaW1iYCBpbiBwYWNrYWdlIGJhc2UuICBXaGlsZSB0aGlzXG4gKiBjaGFwdGVyIHRpdGxlIGluY2x1ZGVzIFwiaWxsdW1uYXRlZCBmcmFjdGlvbixcIiB0aGUgZnVuY3Rpb24gZm9yIGNvbXB1dGluZ1xuICogaWxsdW1pbmF0ZWQgZnJhY3Rpb24gZ2l2ZW4gYSBwaGFzZSBhbmdsZSBpcyBgYmFzZS5pbGx1bWluYXRlZGAuXG4gKiBgYmFzZS5saW1iYCBpcyB0aGUgZnVuY3Rpb24gbWVudGlvbmVkIGF0IHRoZSBib3R0b20gb2YgcC4gMjgzLjBcbiAqL1xuXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5cbmNvbnN0IHsgdG9EZWcgfSA9IGJhc2VcbmNvbnN0IEQyUiA9IE1hdGguUEkgLyAxODBcblxuLyoqXG4gKiBQaGFzZUFuZ2xlIGNvbXB1dGVzIHRoZSBwaGFzZSBhbmdsZSBvZiBhIHBsYW5ldC5cbiAqXG4gKiBBcmd1bWVudCByIGlzIHBsYW5ldCdzIGRpc3RhbmNlIHRvIFN1biwgzpQgaXRzIGRpc3RhbmNlIHRvIEVhcnRoLCBhbmQgUlxuICogdGhlIGRpc3RhbmNlIGZyb20gU3VuIHRvIEVhcnRoLiAgQWxsIGRpc3RhbmNlcyBpbiBBVS5cbiAqXG4gKiBSZXN1bHQgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBoYXNlQW5nbGUgKHIsIM6ULCBSKSB7IC8vIChyLCDOlCwgUiBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gTWF0aC5hY29zKChyICogciArIM6UICogzpQgLSBSICogUikgLyAoMiAqIHIgKiDOlCkpXG59XG5cbi8qKlxuICogRnJhY3Rpb24gY29tcHV0ZXMgdGhlIGlsbHVtaW5hdGVkIGZyYWN0aW9uIG9mIHRoZSBkaXNrIG9mIGEgcGxhbmV0LlxuICpcbiAqIEFyZ3VtZW50IHIgaXMgcGxhbmV0J3MgZGlzdGFuY2UgdG8gU3VuLCDOlCBpdHMgZGlzdGFuY2UgdG8gRWFydGgsIGFuZCBSXG4gKiB0aGUgZGlzdGFuY2UgZnJvbSBTdW4gdG8gRWFydGguICBBbGwgZGlzdGFuY2VzIGluIEFVLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJhY3Rpb24gKHIsIM6ULCBSKSB7IC8vIChyLCDOlCwgUiBmbG9hdDY0KSAgZmxvYXQ2NFxuICAvLyAoNDEuMikgcC4gMjgzXG4gIGNvbnN0IHMgPSByICsgzpRcbiAgcmV0dXJuIChzICogcyAtIFIgKiBSKSAvICg0ICogciAqIM6UKVxufVxuXG4vKipcbiAqIFBoYXNlQW5nbGUyIGNvbXB1dGVzIHRoZSBwaGFzZSBhbmdsZSBvZiBhIHBsYW5ldC5cbiAqXG4gKiBBcmd1bWVudHMgTCwgQiwgUiBhcmUgaGVsaW9jZW50cmljIGVjbGlwdGljYWwgY29vcmRpbmF0ZXMgb2YgdGhlIHBsYW5ldC5cbiAqIEwwLCBSMCBhcmUgbG9uZ2l0dWRlIGFuZCByYWRpdXMgZm9yIEVhcnRoLCDOlCBpcyBkaXN0YW5jZSBmcm9tIEVhcnRoIHRvXG4gKiB0aGUgcGxhbmV0LiAgQWxsIGRpc3RhbmNlcyBpbiBBVSwgYW5nbGVzIGluIHJhZGlhbnMuXG4gKlxuICogVGhlIHBoYXNlIGFuZ2xlIHJlc3VsdCBpcyBpbiByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGhhc2VBbmdsZTIgKEwsIEIsIFIsIEwwLCBSMCwgzpQpIHsgLy8gKEwsIEIsIFIsIEwwLCBSMCwgzpQgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgLy8gKDQxLjMpIHAuIDI4M1xuICByZXR1cm4gTWF0aC5hY29zKChSIC0gUjAgKiBNYXRoLmNvcyhCKSAqIE1hdGguY29zKEwgLSBMMCkpIC8gzpQpXG59XG5cbi8qKlxuICogUGhhc2VBbmdsZTMgY29tcHV0ZXMgdGhlIHBoYXNlIGFuZ2xlIG9mIGEgcGxhbmV0LlxuICpcbiAqIEFyZ3VtZW50cyBMLCBCIGFyZSBoZWxpb2NlbnRyaWMgZWNsaXB0aWNhbCBsb25naXR1ZGUgYW5kIGxhdGl0dWRlIG9mIHRoZVxuICogcGxhbmV0LiAgeCwgeSwgeiBhcmUgY2FydGVzaWFuIGNvb3JkaW5hdGVzIG9mIHRoZSBwbGFuZXQsIM6UIGlzIGRpc3RhbmNlXG4gKiBmcm9tIEVhcnRoIHRvIHRoZSBwbGFuZXQuICBBbGwgZGlzdGFuY2VzIGluIEFVLCBhbmdsZXMgaW4gcmFkaWFucy5cbiAqXG4gKiBUaGUgcGhhc2UgYW5nbGUgcmVzdWx0IGlzIGluIHJhZGlhbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwaGFzZUFuZ2xlMyAoTCwgQiwgeCwgeSwgeiwgzpQpIHsgLy8gKEwsIEIsIHgsIHksIHosIM6UIGZsb2F0NjQpICBmbG9hdDY0XG4gIC8vICg0MS40KSBwLiAyODNcbiAgY29uc3QgW3NMLCBjTF0gPSBiYXNlLnNpbmNvcyhMKVxuICBjb25zdCBbc0IsIGNCXSA9IGJhc2Uuc2luY29zKEIpXG4gIHJldHVybiBNYXRoLmFjb3MoKHggKiBjQiAqIGNMICsgeSAqIGNCICogc0wgKyB6ICogc0IpIC8gzpQpXG59XG5cbi8qKlxuICogRnJhY3Rpb25WZW51cyBjb21wdXRlcyBhbiBhcHByb3hpbWF0aW9uIG9mIHRoZSBpbGx1bWFudGVkIGZyYWN0aW9uIG9mIFZlbnVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJhY3Rpb25WZW51cyAoamRlKSB7IC8vIChqZGUgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgVCA9IGJhc2UuSjIwMDBDZW50dXJ5KGpkZSlcbiAgY29uc3QgViA9ICgyNjEuNTEgKyAyMjUxOC40NDMgKiBUKSAqIEQyUlxuICBjb25zdCBNID0gKDE3Ny41MyArIDM1OTk5LjA1ICogVCkgKiBEMlJcbiAgY29uc3QgTiA9ICg1MC40MiArIDU4NTE3LjgxMSAqIFQpICogRDJSXG4gIGNvbnN0IFcgPSBWICsgKDEuOTEgKiBNYXRoLnNpbihNKSArIDAuNzggKiBNYXRoLnNpbihOKSkgKiBEMlJcbiAgY29uc3QgzpQgPSBNYXRoLnNxcnQoMS41MjMyMSArIDEuNDQ2NjYgKiBNYXRoLmNvcyhXKSlcbiAgY29uc3QgcyA9IDAuNzIzMzMgKyDOlFxuICByZXR1cm4gKHMgKiBzIC0gMSkgLyAyLjg5MzMyIC8gzpRcbn1cblxuLyoqXG4gKiBNZXJjdXJ5IGNvbXB1dGVzIHRoZSB2aXN1YWwgbWFnbml0dWRlIG9mIE1lcmN1cnkuXG4gKiBGb3JtdWxhIGJ5IEcuIE3DvGxsZXJcbiAqXG4gKiBBcmd1bWVudCByIGlzIHRoZSBwbGFuZXQncyBkaXN0YW5jZSBmcm9tIHRoZSBTdW4sIM6UIHRoZSBkaXN0YW5jZSBmcm9tIEVhcnRoLFxuICogYW5kIGkgdGhlIHBoYXNlIGFuZ2xlIGluIHJhZGlhbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJjdXJ5IChyLCDOlCwgaSkgeyAvLyAociwgzpQsIGkgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgcyA9IHRvRGVnKGkpIC0gNTBcbiAgcmV0dXJuIDEuMTYgKyA1ICogTWF0aC5sb2cxMChyICogzpQpICsgKDAuMDI4MzggKyAwLjAwMDEwMjMgKiBzKSAqIHNcbn1cblxuLyoqXG4gKiBWZW51cyBjb21wdXRlcyB0aGUgdmlzdWFsIG1hZ25pdHVkZSBvZiBWZW51cy5cbiAqIEZvcm11bGEgYnkgRy4gTcO8bGxlclxuICpcbiAqIEFyZ3VtZW50IHIgaXMgdGhlIHBsYW5ldCdzIGRpc3RhbmNlIGZyb20gdGhlIFN1biwgzpQgdGhlIGRpc3RhbmNlIGZyb20gRWFydGgsXG4gKiBhbmQgaSB0aGUgcGhhc2UgYW5nbGUgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZlbnVzIChyLCDOlCwgaSkgeyAvLyAociwgzpQsIGkgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgaURlZyA9IHRvRGVnKGkpXG4gIHJldHVybiAtNCArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlCkgKyAoMC4wMTMyMiArIDAuMDAwMDAwNDI0NyAqIGlEZWcgKiBpRGVnKSAqIGlEZWdcbn1cblxuLyoqXG4gKiBNYXJzIGNvbXB1dGVzIHRoZSB2aXN1YWwgbWFnbml0dWRlIG9mIE1hcnMuXG4gKiBGb3JtdWxhIGJ5IEcuIE3DvGxsZXJcbiAqXG4gKiBBcmd1bWVudCByIGlzIHRoZSBwbGFuZXQncyBkaXN0YW5jZSBmcm9tIHRoZSBTdW4sIM6UIHRoZSBkaXN0YW5jZSBmcm9tIEVhcnRoLFxuICogYW5kIGkgdGhlIHBoYXNlIGFuZ2xlIGluIHJhZGlhbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXJzIChyLCDOlCwgaSkgeyAvLyAociwgzpQsIGkgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgcmV0dXJuIC0xLjMgKyA1ICogTWF0aC5sb2cxMChyICogzpQpICsgMC4wMTQ4NiAqIHRvRGVnKGkpXG59XG5cbi8qKlxuICogSnVwaXRlciBjb21wdXRlcyB0aGUgdmlzdWFsIG1hZ25pdHVkZSBvZiBKdXBpdGVyLlxuICogRm9ybXVsYSBieSBHLiBNw7xsbGVyXG4gKiBFZmZlY3Qgb2YgcGhhc2Ugbm90IGNvbnNpZGVyZWRcbiAqXG4gKiBBcmd1bWVudCByIGlzIHRoZSBwbGFuZXQncyBkaXN0YW5jZSBmcm9tIHRoZSBTdW4sIM6UIHRoZSBkaXN0YW5jZSBmcm9tIEVhcnRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24ganVwaXRlciAociwgzpQpIHsgLy8gKHIsIM6UIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiAtOC45MyArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlClcbn1cblxuLyoqXG4gKiBTYXR1cm4gY29tcHV0ZXMgdGhlIHZpc3VhbCBtYWduaXR1ZGUgb2YgU2F0dXJuLlxuICogRm9ybXVsYSBieSBHLiBNw7xsbGVyXG4gKiBTdW4ncyBhbHRpdHVkZSBhYm92ZSB0aGUgcGxhbmUgb2YgdGhlIHJpbmcgaXMgbm90IGNvbnNpZGVyZWQuXG4gKlxuICogQXJndW1lbnQgciBpcyB0aGUgcGxhbmV0J3MgZGlzdGFuY2UgZnJvbSB0aGUgU3VuLCDOlCB0aGUgZGlzdGFuY2UgZnJvbSBFYXJ0aC5cbiAqIEIgaXMgdGhlIFNhdHVybmljZW50cmljIGxhdGl0dWRlIG9mIHRoZSBFYXJ0aCByZWZlcnJlZCB0byB0aGUgcGxhbmUgb2ZcbiAqIFNhdHVybidzIHJpbmcuXG4gKiDOlFUgKGluIHJhZGlhbnMpIGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIFNhdHVybmljZW50cmljIGxvbmdpdHVkZXNcbiAqIG9mIHRoZSBTdW4gYW5kIHRoZSBFYXJ0aCwgbWVhc3VyZWQgaW4gdGhlIHBsYW5lIG9mIHRoZSByaW5nLlxuICogWW91IGNhbiB1c2Ugc2F0dXJuZGlzay5EaXNrKCkgdG8gb2J0YWluIEIgYW5kIM6UVS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhdHVybiAociwgzpQsIEIsIM6UVSkgeyAvLyAociwgzpQsIEIsIM6UVSBmbG9hdDY0KSAgZmxvYXQ2NFxuICBjb25zdCBzID0gTWF0aC5zaW4oTWF0aC5hYnMoQikpXG4gIHJldHVybiAtOC42OCArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlCkgKyAwLjA0NCAqIE1hdGguYWJzKHRvRGVnKM6UVSkpIC0gMi42ICogcyArIDEuMjUgKiBzICogc1xufVxuXG4vKipcbiAqIFVyYW51cyBjb21wdXRlcyB0aGUgdmlzdWFsIG1hZ25pdHVkZSBvZiBVcmFudXMuXG4gKiBGb3JtdWxhIGJ5IEcuIE3DvGxsZXJcbiAqXG4gKiBBcmd1bWVudCByIGlzIHRoZSBwbGFuZXQncyBkaXN0YW5jZSBmcm9tIHRoZSBTdW4sIM6UIHRoZSBkaXN0YW5jZSBmcm9tIEVhcnRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXJhbnVzIChyLCDOlCkgeyAvLyAociwgzpQgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgcmV0dXJuIC02Ljg1ICsgNSAqIE1hdGgubG9nMTAociAqIM6UKVxufVxuXG4vKipcbiAqIE5lcHR1bmUgY29tcHV0ZXMgdGhlIHZpc3VhbCBtYWduaXR1ZGUgb2YgTmVwdHVuZS5cbiAqIEZvcm11bGFlIGJ5IEcuIE3DvGxsZXJcbiAqXG4gKiBBcmd1bWVudCByIGlzIHRoZSBwbGFuZXQncyBkaXN0YW5jZSBmcm9tIHRoZSBTdW4sIM6UIHRoZSBkaXN0YW5jZSBmcm9tIEVhcnRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbmVwdHVuZSAociwgzpQpIHsgLy8gKHIsIM6UIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiAtNy4wNSArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlClcbn1cblxuLyoqXG4gKiBNZXJjdXJ5ODQgY29tcHV0ZXMgdGhlIHZpc3VhbCBtYWduaXR1ZGUgb2YgTWVyY3VyeS5cbiAqIFRoZSBmb3JtdWxhIGlzIHRoYXQgYWRvcHRlZCBpbiBcIkFzdHJvbm9taWNhbCBBbG1hbmFjXCIgaW4gMTk4NC4wXG4gKlxuICogQXJndW1lbnQgciBpcyB0aGUgcGxhbmV0J3MgZGlzdGFuY2UgZnJvbSB0aGUgU3VuLCDOlCB0aGUgZGlzdGFuY2UgZnJvbSBFYXJ0aCxcbiAqIGFuZCBpIHRoZSBwaGFzZSBhbmdsZSBpbiByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVyY3VyeTg0IChyLCDOlCwgaSkgeyAvLyAociwgzpQsIGkgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgcmV0dXJuIGJhc2UuaG9ybmVyKHRvRGVnKGkpLCAtMC40MiArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlCksXG4gICAgMC4wMzgsIC0wLjAwMDI3MywgMC4wMDAwMDIpXG59XG5cbi8qKlxuICogVmVudXM4NCBjb21wdXRlcyB0aGUgdmlzdWFsIG1hZ25pdHVkZSBvZiBWZW51cy5cbiAqIFRoZSBmb3JtdWxhIGlzIHRoYXQgYWRvcHRlZCBpbiBcIkFzdHJvbm9taWNhbCBBbG1hbmFjXCIgaW4gMTk4NC4wXG4gKlxuICogQXJndW1lbnQgciBpcyB0aGUgcGxhbmV0J3MgZGlzdGFuY2UgZnJvbSB0aGUgU3VuLCDOlCB0aGUgZGlzdGFuY2UgZnJvbSBFYXJ0aCxcbiAqIGFuZCBpIHRoZSBwaGFzZSBhbmdsZSBpbiByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmVudXM4NCAociwgzpQsIGkpIHsgLy8gKHIsIM6ULCBpIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiBiYXNlLmhvcm5lcih0b0RlZyhpKSwgLTQuNCArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlCksXG4gICAgMC4wMDA5LCAwLjAwMDIzOSwgLTAuMDAwMDAwNjUpXG59XG5cbi8qKlxuICogTWFyczg0IGNvbXB1dGVzIHRoZSB2aXN1YWwgbWFnbml0dWRlIG9mIE1hcnMuXG4gKiBUaGUgZm9ybXVsYSBpcyB0aGF0IGFkb3B0ZWQgaW4gXCJBc3Ryb25vbWljYWwgQWxtYW5hY1wiIGluIDE5ODQuMFxuICpcbiAqIEFyZ3VtZW50IHIgaXMgdGhlIHBsYW5ldCdzIGRpc3RhbmNlIGZyb20gdGhlIFN1biwgzpQgdGhlIGRpc3RhbmNlIGZyb20gRWFydGgsXG4gKiBhbmQgaSB0aGUgcGhhc2UgYW5nbGUgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcnM4NCAociwgzpQsIGkpIHsgLy8gKHIsIM6ULCBpIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiAtMS41MiArIDUgKiBNYXRoLmxvZzEwKHIgKiDOlCkgKyAwLjAxNiAqIHRvRGVnKGkpXG59XG5cbi8qKlxuICogSnVwaXRlcjg0IGNvbXB1dGVzIHRoZSB2aXN1YWwgbWFnbml0dWRlIG9mIEp1cGl0ZXIuXG4gKiBUaGUgZm9ybXVsYSBpcyB0aGF0IGFkb3B0ZWQgaW4gXCJBc3Ryb25vbWljYWwgQWxtYW5hY1wiIGluIDE5ODQuMFxuICpcbiAqIEFyZ3VtZW50IHIgaXMgdGhlIHBsYW5ldCdzIGRpc3RhbmNlIGZyb20gdGhlIFN1biwgzpQgdGhlIGRpc3RhbmNlIGZyb20gRWFydGgsXG4gKiBhbmQgaSB0aGUgcGhhc2UgYW5nbGUgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGp1cGl0ZXI4NCAociwgzpQsIGkpIHsgLy8gKHIsIM6ULCBpIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiAtOS40ICsgNSAqIE1hdGgubG9nMTAociAqIM6UKSArIDAuMDA1ICogdG9EZWcoaSlcbn1cblxuLyoqXG4gKiBTYXR1cm44NCBjb21wdXRlcyB0aGUgdmlzdWFsIG1hZ25pdHVkZSBvZiBTYXR1cm4uXG4gKiBUaGUgZm9ybXVsYSBpcyB0aGF0IGFkb3B0ZWQgaW4gXCJBc3Ryb25vbWljYWwgQWxtYW5hY1wiIGluIDE5ODQuMFxuICpcbiAqIEFyZ3VtZW50IHIgaXMgdGhlIHBsYW5ldCdzIGRpc3RhbmNlIGZyb20gdGhlIFN1biwgzpQgdGhlIGRpc3RhbmNlIGZyb20gRWFydGguXG4gKiBCIGlzIHRoZSBTYXR1cm5pY2VudHJpYyBsYXRpdHVkZSBvZiB0aGUgRWFydGggcmVmZXJyZWQgdG8gdGhlIHBsYW5lIG9mXG4gKiBTYXR1cm4ncyByaW5nLlxuICogzpRVIChpbiByYWRpYW5zKSBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBTYXR1cm5pY2VudHJpYyBsb25naXR1ZGVzXG4gKiBvZiB0aGUgU3VuIGFuZCB0aGUgRWFydGgsIG1lYXN1cmVkIGluIHRoZSBwbGFuZSBvZiB0aGUgcmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhdHVybjg0IChyLCDOlCwgQiwgzpRVKSB7IC8vIChyLCDOlCwgQiwgzpRVIGZsb2F0NjQpICBmbG9hdDY0XG4gIGNvbnN0IHMgPSBNYXRoLnNpbihNYXRoLmFicyhCKSlcbiAgcmV0dXJuIC04Ljg4ICsgNSAqIE1hdGgubG9nMTAociAqIM6UKSArIDAuMDQ0ICogTWF0aC5hYnModG9EZWcozpRVKSkgLSAyLjYgKiBzICsgMS4yNSAqIHMgKiBzXG59XG5cbi8qKlxuICogVXJhbnVzODQgY29tcHV0ZXMgdGhlIHZpc3VhbCBtYWduaXR1ZGUgb2YgVXJhbnVzLlxuICogVGhlIGZvcm11bGEgaXMgdGhhdCBhZG9wdGVkIGluIFwiQXN0cm9ub21pY2FsIEFsbWFuYWNcIiBpbiAxOTg0LjBcbiAqXG4gKiBBcmd1bWVudCByIGlzIHRoZSBwbGFuZXQncyBkaXN0YW5jZSBmcm9tIHRoZSBTdW4sIM6UIHRoZSBkaXN0YW5jZSBmcm9tIEVhcnRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXJhbnVzODQgKHIsIM6UKSB7IC8vIChyLCDOlCBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gLTcuMTkgKyA1ICogTWF0aC5sb2cxMChyICogzpQpXG59XG5cbi8qKlxuICogTmVwdHVuZTg0IGNvbXB1dGVzIHRoZSB2aXN1YWwgbWFnbml0dWRlIG9mIE5lcHR1bmUuXG4gKiBUaGUgZm9ybXVsYSBpcyB0aGF0IGFkb3B0ZWQgaW4gXCJBc3Ryb25vbWljYWwgQWxtYW5hY1wiIGluIDE5ODQuMFxuICpcbiAqIEFyZ3VtZW50IHIgaXMgdGhlIHBsYW5ldCdzIGRpc3RhbmNlIGZyb20gdGhlIFN1biwgzpQgdGhlIGRpc3RhbmNlIGZyb20gRWFydGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBuZXB0dW5lODQgKHIsIM6UKSB7IC8vIChyLCDOlCBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gLTYuODcgKyA1ICogTWF0aC5sb2cxMChyICogzpQpXG59XG5cbi8qKlxuICogUGx1dG84NCBjb21wdXRlcyB0aGUgdmlzdWFsIG1hZ25pdHVkZSBvZiBQbHV0by5cbiAqIFRoZSBmb3JtdWxhIGlzIHRoYXQgYWRvcHRlZCBpbiBcIkFzdHJvbm9taWNhbCBBbG1hbmFjXCIgaW4gMTk4NC4wXG4gKlxuICogQXJndW1lbnQgciBpcyB0aGUgcGxhbmV0J3MgZGlzdGFuY2UgZnJvbSB0aGUgU3VuLCDOlCB0aGUgZGlzdGFuY2UgZnJvbSBFYXJ0aC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBsdXRvODQgKHIsIM6UKSB7IC8vIChyLCDOlCBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gLTEgKyA1ICogTWF0aC5sb2cxMChyICogzpQpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcGhhc2VBbmdsZSxcbiAgZnJhY3Rpb24sXG4gIHBoYXNlQW5nbGUyLFxuICBwaGFzZUFuZ2xlMyxcbiAgZnJhY3Rpb25WZW51cyxcbiAgbWVyY3VyeSxcbiAgdmVudXMsXG4gIG1hcnMsXG4gIGp1cGl0ZXIsXG4gIHNhdHVybixcbiAgdXJhbnVzLFxuICBuZXB0dW5lLFxuICBtZXJjdXJ5ODQsXG4gIHZlbnVzODQsXG4gIG1hcnM4NCxcbiAganVwaXRlcjg0LFxuICBzYXR1cm44NCxcbiAgdXJhbnVzODQsXG4gIG5lcHR1bmU4NCxcbiAgcGx1dG84NFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/illum.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   angle: () => (/* reexport safe */ _angle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   apparent: () => (/* reexport safe */ _apparent_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   apsis: () => (/* reexport safe */ _apsis_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   base: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   binary: () => (/* reexport safe */ _binary_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   circle: () => (/* reexport safe */ _circle_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   conjunction: () => (/* reexport safe */ _conjunction_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   coord: () => (/* reexport safe */ _coord_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   deltat: () => (/* reexport safe */ _deltat_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   eclipse: () => (/* reexport safe */ _eclipse_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]),\n/* harmony export */   elementequinox: () => (/* reexport safe */ _elementequinox_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   elliptic: () => (/* reexport safe */ _elliptic_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   elp: () => (/* reexport safe */ _elp_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]),\n/* harmony export */   eqtime: () => (/* reexport safe */ _eqtime_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]),\n/* harmony export */   fit: () => (/* reexport safe */ _fit_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]),\n/* harmony export */   globe: () => (/* reexport safe */ _globe_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]),\n/* harmony export */   illum: () => (/* reexport safe */ _illum_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]),\n/* harmony export */   interpolation: () => (/* reexport safe */ _interpolation_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]),\n/* harmony export */   iterate: () => (/* reexport safe */ _iterate_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]),\n/* harmony export */   jm: () => (/* reexport safe */ _jm_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"]),\n/* harmony export */   julian: () => (/* reexport safe */ _julian_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"]),\n/* harmony export */   jupiter: () => (/* reexport safe */ _jupiter_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]),\n/* harmony export */   jupitermoons: () => (/* reexport safe */ _jupitermoons_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]),\n/* harmony export */   kepler: () => (/* reexport safe */ _kepler_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"]),\n/* harmony export */   line: () => (/* reexport safe */ _line_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"]),\n/* harmony export */   mars: () => (/* reexport safe */ _mars_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"]),\n/* harmony export */   moon: () => (/* reexport safe */ _moon_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"]),\n/* harmony export */   moonillum: () => (/* reexport safe */ _moonillum_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"]),\n/* harmony export */   moonmaxdec: () => (/* reexport safe */ _moonmaxdec_js__WEBPACK_IMPORTED_MODULE_31__[\"default\"]),\n/* harmony export */   moonnode: () => (/* reexport safe */ _moonnode_js__WEBPACK_IMPORTED_MODULE_32__[\"default\"]),\n/* harmony export */   moonphase: () => (/* reexport safe */ _moonphase_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"]),\n/* harmony export */   moonposition: () => (/* reexport safe */ _moonposition_js__WEBPACK_IMPORTED_MODULE_34__[\"default\"]),\n/* harmony export */   nearparabolic: () => (/* reexport safe */ _nearparabolic_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]),\n/* harmony export */   node: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]),\n/* harmony export */   nutation: () => (/* reexport safe */ _nutation_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"]),\n/* harmony export */   parabolic: () => (/* reexport safe */ _parabolic_js__WEBPACK_IMPORTED_MODULE_35__[\"default\"]),\n/* harmony export */   parallactic: () => (/* reexport safe */ _parallactic_js__WEBPACK_IMPORTED_MODULE_37__[\"default\"]),\n/* harmony export */   parallax: () => (/* reexport safe */ _parallax_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"]),\n/* harmony export */   perihelion: () => (/* reexport safe */ _perihelion_js__WEBPACK_IMPORTED_MODULE_38__[\"default\"]),\n/* harmony export */   planetary: () => (/* reexport safe */ _planetary_js__WEBPACK_IMPORTED_MODULE_39__[\"default\"]),\n/* harmony export */   planetelements: () => (/* reexport safe */ _planetelements_js__WEBPACK_IMPORTED_MODULE_41__[\"default\"]),\n/* harmony export */   planetposition: () => (/* reexport safe */ _planetposition_js__WEBPACK_IMPORTED_MODULE_40__[\"default\"]),\n/* harmony export */   pluto: () => (/* reexport safe */ _pluto_js__WEBPACK_IMPORTED_MODULE_42__[\"default\"]),\n/* harmony export */   precess: () => (/* reexport safe */ _precess_js__WEBPACK_IMPORTED_MODULE_43__[\"default\"]),\n/* harmony export */   refraction: () => (/* reexport safe */ _refraction_js__WEBPACK_IMPORTED_MODULE_44__[\"default\"]),\n/* harmony export */   rise: () => (/* reexport safe */ _rise_js__WEBPACK_IMPORTED_MODULE_45__[\"default\"]),\n/* harmony export */   saturnmoons: () => (/* reexport safe */ _saturnmoons_js__WEBPACK_IMPORTED_MODULE_46__[\"default\"]),\n/* harmony export */   saturnring: () => (/* reexport safe */ _saturnring_js__WEBPACK_IMPORTED_MODULE_47__[\"default\"]),\n/* harmony export */   sexagesimal: () => (/* reexport safe */ _sexagesimal_js__WEBPACK_IMPORTED_MODULE_48__[\"default\"]),\n/* harmony export */   sidereal: () => (/* reexport safe */ _sidereal_js__WEBPACK_IMPORTED_MODULE_49__[\"default\"]),\n/* harmony export */   solar: () => (/* reexport safe */ _solar_js__WEBPACK_IMPORTED_MODULE_50__[\"default\"]),\n/* harmony export */   solardisk: () => (/* reexport safe */ _solardisk_js__WEBPACK_IMPORTED_MODULE_51__[\"default\"]),\n/* harmony export */   solarxyz: () => (/* reexport safe */ _solarxyz_js__WEBPACK_IMPORTED_MODULE_52__[\"default\"]),\n/* harmony export */   solstice: () => (/* reexport safe */ _solstice_js__WEBPACK_IMPORTED_MODULE_53__[\"default\"]),\n/* harmony export */   stellar: () => (/* reexport safe */ _stellar_js__WEBPACK_IMPORTED_MODULE_54__[\"default\"]),\n/* harmony export */   sundial: () => (/* reexport safe */ _sundial_js__WEBPACK_IMPORTED_MODULE_55__[\"default\"]),\n/* harmony export */   sunrise: () => (/* reexport safe */ _sunrise_js__WEBPACK_IMPORTED_MODULE_56__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _angle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./angle.js */ \"./node_modules/astronomia/src/angle.js\");\n/* harmony import */ var _apparent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apparent.js */ \"./node_modules/astronomia/src/apparent.js\");\n/* harmony import */ var _apsis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apsis.js */ \"./node_modules/astronomia/src/apsis.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./binary.js */ \"./node_modules/astronomia/src/binary.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _conjunction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./conjunction.js */ \"./node_modules/astronomia/src/conjunction.js\");\n/* harmony import */ var _circle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./circle.js */ \"./node_modules/astronomia/src/circle.js\");\n/* harmony import */ var _deltat_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./deltat.js */ \"./node_modules/astronomia/src/deltat.js\");\n/* harmony import */ var _elementequinox_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./elementequinox.js */ \"./node_modules/astronomia/src/elementequinox.js\");\n/* harmony import */ var _elliptic_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./elliptic.js */ \"./node_modules/astronomia/src/elliptic.js\");\n/* harmony import */ var _eclipse_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./eclipse.js */ \"./node_modules/astronomia/src/eclipse.js\");\n/* harmony import */ var _elp_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./elp.js */ \"./node_modules/astronomia/src/elp.js\");\n/* harmony import */ var _eqtime_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./eqtime.js */ \"./node_modules/astronomia/src/eqtime.js\");\n/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fit.js */ \"./node_modules/astronomia/src/fit.js\");\n/* harmony import */ var _globe_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./globe.js */ \"./node_modules/astronomia/src/globe.js\");\n/* harmony import */ var _illum_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./illum.js */ \"./node_modules/astronomia/src/illum.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/* harmony import */ var _iterate_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./iterate.js */ \"./node_modules/astronomia/src/iterate.js\");\n/* harmony import */ var _jm_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./jm.js */ \"./node_modules/astronomia/src/jm.js\");\n/* harmony import */ var _julian_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./julian.js */ \"./node_modules/astronomia/src/julian.js\");\n/* harmony import */ var _jupiter_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./jupiter.js */ \"./node_modules/astronomia/src/jupiter.js\");\n/* harmony import */ var _jupitermoons_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./jupitermoons.js */ \"./node_modules/astronomia/src/jupitermoons.js\");\n/* harmony import */ var _kepler_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./kepler.js */ \"./node_modules/astronomia/src/kepler.js\");\n/* harmony import */ var _line_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./line.js */ \"./node_modules/astronomia/src/line.js\");\n/* harmony import */ var _nearparabolic_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./nearparabolic.js */ \"./node_modules/astronomia/src/nearparabolic.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./node.js */ \"./node_modules/astronomia/src/node.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _mars_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./mars.js */ \"./node_modules/astronomia/src/mars.js\");\n/* harmony import */ var _moon_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./moon.js */ \"./node_modules/astronomia/src/moon.js\");\n/* harmony import */ var _moonillum_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./moonillum.js */ \"./node_modules/astronomia/src/moonillum.js\");\n/* harmony import */ var _moonmaxdec_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./moonmaxdec.js */ \"./node_modules/astronomia/src/moonmaxdec.js\");\n/* harmony import */ var _moonnode_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./moonnode.js */ \"./node_modules/astronomia/src/moonnode.js\");\n/* harmony import */ var _moonphase_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./moonphase.js */ \"./node_modules/astronomia/src/moonphase.js\");\n/* harmony import */ var _moonposition_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./moonposition.js */ \"./node_modules/astronomia/src/moonposition.js\");\n/* harmony import */ var _parabolic_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./parabolic.js */ \"./node_modules/astronomia/src/parabolic.js\");\n/* harmony import */ var _parallax_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./parallax.js */ \"./node_modules/astronomia/src/parallax.js\");\n/* harmony import */ var _parallactic_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./parallactic.js */ \"./node_modules/astronomia/src/parallactic.js\");\n/* harmony import */ var _perihelion_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./perihelion.js */ \"./node_modules/astronomia/src/perihelion.js\");\n/* harmony import */ var _planetary_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./planetary.js */ \"./node_modules/astronomia/src/planetary.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/* harmony import */ var _planetelements_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./planetelements.js */ \"./node_modules/astronomia/src/planetelements.js\");\n/* harmony import */ var _pluto_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./pluto.js */ \"./node_modules/astronomia/src/pluto.js\");\n/* harmony import */ var _precess_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./precess.js */ \"./node_modules/astronomia/src/precess.js\");\n/* harmony import */ var _refraction_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./refraction.js */ \"./node_modules/astronomia/src/refraction.js\");\n/* harmony import */ var _rise_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./rise.js */ \"./node_modules/astronomia/src/rise.js\");\n/* harmony import */ var _saturnmoons_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./saturnmoons.js */ \"./node_modules/astronomia/src/saturnmoons.js\");\n/* harmony import */ var _saturnring_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./saturnring.js */ \"./node_modules/astronomia/src/saturnring.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/* harmony import */ var _sidereal_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./sidereal.js */ \"./node_modules/astronomia/src/sidereal.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/* harmony import */ var _solardisk_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./solardisk.js */ \"./node_modules/astronomia/src/solardisk.js\");\n/* harmony import */ var _solarxyz_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./solarxyz.js */ \"./node_modules/astronomia/src/solarxyz.js\");\n/* harmony import */ var _solstice_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./solstice.js */ \"./node_modules/astronomia/src/solstice.js\");\n/* harmony import */ var _stellar_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./stellar.js */ \"./node_modules/astronomia/src/stellar.js\");\n/* harmony import */ var _sundial_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./sundial.js */ \"./node_modules/astronomia/src/sundial.js\");\n/* harmony import */ var _sunrise_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./sunrise.js */ \"./node_modules/astronomia/src/sunrise.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZDO0FBQ007QUFDTjtBQUNGO0FBQ0k7QUFDRjtBQUNZO0FBQ1Y7QUFDQTtBQUNnQjtBQUNaO0FBQ0Y7QUFDUjtBQUNNO0FBQ047QUFDSTtBQUNBO0FBQ2dCO0FBQ1o7QUFDVjtBQUNRO0FBQ0U7QUFDVTtBQUNaO0FBQ0o7QUFDa0I7QUFDbEI7QUFDUTtBQUNSO0FBQ0E7QUFDVTtBQUNFO0FBQ0o7QUFDRTtBQUNNO0FBQ047QUFDRjtBQUNNO0FBQ0Y7QUFDRjtBQUNVO0FBQ0E7QUFDbEI7QUFDSTtBQUNNO0FBQ1o7QUFDYztBQUNGO0FBQ0U7QUFDTjtBQUNOO0FBQ1E7QUFDRjtBQUNBO0FBQ0Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2luZGV4LmpzPzZkMjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBhbmdsZSB9IGZyb20gJy4vYW5nbGUuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGFwcGFyZW50IH0gZnJvbSAnLi9hcHBhcmVudC5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYXBzaXMgfSBmcm9tICcuL2Fwc2lzLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBiYXNlIH0gZnJvbSAnLi9iYXNlLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBiaW5hcnkgfSBmcm9tICcuL2JpbmFyeS5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgY29vcmQgfSBmcm9tICcuL2Nvb3JkLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjb25qdW5jdGlvbiB9IGZyb20gJy4vY29uanVuY3Rpb24uanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGNpcmNsZSB9IGZyb20gJy4vY2lyY2xlLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBkZWx0YXQgfSBmcm9tICcuL2RlbHRhdC5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZWxlbWVudGVxdWlub3ggfSBmcm9tICcuL2VsZW1lbnRlcXVpbm94LmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBlbGxpcHRpYyB9IGZyb20gJy4vZWxsaXB0aWMuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGVjbGlwc2UgfSBmcm9tICcuL2VjbGlwc2UuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGVscCB9IGZyb20gJy4vZWxwLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBlcXRpbWUgfSBmcm9tICcuL2VxdGltZS5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZml0IH0gZnJvbSAnLi9maXQuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGdsb2JlIH0gZnJvbSAnLi9nbG9iZS5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaWxsdW0gfSBmcm9tICcuL2lsbHVtLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBpbnRlcnBvbGF0aW9uIH0gZnJvbSAnLi9pbnRlcnBvbGF0aW9uLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBpdGVyYXRlIH0gZnJvbSAnLi9pdGVyYXRlLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBqbSB9IGZyb20gJy4vam0uanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGp1bGlhbiB9IGZyb20gJy4vanVsaWFuLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBqdXBpdGVyIH0gZnJvbSAnLi9qdXBpdGVyLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBqdXBpdGVybW9vbnMgfSBmcm9tICcuL2p1cGl0ZXJtb29ucy5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMga2VwbGVyIH0gZnJvbSAnLi9rZXBsZXIuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGxpbmUgfSBmcm9tICcuL2xpbmUuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG5lYXJwYXJhYm9saWMgfSBmcm9tICcuL25lYXJwYXJhYm9saWMuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG5vZGUgfSBmcm9tICcuL25vZGUuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG51dGF0aW9uIH0gZnJvbSAnLi9udXRhdGlvbi5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbWFycyB9IGZyb20gJy4vbWFycy5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbW9vbiB9IGZyb20gJy4vbW9vbi5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbW9vbmlsbHVtIH0gZnJvbSAnLi9tb29uaWxsdW0uanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG1vb25tYXhkZWMgfSBmcm9tICcuL21vb25tYXhkZWMuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG1vb25ub2RlIH0gZnJvbSAnLi9tb29ubm9kZS5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbW9vbnBoYXNlIH0gZnJvbSAnLi9tb29ucGhhc2UuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG1vb25wb3NpdGlvbiB9IGZyb20gJy4vbW9vbnBvc2l0aW9uLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJhYm9saWMgfSBmcm9tICcuL3BhcmFib2xpYy5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcGFyYWxsYXggfSBmcm9tICcuL3BhcmFsbGF4LmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJhbGxhY3RpYyB9IGZyb20gJy4vcGFyYWxsYWN0aWMuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHBlcmloZWxpb24gfSBmcm9tICcuL3BlcmloZWxpb24uanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHBsYW5ldGFyeSB9IGZyb20gJy4vcGxhbmV0YXJ5LmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwbGFuZXRwb3NpdGlvbiB9IGZyb20gJy4vcGxhbmV0cG9zaXRpb24uanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHBsYW5ldGVsZW1lbnRzIH0gZnJvbSAnLi9wbGFuZXRlbGVtZW50cy5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcGx1dG8gfSBmcm9tICcuL3BsdXRvLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwcmVjZXNzIH0gZnJvbSAnLi9wcmVjZXNzLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyByZWZyYWN0aW9uIH0gZnJvbSAnLi9yZWZyYWN0aW9uLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyByaXNlIH0gZnJvbSAnLi9yaXNlLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzYXR1cm5tb29ucyB9IGZyb20gJy4vc2F0dXJubW9vbnMuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNhdHVybnJpbmcgfSBmcm9tICcuL3NhdHVybnJpbmcuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNleGFnZXNpbWFsIH0gZnJvbSAnLi9zZXhhZ2VzaW1hbC5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc2lkZXJlYWwgfSBmcm9tICcuL3NpZGVyZWFsLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzb2xhciB9IGZyb20gJy4vc29sYXIuanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNvbGFyZGlzayB9IGZyb20gJy4vc29sYXJkaXNrLmpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzb2xhcnh5eiB9IGZyb20gJy4vc29sYXJ4eXouanMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNvbHN0aWNlIH0gZnJvbSAnLi9zb2xzdGljZS5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3RlbGxhciB9IGZyb20gJy4vc3RlbGxhci5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3VuZGlhbCB9IGZyb20gJy4vc3VuZGlhbC5qcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3VucmlzZSB9IGZyb20gJy4vc3VucmlzZS5qcydcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/index.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/interpolation.js":
/*!******************************************************!*\
  !*** ./node_modules/astronomia/src/interpolation.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Len3: () => (/* binding */ Len3),\n/* harmony export */   Len5: () => (/* binding */ Len5),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   errorExtremumOutside: () => (/* binding */ errorExtremumOutside),\n/* harmony export */   errorNOutOfRange: () => (/* binding */ errorNOutOfRange),\n/* harmony export */   errorNoConverge: () => (/* binding */ errorNoConverge),\n/* harmony export */   errorNoExtremum: () => (/* binding */ errorNoExtremum),\n/* harmony export */   errorNoXRange: () => (/* binding */ errorNoXRange),\n/* harmony export */   errorNot3: () => (/* binding */ errorNot3),\n/* harmony export */   errorNot4: () => (/* binding */ errorNot4),\n/* harmony export */   errorNot5: () => (/* binding */ errorNot5),\n/* harmony export */   errorZeroOutside: () => (/* binding */ errorZeroOutside),\n/* harmony export */   iterate: () => (/* binding */ iterate),\n/* harmony export */   lagrange: () => (/* binding */ lagrange),\n/* harmony export */   lagrangePoly: () => (/* binding */ lagrangePoly),\n/* harmony export */   len3ForInterpolateX: () => (/* binding */ len3ForInterpolateX),\n/* harmony export */   len4Half: () => (/* binding */ len4Half),\n/* harmony export */   linear: () => (/* binding */ linear)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module interpolation\n */\n/**\n * Interp: Chapter 3, Interpolation.\n *\n * Len3 and Len5 types\n *\n * These types allow interpolation from a table of equidistant x values\n * and corresponding y values.  Since the x values are equidistant,\n * only the first and last values are supplied as arguments to the\n * constructors.  The interior x values are implicit.  All y values must be\n * supplied however.  They are passed as a slice, and the length of y is fixed.\n * For Len3 it must be 3 and for (Len5 it must be 5.0\n *\n * For these Len3 and Len5 functions, Meeus notes the importance of choosing\n * the 3 or 5 rows of a larger table that will minimize the interpolating\n * factor n.  He does not provide algorithms for doing this however.\n *\n * For an example of a selection function, see len3ForInterpolateX. This\n * was useful for computing Delta T.\n */\n\n\nconst int = Math.trunc\n\n/**\n * Error values returned by functions and methods in this package.\n * Defined here to help testing for specific errors.\n */\nconst errorNot3 = new Error('Argument y must be length 3')\nconst errorNot4 = new Error('Argument y must be length 4')\nconst errorNot5 = new Error('Argument y must be length 5')\nconst errorNoXRange = new Error('Argument x3 (or x5) cannot equal x1')\nconst errorNOutOfRange = new Error('Interpolating factor n must be in range -1 to 1')\nconst errorNoExtremum = new Error('No extremum in table')\nconst errorExtremumOutside = new Error('Extremum falls outside of table')\nconst errorZeroOutside = new Error('Zero falls outside of table')\nconst errorNoConverge = new Error('Failure to converge')\n\n/**\n * Len3 allows second difference interpolation.\n */\nclass Len3 {\n  /**\n   * NewLen3 prepares a Len3 object from a table of three rows of x and y values.\n   *\n   * X values must be equally spaced, so only the first and last are supplied.\n   * X1 must not equal to x3.  Y must be a slice of three y values.\n   *\n   * @throws Error\n   * @param {Number} x1 - is the x value corresponding to the first y value of the table.\n   * @param {Number} x3 - is the x value corresponding to the last y value of the table.\n   * @param {Number[]} y - is all y values in the table. y.length should be >= 3.0\n   */\n  constructor (x1, x3, y) {\n    if (y.length !== 3) {\n      throw errorNot3\n    }\n    if (x3 === x1) {\n      throw errorNoXRange\n    }\n    this.x1 = x1\n    this.x3 = x3\n    this.y = y\n    // differences. (3.1) p. 23\n    this.a = y[1] - y[0]\n    this.b = y[2] - y[1]\n    this.c = this.b - this.a\n    // other intermediate values\n    this.abSum = this.a + this.b\n    this.xSum = x3 + x1\n    this.xDiff = x3 - x1\n  }\n\n  /**\n   * InterpolateX interpolates for a given x value.\n   */\n  interpolateX (x) {\n    const n = (2 * x - this.xSum) / this.xDiff\n    return this.interpolateN(n)\n  }\n\n  /**\n   * InterpolateXStrict interpolates for a given x value,\n   * restricting x to the range x1 to x3 given to the constructor NewLen3.\n   */\n  interpolateXStrict (x) {\n    const n = (2 * x - this.xSum) / this.xDiff\n    const y = this.interpolateNStrict(n)\n    return y\n  }\n\n  /**\n   * InterpolateN interpolates for (a given interpolating factor n.\n   *\n   * This is interpolation formula (3.3)\n   *\n   * @param n - The interpolation factor n is x-x2 in units of the tabular x interval.\n   * (See Meeus p. 24.)\n   * @return {number} interpolation value\n   */\n  interpolateN (n) {\n    return this.y[1] + n * 0.5 * (this.abSum + n * this.c)\n  }\n\n  /**\n   * InterpolateNStrict interpolates for (a given interpolating factor n.\n   *\n   * @param {number} n - n is restricted to the range [-1..1] corresponding to the range x1 to x3\n   * given to the constructor of Len3.\n   * @return {number} interpolation value\n   */\n  interpolateNStrict (n) {\n    if (n < -1 || n > 1) {\n      throw errorNOutOfRange\n    }\n    return this.interpolateN(n)\n  }\n\n  /**\n   * Extremum returns the x and y values at the extremum.\n   *\n   * Results are restricted to the range of the table given to the constructor\n   * new Len3.\n   */\n  extremum () {\n    if (this.c === 0) {\n      throw errorNoExtremum\n    }\n    const n = this.abSum / (-2 * this.c) // (3.5), p. 25\n    if (n < -1 || n > 1) {\n      throw errorExtremumOutside\n    }\n    const x = 0.5 * (this.xSum + this.xDiff * n)\n    const y = this.y[1] - (this.abSum * this.abSum) / (8 * this.c) // (3.4), p. 25\n    return [x, y]\n  }\n\n  /**\n   * Len3Zero finds a zero of the quadratic function represented by the table.\n   *\n   * That is, it returns an x value that yields y=0.\n   *\n   * Argument strong switches between two strategies for the estimation step.\n   * when iterating to converge on the zero.\n   *\n   * Strong=false specifies a quick and dirty estimate that works well\n   * for gentle curves, but can work poorly or fail on more dramatic curves.\n   *\n   * Strong=true specifies a more sophisticated and thus somewhat more\n   * expensive estimate.  However, if the curve has quick changes, This estimate\n   * will converge more reliably and in fewer steps, making it a better choice.\n   *\n   * Results are restricted to the range of the table given to the constructor\n   * NewLen3.\n   */\n  zero (strong) {\n    let f\n    if (strong) {\n      // (3.7), p. 27\n      f = (n0) => {\n        return n0 - (2 * this.y[1] + n0 * (this.abSum + this.c * n0)) /\n        (this.abSum + 2 * this.c * n0)\n      }\n    } else {\n      // (3.6), p. 26\n      f = (n0) => {\n        return -2 * this.y[1] / (this.abSum + this.c * n0)\n      }\n    }\n    const [n0, ok] = iterate(0, f)\n    if (!ok) {\n      throw errorNoConverge\n    }\n    if (n0 > 1 || n0 < -1) {\n      throw errorZeroOutside\n    }\n    return 0.5 * (this.xSum + this.xDiff * n0) // success\n  }\n}\n\n/**\n * Len3ForInterpolateX is a special purpose Len3 constructor.\n *\n * Like NewLen3, it takes a table of x and y values, but it is not limited\n * to tables of 3 rows.  An X value is also passed that represents the\n * interpolation target x value.  Len3ForInterpolateX will locate the\n * appropriate three rows of the table for interpolating for x, and initialize\n * the Len3 object for those rows.\n *\n * @param {Number} x - is the target for interpolation\n * @param {Number} x1 - is the x value corresponding to the first y value of the table.\n * @param {Number} xN - is the x value corresponding to the last y value of the table.\n * @param {Number[]} y - is all y values in the table.  y.length should be >= 3.0\n * @returns {Len3} interpolation value\n */\nfunction len3ForInterpolateX (x, x1, xN, y) {\n  let y3 = y\n  if (y.length > 3) {\n    const interval = (xN - x1) / (y.length - 1)\n    if (interval === 0) {\n      throw errorNoXRange\n    }\n    let nearestX = int((x - x1) / interval + 0.5)\n    if (nearestX < 1) {\n      nearestX = 1\n    } else if (nearestX > y.length - 2) {\n      nearestX = y.length - 2\n    }\n    y3 = y.slice(nearestX - 1, nearestX + 2)\n    xN = x1 + (nearestX + 1) * interval\n    x1 = x1 + (nearestX - 1) * interval\n  }\n  return new Len3(x1, xN, y3)\n}\n\n/**\n * @private\n * @param {Number} n0\n * @param {Function} f\n * @returns {Array}\n *   {Number} n1\n *   {Boolean} ok - if `false` failure to converge\n */\nconst iterate = function (n0, f) {\n  for (let limit = 0; limit < 50; limit++) {\n    const n1 = f(n0)\n    if (!isFinite(n1) || isNaN(n1)) {\n      break // failure to converge\n    }\n    if (Math.abs((n1 - n0) / n0) < 1e-15) {\n      return [n1, true] // success\n    }\n    n0 = n1\n  }\n  return [0, false] // failure to converge\n}\n\n/**\n * Len4Half interpolates a center value from a table of four rows.\n * @param {Number[]} y - 4 values\n * @returns {Number} interpolation result\n */\nfunction len4Half (y) {\n  if (y.length !== 4) {\n    throw errorNot4\n  }\n  // (3.12) p. 32\n  return (9 * (y[1] + y[2]) - y[0] - y[3]) / 16\n}\n\n/**\n * Len5 allows fourth Difference interpolation.\n */\nclass Len5 {\n  /**\n   * NewLen5 prepares a Len5 object from a table of five rows of x and y values.\n   *\n   * X values must be equally spaced, so only the first and last are suppliethis.\n   * X1 must not equal x5.  Y must be a slice of five y values.\n   */\n  constructor (x1, x5, y) {\n    if (y.length !== 5) {\n      throw errorNot5\n    }\n    if (x5 === x1) {\n      throw errorNoXRange\n    }\n    this.x1 = x1\n    this.x5 = x5\n    this.y = y\n    this.y3 = y[2]\n    // differences\n    this.a = y[1] - y[0]\n    this.b = y[2] - y[1]\n    this.c = y[3] - y[2]\n    this.d = y[4] - y[3]\n\n    this.e = this.b - this.a\n    this.f = this.c - this.b\n    this.g = this.d - this.c\n\n    this.h = this.f - this.e\n    this.j = this.g - this.f\n\n    this.k = this.j - this.h\n    // other intermediate values\n    this.xSum = x5 + x1\n    this.xDiff = x5 - x1\n    this.interpCoeff = [ // (3.8) p. 28\n      this.y3,\n      (this.b + this.c) / 2 - (this.h + this.j) / 12,\n      this.f / 2 - this.k / 24,\n      (this.h + this.j) / 12,\n      this.k / 24\n    ]\n  }\n\n  /**\n   * InterpolateX interpolates for (a given x value.\n   */\n  interpolateX (x) {\n    const n = (4 * x - 2 * this.xSum) / this.xDiff\n    return this.interpolateN(n)\n  }\n\n  /**\n   * InterpolateXStrict interpolates for a given x value,\n   * restricting x to the range x1 to x5 given to the the constructor NewLen5.\n   */\n  interpolateXStrict (x) {\n    const n = (4 * x - 2 * this.xSum) / this.xDiff\n    const y = this.interpolateNStrict(n)\n    return y\n  }\n\n  /**\n   * InterpolateN interpolates for (a given interpolating factor n.\n   *\n   * The interpolation factor n is x-x3 in units of the tabular x interval.\n   * (See Meeus p. 28.)\n   */\n  interpolateN (n) {\n    return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n, ...this.interpCoeff)\n  }\n\n  /**\n   * InterpolateNStrict interpolates for (a given interpolating factor n.\n   *\n   * N is restricted to the range [-1..1].  This is only half the range given\n   * to the constructor NewLen5, but is the recommendation given on p. 31.0\n   */\n  interpolateNStrict (n) {\n    if (n < -1 || n > 1) {\n      throw errorNOutOfRange\n    }\n    return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n, ...this.interpCoeff)\n  }\n\n  /**\n   * Extremum returns the x and y values at the extremum.\n   *\n   * Results are restricted to the range of the table given to the constructor\n   * NewLen5.  (Meeus actually recommends restricting the range to one unit of\n   * the tabular interval, but that seems a little harsh.)\n   */\n  extremum () {\n    // (3.9) p. 29\n    const nCoeff = [\n      6 * (this.b + this.c) - this.h - this.j,\n      0,\n      3 * (this.h + this.j),\n      2 * this.k\n    ]\n    const den = this.k - 12 * this.f\n    if (den === 0) {\n      throw errorExtremumOutside\n    }\n    const [n0, ok] = iterate(0, function (n0) {\n      return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n0, ...nCoeff) / den\n    })\n    if (!ok) {\n      throw errorNoConverge\n    }\n    if (n0 < -2 || n0 > 2) {\n      throw errorExtremumOutside\n    }\n    const x = 0.5 * this.xSum + 0.25 * this.xDiff * n0\n    const y = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n0, ...this.interpCoeff)\n    return [x, y]\n  }\n\n  /**\n   * Len5Zero finds a zero of the quartic function represented by the table.\n   *\n   * That is, it returns an x value that yields y=0.\n   *\n   * Argument strong switches between two strategies for the estimation step.\n   * when iterating to converge on the zero.\n   *\n   * Strong=false specifies a quick and dirty estimate that works well\n   * for gentle curves, but can work poorly or fail on more dramatic curves.\n   *\n   * Strong=true specifies a more sophisticated and thus somewhat more\n   * expensive estimate.  However, if the curve has quick changes, This estimate\n   * will converge more reliably and in fewer steps, making it a better choice.\n   *\n   * Results are restricted to the range of the table given to the constructor\n   * NewLen5.\n   */\n  zero (strong) {\n    let f\n    if (strong) {\n      // (3.11), p. 29\n      const M = this.k / 24\n      const N = (this.h + this.j) / 12\n      const P = this.f / 2 - M\n      const Q = (this.b + this.c) / 2 - N\n      const numCoeff = [this.y3, Q, P, N, M]\n      const denCoeff = [Q, 2 * P, 3 * N, 4 * M]\n      f = function (n0) {\n        return n0 -\n          _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n0, ...numCoeff) / _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n0, ...denCoeff)\n      }\n    } else {\n      // (3.10), p. 29\n      const numCoeff = [\n        -24 * this.y3,\n        0,\n        this.k - 12 * this.f,\n        -2 * (this.h + this.j),\n        -this.k\n      ]\n      const den = 12 * (this.b + this.c) - 2 * (this.h + this.j)\n      f = function (n0) {\n        return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(n0, ...numCoeff) / den\n      }\n    }\n    const [n0, ok] = iterate(0, f)\n    if (!ok) {\n      throw errorNoConverge\n    }\n    if (n0 > 2 || n0 < -2) {\n      throw errorZeroOutside\n    }\n    const x = 0.5 * this.xSum + 0.25 * this.xDiff * n0\n    return x\n  }\n}\n\n/**\n * Lagrange performs interpolation with unequally-spaced abscissae.\n *\n * Given a table of X and Y values, interpolate a new y value for argument x.\n *\n * X values in the table do not have to be equally spaced; they do not even\n * have to be in order. They must however, be distinct.\n *\n * @param {Number} x - x-value of interpolation\n * @param {Array} table - `[[x0, y0], ... [xN, yN]]` of x, y values\n * @returns {Number} interpolation result `y` of `x`\n */\nfunction lagrange (x, table) {\n  // method of BASIC program, p. 33.0\n  let sum = 0\n  table.forEach((ti, i) => {\n    const xi = ti[0]\n    let prod = 1.0\n    table.forEach((tj, j) => {\n      if (i !== j) {\n        const xj = tj[0]\n        prod *= (x - xj) / (xi - xj)\n      }\n    })\n    sum += ti[1] * prod\n  })\n  return sum\n}\n\n/**\n * LagrangePoly uses the formula of Lagrange to produce an interpolating\n * polynomial.\n *\n * X values in the table do not have to be equally spaced; they do not even\n * have to be in order.  They must however, be distinct.\n *\n * The returned polynomial will be of degree n-1 where n is the number of rows\n * in the table.  It can be evaluated for x using base.horner.\n *\n * @param {Array} table - `[[x0, y0], ... [xN, yN]]`\n * @returns {Array} - polynomial array\n */\nfunction lagrangePoly (table) {\n  // Method not fully described by Meeus, but needed for (numerical solution\n  // to Example 3.g.\n  const sum = new Array(table.length).fill(0)\n  const prod = new Array(table.length).fill(0)\n  const last = table.length - 1\n  for (let i = 0; i < table.length; i++) {\n    const xi = table[i][0] || table[i].x || 0\n    const yi = table[i][1] || table[i].y || 0\n    prod[last] = 1\n    let den = 1.0\n    let n = last\n    for (let j = 0; j < table.length; j++) {\n      if (i !== j) {\n        const xj = table[j][0] || table[j].x || 0\n        prod[n - 1] = prod[n] * -xj\n        for (let k = n; k < last; k++) {\n          prod[k] -= prod[k + 1] * xj\n        }\n        n--\n        den *= (xi - xj)\n      }\n    }\n    prod.forEach((pj, j) => {\n      sum[j] += yi * pj / den\n    })\n  }\n  return sum\n}\n\n/**\n * Linear Interpolation of x\n */\nfunction linear (x, x1, xN, y) {\n  const interval = (xN - x1) / (y.length - 1)\n  if (interval === 0) {\n    throw errorNoXRange\n  }\n  let nearestX = Math.floor((x - x1) / interval)\n  if (nearestX < 0) {\n    nearestX = 0\n  } else if (nearestX > y.length - 2) {\n    nearestX = y.length - 2\n  }\n  const y2 = y.slice(nearestX, nearestX + 2)\n  const x01 = x1 + nearestX * interval\n  return y2[0] + (y[1] - y[0]) * (x - x01) / interval\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  errorNot3,\n  errorNot4,\n  errorNot5,\n  errorNoXRange,\n  errorNOutOfRange,\n  errorNoExtremum,\n  errorExtremumOutside,\n  errorZeroOutside,\n  errorNoConverge,\n  Len3,\n  len3ForInterpolateX,\n  iterate,\n  len4Half,\n  Len5,\n  lagrange,\n  lagrangePoly,\n  linear\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/interpolation.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/iterate.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/iterate.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binaryRoot: () => (/* binding */ binaryRoot),\n/* harmony export */   decimalPlaces: () => (/* binding */ decimalPlaces),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fullPrecision: () => (/* binding */ fullPrecision)\n/* harmony export */ });\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module iterate\n */\n/**\n * Iterate: Chapter 5, Iteration.\n *\n * This package is best considered illustrative.  While the functions are\n * usable, they are minimal in showing the points of the chapter text.  More\n * robust functions would handle more cases of overflow, loss of precision,\n * and divergence.\n */\n\n/**\n * decimalPlaces iterates to a fixed number of decimal places.\n *\n * Inputs are an improvement function, a starting value, the number of\n * decimal places desired in the result, and an iteration limit.\n *\n * @throws Error\n * @param {Function} better\n * @param {Number} start - (float)\n * @param {Number} places - (int)\n * @param {Number} maxIterations - (int)\n * @returns {Number}\n */\nfunction decimalPlaces (better, start, places, maxIterations) {\n  const d = Math.pow(10, -places)\n  for (let i = 0; i < maxIterations; i++) {\n    const n = better(start)\n    if (Math.abs(n - start) < d) {\n      return n\n    }\n    start = n\n  }\n  throw new Error('Maximum iterations reached')\n}\n\n/**\n * fullPrecison iterates to (nearly) the full precision of a float64.\n *\n * To allow for a little bit of floating point jitter, FullPrecision iterates\n * to 15 significant figures, which is the maximum number of full significant\n * figures representable in a float64, but still a couple of bits shy of the\n * full representable precision.\n *\n * @throws Error\n * @param {Function} better\n * @param {Number} start - (float)\n * @param {Number} maxIterations - (int)\n * @returns {Number}\n */\nfunction fullPrecision (better, start, maxIterations) {\n  for (let i = 0; i < maxIterations; i++) {\n    const n = better(start)\n    if (Math.abs((n - start) / n) < 1e-15) {\n      return n\n    }\n    start = n\n  }\n  throw new Error('Maximum iterations reached')\n}\n\n/**\n * binaryRoot finds a root between given bounds by binary search.\n *\n * Inputs are a function on x and the bounds on x.  A root must exist between\n * the given bounds, otherwise the result is not meaningful.\n *\n * @param {Function} f - root function\n * @param {Number} lower - (float)\n * @param {Number} upper - (float)\n * @returns {Number}\n */\nfunction binaryRoot (f, lower, upper) {\n  let yLower = f(lower)\n  let mid = 0\n  for (let j = 0; j < 52; j++) {\n    mid = (lower + upper) / 2\n    const yMid = f(mid)\n    if (yMid === 0) {\n      break\n    }\n    if (signbit(yLower) === signbit(yMid)) {\n      lower = mid\n      yLower = yMid\n    } else {\n      upper = mid\n    }\n  }\n  return mid\n}\n\nfunction signbit (v) {\n  return (v < 0)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  decimalPlaces,\n  fullPrecision,\n  binaryRoot\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvaXRlcmF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1Asa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL2l0ZXJhdGUuanM/MGRkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIGl0ZXJhdGVcbiAqL1xuLyoqXG4gKiBJdGVyYXRlOiBDaGFwdGVyIDUsIEl0ZXJhdGlvbi5cbiAqXG4gKiBUaGlzIHBhY2thZ2UgaXMgYmVzdCBjb25zaWRlcmVkIGlsbHVzdHJhdGl2ZS4gIFdoaWxlIHRoZSBmdW5jdGlvbnMgYXJlXG4gKiB1c2FibGUsIHRoZXkgYXJlIG1pbmltYWwgaW4gc2hvd2luZyB0aGUgcG9pbnRzIG9mIHRoZSBjaGFwdGVyIHRleHQuICBNb3JlXG4gKiByb2J1c3QgZnVuY3Rpb25zIHdvdWxkIGhhbmRsZSBtb3JlIGNhc2VzIG9mIG92ZXJmbG93LCBsb3NzIG9mIHByZWNpc2lvbixcbiAqIGFuZCBkaXZlcmdlbmNlLlxuICovXG5cbi8qKlxuICogZGVjaW1hbFBsYWNlcyBpdGVyYXRlcyB0byBhIGZpeGVkIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcy5cbiAqXG4gKiBJbnB1dHMgYXJlIGFuIGltcHJvdmVtZW50IGZ1bmN0aW9uLCBhIHN0YXJ0aW5nIHZhbHVlLCB0aGUgbnVtYmVyIG9mXG4gKiBkZWNpbWFsIHBsYWNlcyBkZXNpcmVkIGluIHRoZSByZXN1bHQsIGFuZCBhbiBpdGVyYXRpb24gbGltaXQuXG4gKlxuICogQHRocm93cyBFcnJvclxuICogQHBhcmFtIHtGdW5jdGlvbn0gYmV0dGVyXG4gKiBAcGFyYW0ge051bWJlcn0gc3RhcnQgLSAoZmxvYXQpXG4gKiBAcGFyYW0ge051bWJlcn0gcGxhY2VzIC0gKGludClcbiAqIEBwYXJhbSB7TnVtYmVyfSBtYXhJdGVyYXRpb25zIC0gKGludClcbiAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNpbWFsUGxhY2VzIChiZXR0ZXIsIHN0YXJ0LCBwbGFjZXMsIG1heEl0ZXJhdGlvbnMpIHtcbiAgY29uc3QgZCA9IE1hdGgucG93KDEwLCAtcGxhY2VzKVxuICBmb3IgKGxldCBpID0gMDsgaSA8IG1heEl0ZXJhdGlvbnM7IGkrKykge1xuICAgIGNvbnN0IG4gPSBiZXR0ZXIoc3RhcnQpXG4gICAgaWYgKE1hdGguYWJzKG4gLSBzdGFydCkgPCBkKSB7XG4gICAgICByZXR1cm4gblxuICAgIH1cbiAgICBzdGFydCA9IG5cbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ01heGltdW0gaXRlcmF0aW9ucyByZWFjaGVkJylcbn1cblxuLyoqXG4gKiBmdWxsUHJlY2lzb24gaXRlcmF0ZXMgdG8gKG5lYXJseSkgdGhlIGZ1bGwgcHJlY2lzaW9uIG9mIGEgZmxvYXQ2NC5cbiAqXG4gKiBUbyBhbGxvdyBmb3IgYSBsaXR0bGUgYml0IG9mIGZsb2F0aW5nIHBvaW50IGppdHRlciwgRnVsbFByZWNpc2lvbiBpdGVyYXRlc1xuICogdG8gMTUgc2lnbmlmaWNhbnQgZmlndXJlcywgd2hpY2ggaXMgdGhlIG1heGltdW0gbnVtYmVyIG9mIGZ1bGwgc2lnbmlmaWNhbnRcbiAqIGZpZ3VyZXMgcmVwcmVzZW50YWJsZSBpbiBhIGZsb2F0NjQsIGJ1dCBzdGlsbCBhIGNvdXBsZSBvZiBiaXRzIHNoeSBvZiB0aGVcbiAqIGZ1bGwgcmVwcmVzZW50YWJsZSBwcmVjaXNpb24uXG4gKlxuICogQHRocm93cyBFcnJvclxuICogQHBhcmFtIHtGdW5jdGlvbn0gYmV0dGVyXG4gKiBAcGFyYW0ge051bWJlcn0gc3RhcnQgLSAoZmxvYXQpXG4gKiBAcGFyYW0ge051bWJlcn0gbWF4SXRlcmF0aW9ucyAtIChpbnQpXG4gKiBAcmV0dXJucyB7TnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZnVsbFByZWNpc2lvbiAoYmV0dGVyLCBzdGFydCwgbWF4SXRlcmF0aW9ucykge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG1heEl0ZXJhdGlvbnM7IGkrKykge1xuICAgIGNvbnN0IG4gPSBiZXR0ZXIoc3RhcnQpXG4gICAgaWYgKE1hdGguYWJzKChuIC0gc3RhcnQpIC8gbikgPCAxZS0xNSkge1xuICAgICAgcmV0dXJuIG5cbiAgICB9XG4gICAgc3RhcnQgPSBuXG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdNYXhpbXVtIGl0ZXJhdGlvbnMgcmVhY2hlZCcpXG59XG5cbi8qKlxuICogYmluYXJ5Um9vdCBmaW5kcyBhIHJvb3QgYmV0d2VlbiBnaXZlbiBib3VuZHMgYnkgYmluYXJ5IHNlYXJjaC5cbiAqXG4gKiBJbnB1dHMgYXJlIGEgZnVuY3Rpb24gb24geCBhbmQgdGhlIGJvdW5kcyBvbiB4LiAgQSByb290IG11c3QgZXhpc3QgYmV0d2VlblxuICogdGhlIGdpdmVuIGJvdW5kcywgb3RoZXJ3aXNlIHRoZSByZXN1bHQgaXMgbm90IG1lYW5pbmdmdWwuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZiAtIHJvb3QgZnVuY3Rpb25cbiAqIEBwYXJhbSB7TnVtYmVyfSBsb3dlciAtIChmbG9hdClcbiAqIEBwYXJhbSB7TnVtYmVyfSB1cHBlciAtIChmbG9hdClcbiAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBiaW5hcnlSb290IChmLCBsb3dlciwgdXBwZXIpIHtcbiAgbGV0IHlMb3dlciA9IGYobG93ZXIpXG4gIGxldCBtaWQgPSAwXG4gIGZvciAobGV0IGogPSAwOyBqIDwgNTI7IGorKykge1xuICAgIG1pZCA9IChsb3dlciArIHVwcGVyKSAvIDJcbiAgICBjb25zdCB5TWlkID0gZihtaWQpXG4gICAgaWYgKHlNaWQgPT09IDApIHtcbiAgICAgIGJyZWFrXG4gICAgfVxuICAgIGlmIChzaWduYml0KHlMb3dlcikgPT09IHNpZ25iaXQoeU1pZCkpIHtcbiAgICAgIGxvd2VyID0gbWlkXG4gICAgICB5TG93ZXIgPSB5TWlkXG4gICAgfSBlbHNlIHtcbiAgICAgIHVwcGVyID0gbWlkXG4gICAgfVxuICB9XG4gIHJldHVybiBtaWRcbn1cblxuZnVuY3Rpb24gc2lnbmJpdCAodikge1xuICByZXR1cm4gKHYgPCAwKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRlY2ltYWxQbGFjZXMsXG4gIGZ1bGxQcmVjaXNpb24sXG4gIGJpbmFyeVJvb3Rcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/iterate.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/jm.js":
/*!*******************************************!*\
  !*** ./node_modules/astronomia/src/jm.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JewishCalendar: () => (/* binding */ JewishCalendar),\n/* harmony export */   JulianToMoslem: () => (/* binding */ JulianToMoslem),\n/* harmony export */   MoslemLeapYear: () => (/* binding */ MoslemLeapYear),\n/* harmony export */   MoslemToJD: () => (/* binding */ MoslemToJD),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   moslemMonth: () => (/* binding */ moslemMonth)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _julian_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./julian.js */ \"./node_modules/astronomia/src/julian.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module jm\n */\n/**\n * JM: Chapter 9, Jewish and Moslem Calendars.\n *\n * The Jewish calendar routines are implemented as a monolithic function,\n * because computations of the various results build off of common\n * intermediate results.\n *\n * The Moslem calendar routines break down nicely into some separate functions.\n *\n * Included in these are two functions that convert between Gregorian and\n * Julian calendar days without going through Julian day (JD).  As such,\n * I suppose, these or similar routines are not in chapter 7, Julian Day.\n * Package base might also be a suitable place for these, but I'm not sure\n * they are used anywhere else in the book.  Anyway, they have the quirk\n * that they are not direct inverses:  JulianToGregorian returns the day number\n * of the day of the Gregorian year, but GregorianToJulian wants the Gregorian\n * month and day of month as input.\n */\n\n\n\n\nconst int = Math.trunc\n\n/**\n * JewishCalendar returns interesting dates and facts about a given year.\n *\n * Input is a Julian or Gregorian year.\n *\n * Outputs:\n *  A:      (int) Year number in the Jewish Calendar\n *  mP:     (int) Month number of Pesach.\n *  dP:     (int) Day number of Pesach.\n *  mNY:    (int) Month number of the Jewish new year.\n *  dNY:    (int) Day number of the Jewish new year.\n *  months: (int) Number of months in this year.\n *  days:   (int) Number of days in this year.\n */\nfunction JewishCalendar (y) {\n  const A = y + 3760\n  const D = bigD(y)\n  let mP = 3\n  let dP = D\n  if (dP > 31) {\n    mP++\n    dP -= 31\n  }\n  // A simplification of Meeus's rule to add 163 days.  Months of Pesach\n  // are either March or April with D based off of March.  Months of New\n  // year are either September or August so D+163-(days from March to\n  // September == 184) = D-21 must be based off of September.\n  let mNY = 9\n  let dNY = D - 21\n  if (dNY > 30) {\n    mNY++\n    dNY -= 30\n  }\n  let months = 12\n  switch (A % 19) {\n    case 0:\n    case 3:\n    case 6:\n    case 8:\n    case 11:\n    case 14:\n    case 17:\n      months++\n      break\n  }\n  // Similarly, A simplification of Meeus's rule to take the difference\n  // in calendar days from NY of one year to NY of the next.  NY is based\n  // on D, so difference in D is difference in day numbers of year.  Result\n  // is sum of this number and the number of days in the Western calandar\n  // year.\n  const y1 = y + 1\n  let lf = _julian_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LeapYearGregorian\n  if (y1 < 1583) {\n    lf = _julian_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LeapYearJulian\n  }\n  let days = 365\n  if (lf(y1)) {\n    days++\n  }\n  days += bigD(y1) - D\n  return [A, mP, dP, mNY, dNY, months, days]\n}\n\nconst bigD = function (y) { // (y int)  int\n  const C = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(y, 100)\n  // const S int\n  let S = 0\n  if (y >= 1583) {\n    S = int(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(3 * C - 5, 4))\n  }\n  const a = (12 * y + 12) % 19\n  const b = y % 4\n  const Q = -1.904412361576 + 1.554241796621 * (a) + 0.25 * (b) -\n    0.003177794022 * (y) + (S)\n  const fq = Math.floor(Q)\n  const iq = int(fq)\n  const j = (iq + 3 * y + 5 * b + 2 - S) % 7\n  const r = Q - fq\n  // const D int\n  let D\n  if (j === 2 || j === 4 || j === 6) {\n    D = iq + 23\n  } else if (j === 1 && a > 6 && r >= 0.63287037) {\n    D = iq + 24\n  } else if (j === 0 && a > 11 && r >= 0.897723765) {\n    D = iq + 23\n  } else {\n    D = iq + 22\n  }\n  return int(D)\n}\n\n/**\n * MoslemToJD converts a Moslem calendar date to a Julian Day.\n * @param {Number} y - year in moslem calendar\n * @param {Number} m - month\n * @param {Number} d - day\n * @returns {Number} jd - Julian day\n */\nfunction MoslemToJD (y, m, d) { // (y, m, d int)  (jY, jDN int)\n  const N = d + _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(295001 * (m - 1) + 9900, 10000)\n  const Q = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(y, 30)\n  const R = y % 30\n  const A = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(11 * R + 3, 30)\n  const W = 404 * Q + 354 * R + 208 + A\n  const Q1 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(W, 1461)\n  const Q2 = W % 1461\n  const G = 621 + 28 * Q + 4 * Q1\n  const K = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(Q2 * 10000, 3652422)\n  const E = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(3652422 * K, 10000)\n  let J = Q2 - E + N - 1\n  let X = G + K\n  if (J > 366 && X % 4 === 0) {\n    J -= 366\n    X++\n  } else if (J > 365 && X % 4 > 0) {\n    J -= 365\n    X++\n  }\n  const jd = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(36525 * (X - 1), 100) + 1721423 + J\n  return jd\n}\n\n/**\n * MoslemLeapYear returns true if year y of the Moslem calendar is a leap year.\n * @param {Number} year\n * @returns {Boolean} true if leap year\n */\nfunction MoslemLeapYear (year) { // (y int)  bool\n  const R = year % 30\n  return (11 * R + 3) % 30 > 18\n}\n\n/**\n * @typedef {object} DateObj\n * @property {number} year\n * @property {number} month\n * @property {number} day\n */\n\n/**\n * JulianToMoslem takes a year, month, and day of the Julian calendar and returns the equivalent year, month, and day of the Moslem calendar.\n *\n * @param {Number} y - julian year\n * @param {Number} m - julian month\n * @param {Number} d - julian day\n * @returns {DateObj}\n */\nfunction JulianToMoslem (y, m, d) { // (y, m, d int)  (my, mm, md int)\n  let W = 2\n  if (y % 4 === 0) {\n    W = 1\n  }\n  const N = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(275 * m, 9) - W * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(m + 9, 12) + d - 30\n  const A = int(y - 623)\n  const B = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(A, 4)\n  const C2 = (function (A) {\n    const C = A % 4\n    const C1 = 365.25001 * (C)\n    const C2 = Math.floor(C1)\n    if (C1 - C2 > 0.5) {\n      return int(C2) + 1\n    }\n    return int(C2)\n  })(A)\n  const Dp = 1461 * B + 170 + C2\n  const Q = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(Dp, 10631)\n  const R = Dp % 10631\n  const J = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(R, 354)\n  const K = R % 354\n  const O = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(11 * J + 14, 30)\n  let my = 30 * Q + J + 1\n  let JJ = K - O + N - 1\n  let days = 354\n  if (MoslemLeapYear(y)) {\n    days++\n  }\n  if (JJ > days) {\n    JJ -= days\n    my++\n  }\n  let mm\n  let md\n  if (JJ === 355) {\n    mm = 12\n    md = 30\n  } else {\n    const S = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv((JJ - 1) * 10, 295)\n    mm = 1 + S\n    md = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(10 * JJ - 295 * S, 10)\n  }\n  return { year: my, month: mm, day: md }\n}\n\n/**\n * An MMonth specifies a month of the Moslum Calendar (Muharram = 1, ...).\n *\n * Upgraded to Unicode from the spellings given by Meeus.\n * Source: http://en.wikipedia.org/wiki/Islamic_calendar.\n */\nconst mmonths = [\n  '',\n  'Muḥarram',\n  'Ṣafar',\n  'Rabīʿ I',\n  'Rabīʿ II',\n  'Jumādā I',\n  'Jumādā II',\n  'Rajab',\n  'Shaʿbān',\n  'Ramaḍān',\n  'Shawwāl',\n  'Dhū al-Qaʿda',\n  'Dhū al-Ḥijja'\n]\n\n/**\n * String returns the Romanization of the month (\"Muḥarram\", \"Ṣafar\", ...).\n */\nfunction moslemMonth (m) {\n  return mmonths[m]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  JewishCalendar,\n  MoslemToJD,\n  MoslemLeapYear,\n  JulianToMoslem,\n  moslemMonth\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/jm.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/julian.js":
/*!***********************************************!*\
  !*** ./node_modules/astronomia/src/julian.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Calendar: () => (/* binding */ Calendar),\n/* harmony export */   CalendarGregorian: () => (/* binding */ CalendarGregorian),\n/* harmony export */   CalendarGregorianToJD: () => (/* binding */ CalendarGregorianToJD),\n/* harmony export */   CalendarJulian: () => (/* binding */ CalendarJulian),\n/* harmony export */   CalendarJulianToJD: () => (/* binding */ CalendarJulianToJD),\n/* harmony export */   CalendarToJD: () => (/* binding */ CalendarToJD),\n/* harmony export */   DateToJD: () => (/* binding */ DateToJD),\n/* harmony export */   DateToJDE: () => (/* binding */ DateToJDE),\n/* harmony export */   DayOfWeek: () => (/* binding */ DayOfWeek),\n/* harmony export */   DayOfYear: () => (/* binding */ DayOfYear),\n/* harmony export */   DayOfYearGregorian: () => (/* binding */ DayOfYearGregorian),\n/* harmony export */   DayOfYearJulian: () => (/* binding */ DayOfYearJulian),\n/* harmony export */   DayOfYearToCalendar: () => (/* binding */ DayOfYearToCalendar),\n/* harmony export */   DayOfYearToCalendarGregorian: () => (/* binding */ DayOfYearToCalendarGregorian),\n/* harmony export */   DayOfYearToCalendarJulian: () => (/* binding */ DayOfYearToCalendarJulian),\n/* harmony export */   GREGORIAN0JD: () => (/* binding */ GREGORIAN0JD),\n/* harmony export */   JDEToDate: () => (/* binding */ JDEToDate),\n/* harmony export */   JDToCalendar: () => (/* binding */ JDToCalendar),\n/* harmony export */   JDToCalendarGregorian: () => (/* binding */ JDToCalendarGregorian),\n/* harmony export */   JDToCalendarJulian: () => (/* binding */ JDToCalendarJulian),\n/* harmony export */   JDToDate: () => (/* binding */ JDToDate),\n/* harmony export */   JDToMJD: () => (/* binding */ JDToMJD),\n/* harmony export */   LeapYearGregorian: () => (/* binding */ LeapYearGregorian),\n/* harmony export */   LeapYearJulian: () => (/* binding */ LeapYearJulian),\n/* harmony export */   MJDToJD: () => (/* binding */ MJDToJD),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isCalendarGregorian: () => (/* binding */ isCalendarGregorian),\n/* harmony export */   isJDCalendarGregorian: () => (/* binding */ isJDCalendarGregorian)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/* harmony import */ var _deltat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./deltat.js */ \"./node_modules/astronomia/src/deltat.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module julian\n */\n/**\n * Julian: Chapter 7, Julian day.\n */\n\n\n\n\n\nconst int = Math.trunc\n\n/** 1582-10-05 Julian Date is 1st Gregorian Date (1582-10-15) */\nconst GREGORIAN0JD = 2299160.5\n\nconst DAYS_OF_YEAR = [0, 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]\nconst SECS_OF_DAY = 86400 // 24 * 60 * 60\n\n/**\n * Base class for CalendarJulian and CalendarGregorian\n * Respects the start of the Gregorian Calendar at `GREGORIAN0JD`\n */\nclass Calendar {\n  /**\n   * @param {number|Date} [year] - If `Date` is given then year, month, day is taken from that. Shortcut to `new Calendar().fromDate(date)`\n   * @param {number} [month]\n   * @param {number} [day]\n   */\n  constructor (year, month = 1, day = 1) {\n    if (year instanceof Date) {\n      this.fromDate(year)\n    } else {\n      this.year = year\n      this.month = month\n      this.day = day\n    }\n  }\n\n  getDate () {\n    return {\n      year: this.year,\n      month: this.month,\n      day: Math.floor(this.day)\n    }\n  }\n\n  getTime () {\n    const t = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Time(this.day * SECS_OF_DAY)\n    const [neg, h, m, _s] = t.toHMS() // eslint-disable-line no-unused-vars\n    let [s, ms] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(_s)\n    ms = Math.trunc(ms * 1000)\n    return {\n      hour: h % 24,\n      minute: m,\n      second: s,\n      millisecond: ms\n    }\n  }\n\n  toISOString () {\n    const { year, month, day } = this.getDate()\n    const { hour, minute, second, millisecond } = this.getTime()\n    return `${pad(year, 4)}-${pad(month)}-${pad(day)}T` +\n      `${pad(hour)}:${pad(minute)}:${pad(second)}.${pad(millisecond, 3)}Z`\n  }\n\n  isGregorian () {\n    return isCalendarGregorian(this.year, this.month, this.day)\n  }\n\n  /**\n   * Note: Take care for dates < GREGORIAN0JD as `date` is always within the\n   * proleptic Gregorian Calender\n   * @param {Date} date - proleptic Gregorian date\n   */\n  fromDate (date) {\n    this.year = date.getUTCFullYear()\n    this.month = date.getUTCMonth() + 1\n    const day = date.getUTCDate()\n    const hour = date.getUTCHours()\n    const minute = date.getUTCMinutes()\n    const second = date.getUTCSeconds()\n    const ms = date.getMilliseconds()\n    this.day = day + (hour + ((minute + ((second + ms / 1000) / 60)) / 60)) / 24\n    return this\n  }\n\n  /**\n   * Note: Take care for dates < GREGORIAN0JD as `date` is always within the\n   * proleptic Gregorian Calender\n   * @returns {Date} proleptic Gregorian date\n   */\n  toDate () {\n    const [day, fhour] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(this.day)\n    const [hour, fminute] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(fhour * 24)\n    const [minute, fsecond] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(fminute * 60)\n    const [second, fms] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(fsecond * 60)\n    const date = new Date(Date.UTC(\n      this.year, this.month - 1, day, hour, minute, second, Math.round(fms * 1000)\n    ))\n    date.setUTCFullYear(this.year)\n    return date\n  }\n\n  /**\n   * converts a calendar date to decimal year\n   * @returns {number} decimal year\n   */\n  toYear () {\n    const [d, f] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(this.day) // eslint-disable-line no-unused-vars\n    const n = this.dayOfYear() - 1 + f\n    const days = this.isLeapYear() ? 366 : 365\n    const decYear = this.year + (n / days)\n    return decYear\n  }\n\n  /**\n   * converts a decimal year to a calendar date\n   * @param {number} year - decimal year\n   */\n  fromYear (year) {\n    const [y, f] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(year)\n    this.year = y\n    const days = this.isLeapYear() ? 366 : 365\n    const dayOfYear = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].round(f * days, 5)\n    let m = 12\n    while (m > 0 && DAYS_OF_YEAR[m] > dayOfYear) {\n      m--\n    }\n    this.month = m\n    this.day = 1 + dayOfYear - DAYS_OF_YEAR[this.month]\n    return this\n  }\n\n  isLeapYear () {\n    if (this.isGregorian()) {\n      return LeapYearGregorian(this.year)\n    } else {\n      return LeapYearJulian(this.year)\n    }\n  }\n\n  toJD () {\n    return CalendarToJD(this.year, this.month, this.day, !this.isGregorian())\n  }\n\n  fromJD (jd) {\n    const isJulian = !isJDCalendarGregorian(jd)\n    const { year, month, day } = JDToCalendar(jd, isJulian)\n    this.year = year\n    this.month = month\n    this.day = day\n    return this\n  }\n\n  fromJDE (jde) {\n    this.fromJD(jde)\n    const dT = _deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deltaT(this.toYear()) // in seconds\n    this.day -= dT / 86400\n    return this\n  }\n\n  toJDE () {\n    const dT = _deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deltaT(this.toYear()) // in seconds\n    this.day += dT / 86400\n    return this.toJD()\n  }\n\n  /**\n   * set date to midnight UTC\n   */\n  midnight () {\n    this.day = Math.floor(this.day)\n    return this\n  }\n\n  /**\n   * set date to noon UTC\n   */\n  noon () {\n    this.day = Math.floor(this.day) + 0.5\n    return this\n  }\n\n  /**\n   * @param {Boolean} td - if `true` calendar instance is in TD; date gets converted to UT\n   *   true  - `UT = TD - ΔT`\n   *   false - `TD = UT + ΔT`\n   */\n  deltaT (td) {\n    const dT = _deltat_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deltaT(this.toYear()) // in seconds\n    if (td) {\n      this.day -= dT / 86400\n    } else {\n      this.day += dT / 86400\n    }\n    return this\n  }\n\n  dayOfWeek () {\n    return DayOfWeek(this.toJD())\n  }\n\n  dayOfYear () {\n    if (this.isGregorian()) {\n      return DayOfYearGregorian(this.year, this.month, this.day)\n    } else {\n      return DayOfYearJulian(this.year, this.month, this.day)\n    }\n  }\n}\n\nclass CalendarJulian extends Calendar {\n  toJD () {\n    return CalendarJulianToJD(this.year, this.month, this.day)\n  }\n\n  fromJD (jd) {\n    const { year, month, day } = JDToCalendarJulian(jd)\n    this.year = year\n    this.month = month\n    this.day = day\n    return this\n  }\n\n  isLeapYear () {\n    return LeapYearJulian(this.year)\n  }\n\n  dayOfYear () {\n    return DayOfYearJulian(this.year, this.month, this.day)\n  }\n\n  /**\n   * toGregorian converts a Julian calendar date to a year, month, and day\n   * in the Gregorian calendar.\n   * @returns {CalendarGregorian}\n   */\n  toGregorian () {\n    const jd = this.toJD()\n    return new CalendarGregorian().fromJD(jd)\n  }\n}\n\nclass CalendarGregorian extends Calendar {\n  toJD () {\n    return CalendarGregorianToJD(this.year, this.month, this.day)\n  }\n\n  fromJD (jd) {\n    const { year, month, day } = JDToCalendarGregorian(jd)\n    this.year = year\n    this.month = month\n    this.day = day\n    return this\n  }\n\n  isLeapYear () {\n    return LeapYearGregorian(this.year)\n  }\n\n  dayOfYear () {\n    return DayOfYearGregorian(this.year, this.month, this.day)\n  }\n\n  /*\n  * toJulian converts a Gregorian calendar date to a year, month, and day\n  * in the Julian calendar.\n  * @returns {CalendarJulian}\n  */\n  toJulian () {\n    const jd = this.toJD()\n    return new CalendarJulian().fromJD(jd)\n  }\n}\n\n// -----------------------------------------------------------------------------\n\n/**\n * base conversion from calendar date to julian day\n */\nfunction CalendarToJD (y, m, d, isJulian) {\n  let b = 0\n  if (m < 3) {\n    y--\n    m += 12\n  }\n  if (!isJulian) {\n    const a = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(y, 100)\n    b = 2 - a + _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(a, 4)\n  }\n  // (7.1) p. 61\n  const jd = (_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(36525 * (int(y + 4716)), 100)) +\n    (_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(306 * (m + 1), 10) + b) + d - 1524.5\n  return jd\n}\n\n/**\n * CalendarGregorianToJD converts a Gregorian year, month, and day of month\n * to Julian day.\n *\n * Negative years are valid, back to JD 0.  The result is not valid for\n * dates before JD 0.\n * @param {number} y - year (int)\n * @param {number} m - month (int)\n * @param {number} d - day (float)\n * @returns {number} jd - Julian day (float)\n */\nfunction CalendarGregorianToJD (y, m, d) {\n  return CalendarToJD(y, m, d, false)\n}\n\n/**\n * CalendarJulianToJD converts a Julian year, month, and day of month to Julian day.\n *\n * Negative years are valid, back to JD 0.  The result is not valid for\n * dates before JD 0.\n * @param {number} y - year (int)\n * @param {number} m - month (int)\n * @param {number} d - day (float)\n * @returns {number} jd - Julian day (float)\n */\nfunction CalendarJulianToJD (y, m, d) {\n  return CalendarToJD(y, m, d, true)\n}\n\n/**\n * LeapYearJulian returns true if year y in the Julian calendar is a leap year.\n * @param {number} y - year (int)\n * @returns {boolean} true if leap year in Julian Calendar\n */\nfunction LeapYearJulian (y) {\n  return y % 4 === 0\n}\n\n/**\n * LeapYearGregorian returns true if year y in the Gregorian calendar is a leap year.\n * @param {number} y - year (int)\n * @returns {boolean} true if leap year in Gregorian Calendar\n */\nfunction LeapYearGregorian (y) {\n  return (y % 4 === 0 && y % 100 !== 0) || y % 400 === 0\n}\n\n/**\n * JDToCalendar returns the calendar date for the given jd.\n *\n * Note that this function returns a date in either the Julian or Gregorian\n * Calendar, as appropriate.\n * @param {number} jd - Julian day (float)\n * @param {boolean} isJulian - set true for Julian Calendar, otherwise Gregorian is used\n * @returns {object} `{ (int) year, (int) month, (float) day }`\n */\nfunction JDToCalendar (jd, isJulian) {\n  const [z, f] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(jd + 0.5)\n  let a = z\n  if (!isJulian) {\n    const α = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(z * 100 - 186721625, 3652425)\n    a = z + 1 + α - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(α, 4)\n  }\n  const b = a + 1524\n  const c = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(b * 100 - 12210, 36525)\n  const d = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(36525 * c, 100)\n  const e = int(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv((b - d) * 1e4, 306001))\n  // compute return values\n  let year\n  let month\n  const day = (int(b - d) - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].floorDiv(306001 * e, 1e4)) + f\n  if (e === 14 || e === 15) {\n    month = e - 13\n  } else {\n    month = e - 1\n  }\n  if (month < 3) {\n    year = int(c) - 4715\n  } else {\n    year = int(c) - 4716\n  }\n  return { year, month, day }\n}\n\n/**\n * JDToCalendarGregorian returns the calendar date for the given jd in the Gregorian Calendar.\n *\n * @param {number} jd - Julian day (float)\n * @returns {object} `{ (int) year, (int) month, (float) day }`\n */\nfunction JDToCalendarGregorian (jd) {\n  return JDToCalendar(jd, false)\n}\n\n/**\n * JDToCalendarJulian returns the calendar date for the given jd in the Julian Calendar.\n *\n * @param {number} jd - Julian day (float)\n * @returns {object} { (int) year, (int) month, (float) day }\n */\nfunction JDToCalendarJulian (jd) {\n  return JDToCalendar(jd, true)\n}\n\n/**\n * isJDCalendarGregorian tests if Julian day `jd` falls into the Gregorian calendar\n * @param {number} jd - Julian day (float)\n * @returns {boolean} true for Gregorian, false for Julian calendar\n */\nfunction isJDCalendarGregorian (jd) {\n  return (jd >= GREGORIAN0JD)\n}\n\n/**\n * isCalendarGregorian tests if date falls into the Gregorian calendar\n * @param {number} year - julian/gregorian year\n * @param {number} [month] - month of julian/gregorian year\n * @param {number} [day] - day of julian/gregorian year\n * @returns {boolean} true for Gregorian, false for Julian calendar\n */\nfunction isCalendarGregorian (year, month = 1, day = 1) {\n  return (year > 1582 ||\n    (year === 1582 && month > 10) ||\n    (year === 1582 && month === 10 && day >= 15)\n  )\n}\n\n/**\n * JDToDate converts a Julian day `jd` to a Date Object (Gregorian Calendar)\n *\n * Note: Javascript uses the the ISO-8601 calendar, which is a proleptic Gregorian\n * calendar, i.e. it acts as if this calendar was always in effect, even before\n * its year of introduction in 1582. Therefore dates between 1582-10-05 and\n * 1582-10-14 exists.\n *\n * @param {number} jd - Julian day (float)\n * @returns {Date}\n */\nfunction JDToDate (jd) {\n  return new CalendarGregorian().fromJD(jd).toDate()\n}\n\n/**\n * DateToJD converts a proleptic Gregorian Date into a Julian day `jd`\n * @param {Date} date\n * @returns {number} jd - Julian day (float)\n */\nfunction DateToJD (date) {\n  return new CalendarGregorian().fromDate(date).toJD()\n}\n\n/**\n * JDEToDate converts a Julian ephemeris day `jde` to a Date Object (Gregorian Calendar)\n * To obtain \"Universal Time\" (UT) from \"Dynamical Time\" (TD) the correction ΔT (in seconds) gets applied\n * ```\n * UT = TD - ΔT\n * ```\n * If your use case does not require such accuracy converting `jde` using `JDToDate` is fine.\n *\n * Note: Javascript uses the the ISO-8601 calendar, which is a proleptic Gregorian\n * calendar, i.e. it acts as if this calendar was always in effect, even before\n * its year of introduction in 1582. Therefore dates between 1582-10-05 and\n * 1582-10-14 exists.\n *\n * @param {number} jde - Julian ephemeris day\n * @returns {Date} Javascript Date Object\n */\nfunction JDEToDate (jde) {\n  return new CalendarGregorian().fromJDE(jde).toDate()\n}\n\n/**\n * DateToJDE converts a Date Object (Gregorian Calendar) to a Julian ephemeris day `jde`\n * To obtain \"Dynamical Time\" (TD) from \"Universal Time\" (UT) the correction ΔT (in seconds) gets applied\n * ```\n * TD = UT + ΔT\n * ```\n * If your use case does not require such accuracy converting `Date` using `DateToJD` is fine.\n *\n * @param {Date} date - Javascript Date Object\n * @returns {number} jde - Julian ephemeris day (float)\n */\nfunction DateToJDE (date) {\n  return new CalendarGregorian().fromDate(date).toJDE()\n}\n\n/**\n * converts Modified Julian Day `mjd` to Julian Day `jd`\n * @param {Number} mjd - Modified Julian Day\n * @returns {Number} jd - Julian Day\n */\nfunction MJDToJD (mjd) {\n  return mjd + _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JMod\n}\n\n/**\n * converts Julian Day `jd` to Modified Julian Day `mjd`\n * The MJD sometimes appear when mentioning orbital elements of artificial satellites.\n * Contrary to JD the MJD begins at Greenwich mean midnight.\n * @param {Number} jd - Julian Day\n * @returns {Number} mjd - Modified Julian Day MJD\n */\nfunction JDToMJD (jd) {\n  return jd - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JMod\n}\n\n/**\n * DayOfWeek determines the day of the week for a given JD.\n *\n * The value returned is an integer in the range 0 to 6, where 0 represents\n * Sunday.  This is the same convention followed in the time package of the\n * Javascript standard library.\n * @param {number} jd - Julian day (float)\n * @returns {number} (int) 0 == sunday; ...; 6 == saturday\n */\nfunction DayOfWeek (jd) {\n  return int(jd + 1.5) % 7\n}\n\n/**\n * DayOfYearGregorian computes the day number within the year of the Gregorian\n * calendar.\n * @param {number} y - year (int)\n * @param {number} m - month (int)\n * @param {number} d - day (float)\n * @returns {number} day of year\n */\nfunction DayOfYearGregorian (y, m, d) {\n  return DayOfYear(y, m, int(d), LeapYearGregorian(y))\n}\n\n/**\n * DayOfYearJulian computes the day number within the year of the Julian\n * calendar.\n * @param {number} y - year (int)\n * @param {number} m - month (int)\n * @param {number} d - day (float)\n * @returns {number} day of year\n */\nfunction DayOfYearJulian (y, m, d) {\n  return DayOfYear(y, m, int(d), LeapYearJulian(y))\n}\n\n/**\n * DayOfYear computes the day number within the year.\n *\n * This form of the function is not specific to the Julian or Gregorian\n * calendar, but you must tell it whether the year is a leap year.\n * @param {number} y - year (int)\n * @param {number} m - month (int)\n * @param {number} d - day (float)\n * @param {boolean} leap - set `true` if `y` is leap year\n * @returns {number} day of year\n */\nfunction DayOfYear (y, m, d, leap) {\n  let k = 0\n  if (leap && m > 1) {\n    k = 1\n  }\n  return k + DAYS_OF_YEAR[m] + int(d)\n}\n\n/**\n * DayOfYearToCalendar returns the calendar month and day for a given\n * day of year and leap year status.\n * @param {number} n - day of year (int)\n * @param {boolean} leap - set `true` if `y` is leap year\n * @returns {object} `{ (int) month, (float) day }`\n */\nfunction DayOfYearToCalendar (n, leap) {\n  let month\n  let k = 0\n  if (leap) {\n    k = 1\n  }\n  for (month = 1; month <= 12; month++) {\n    if (k + DAYS_OF_YEAR[month] > n) {\n      month = month - 1\n      break\n    }\n  }\n  const day = n - k - DAYS_OF_YEAR[month]\n  return { month, day }\n}\n\n/**\n * DayOfYearToCalendarGregorian returns the calendar month and day for a given\n * day of year.\n * @param {number} year\n * @param {number} n - day of year (int)\n * @returns {CalendarGregorian} { (int) year, (int) month, (float) day }\n */\nfunction DayOfYearToCalendarGregorian (year, n) {\n  const { month, day } = DayOfYearToCalendar(n, LeapYearGregorian(year))\n  return new CalendarGregorian(year, month, day)\n}\n\n/**\n * DayOfYearToCalendarJulian returns the calendar month and day for a given\n * day of year.\n * @param {number} year\n * @param {number} n - day of year (int)\n * @returns {CalendarJulian} { (int) year, (int) month, (float) day }\n */\nfunction DayOfYearToCalendarJulian (year, n) {\n  const { month, day } = DayOfYearToCalendar(n, LeapYearJulian(year))\n  return new CalendarJulian(year, month, day)\n}\n\nfunction pad (num, len) {\n  len = len || 2\n  const neg = num < 0 ? '-' : ''\n  num = Math.abs(num)\n  const padded = ('0000' + num)\n  return neg + padded.substr(padded.length - len, len)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  GREGORIAN0JD,\n  Calendar,\n  CalendarJulian,\n  CalendarGregorian,\n  CalendarToJD,\n  CalendarGregorianToJD,\n  CalendarJulianToJD,\n  LeapYearJulian,\n  LeapYearGregorian,\n  JDToCalendar,\n  JDToCalendarGregorian,\n  JDToCalendarJulian,\n  isJDCalendarGregorian,\n  isCalendarGregorian,\n  JDToDate,\n  DateToJD,\n  JDEToDate,\n  DateToJDE,\n  MJDToJD,\n  JDToMJD,\n  DayOfWeek,\n  DayOfYearGregorian,\n  DayOfYearJulian,\n  DayOfYear,\n  DayOfYearToCalendar,\n  DayOfYearToCalendarGregorian,\n  DayOfYearToCalendarJulian\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/julian.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/jupiter.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/jupiter.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   physical: () => (/* binding */ physical),\n/* harmony export */   physical2: () => (/* binding */ physical2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module jupiter\n */\n/**\n * Jupiter: Chapter 42, Ephemeris for Physical Observations of Jupiter.\n */\n\n\n\n // eslint-disable-line no-unused-vars\n\n/**\n * Physical computes quantities for physical observations of Jupiter.\n *\n * All angular results in radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @param {Planet} earth\n * @param {Planet} jupiter\n * @return {Array}\n *    {number} DS - Planetocentric declination of the Sun.\n *    {number} DE - Planetocentric declination of the Earth.\n *    {number} ω1 - Longitude of the System I central meridian of the illuminated disk,\n *                  as seen from Earth.\n *    {number} ω2 - Longitude of the System II central meridian of the illuminated disk,\n *                  as seen from Earth.\n *    {number} P -  Geocentric position angle of Jupiter's northern rotation pole.\n */\nfunction physical (jde, earth, jupiter) { // (jde float64, earth, jupiter *pp.V87Planet)  (DS, DE, ω1, ω2, P float64)\n  // Step 1.0\n  const d = jde - 2433282.5\n  const T1 = d / _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianCentury\n  const p = Math.PI / 180\n  const α0 = 268 * p + 0.1061 * p * T1\n  const δ0 = 64.5 * p - 0.0164 * p * T1\n  // Step 2.0\n  const W1 = 17.71 * p + 877.90003539 * p * d\n  const W2 = 16.838 * p + 870.27003539 * p * d\n  // Step 3.0\n  const pos = earth.position(jde)\n  let [l0, b0, R] = [pos.lon, pos.lat, pos.range]\n  const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].toFK5(l0, b0, jde)\n  l0 = fk5.lon\n  b0 = fk5.lat\n  // Steps 4-7.\n  const [sl0, cl0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l0)\n  const sb0 = Math.sin(b0)\n  let Δ = 4.0 // surely better than 0.0\n\n  let l = 0\n  let b = 0\n  let r = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\n  const f = function () {\n    const τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n    const pos = jupiter.position(jde - τ)\n    l = pos.lon\n    b = pos.lat\n    r = pos.range\n    const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].toFK5(l, b, jde)\n    l = fk5.lon\n    b = fk5.lat\n    const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(b)\n    const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l)\n    // (42.2) p. 289\n    x = r * cb * cl - R * cl0\n    y = r * cb * sl - R * sl0\n    z = r * sb - R * sb0\n    // (42.3) p. 289\n    Δ = Math.sqrt(x * x + y * y + z * z)\n  }\n  f()\n  f()\n\n  // Step 8.0\n  const ε0 = _nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].meanObliquity(jde)\n  // Step 9.0\n  const [sε0, cε0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε0)\n  const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l)\n  const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(b)\n  const αs = Math.atan2(cε0 * sl - sε0 * sb / cb, cl)\n  const δs = Math.asin(cε0 * sb + sε0 * cb * sl)\n  // Step 10.0\n  const [sδs, cδs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δs)\n  const [sδ0, cδ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ0)\n  const DS = Math.asin(-sδ0 * sδs - cδ0 * cδs * Math.cos(α0 - αs))\n  // Step 11.0\n  const u = y * cε0 - z * sε0\n  const v = y * sε0 + z * cε0\n  let α = Math.atan2(u, x)\n  let δ = Math.atan(v / Math.hypot(x, u))\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const [sα0α, cα0α] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α0 - α)\n  const ζ = Math.atan2(sδ0 * cδ * cα0α - sδ * cδ0, cδ * sα0α)\n  // Step 12.0\n  const DE = Math.asin(-sδ0 * sδ - cδ0 * cδ * Math.cos(α0 - α))\n  // Step 13.0\n  let ω1 = W1 - ζ - 5.07033 * p * Δ\n  let ω2 = W2 - ζ - 5.02626 * p * Δ\n  // Step 14.0\n  let C = (2 * r * Δ + R * R - r * r - Δ * Δ) / (4 * r * Δ)\n  if (Math.sin(l - l0) < 0) {\n    C = -C\n  }\n  ω1 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(ω1 + C, 2 * Math.PI)\n  ω2 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(ω2 + C, 2 * Math.PI)\n  // Step 15.0\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].nutation(jde)\n  const ε = ε0 + Δε\n  // Step 16.0\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  const [sα, cα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α)\n  α += 0.005693 * p * (cα * cl0 * cε + sα * sl0) / cδ\n  δ += 0.005693 * p * (cl0 * cε * (sε / cε * cδ - sα * sδ) + cα * sδ * sl0)\n  // Step 17.0\n  const tδ = sδ / cδ\n  const Δα = (cε + sε * sα * tδ) * Δψ - cα * tδ * Δε\n  const Δδ = sε * cα * Δψ + sα * Δε\n  const αʹ = α + Δα\n  const δʹ = δ + Δδ\n  const [sα0, cα0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α0)\n  const tδ0 = sδ0 / cδ0\n  const Δα0 = (cε + sε * sα0 * tδ0) * Δψ - cα0 * tδ0 * Δε\n  const Δδ0 = sε * cα0 * Δψ + sα0 * Δε\n  const α0ʹ = α0 + Δα0\n  const δ0ʹ = δ0 + Δδ0\n  // Step 18.0\n  const [sδʹ, cδʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δʹ)\n  const [sδ0ʹ, cδ0ʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ0ʹ)\n  const [sα0ʹαʹ, cα0ʹαʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α0ʹ - αʹ)\n  // (42.4) p. 290\n  let P = Math.atan2(cδ0ʹ * sα0ʹαʹ, sδ0ʹ * cδʹ - cδ0ʹ * sδʹ * cα0ʹαʹ)\n  if (P < 0) {\n    P += 2 * Math.PI\n  }\n  return [DS, DE, ω1, ω2, P]\n}\n\n/**\n * Physical2 computes quantities for physical observations of Jupiter.\n *\n * Results are less accurate than with Physical().\n * All angular results in radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @return {Array}\n *    {number} DS - Planetocentric declination of the Sun.\n *    {number} DE - Planetocentric declination of the Earth.\n *    {number} ω1 - Longitude of the System I central meridian of the illuminated disk,\n *                  as seen from Earth.\n *    {number} ω2 - Longitude of the System II central meridian of the illuminated disk,\n *                  as seen from Earth.\n */\nfunction physical2 (jde) { // (jde float64)  (DS, DE, ω1, ω2 float64)\n  const d = jde - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000\n  const p = Math.PI / 180\n  const V = 172.74 * p + 0.00111588 * p * d\n  const M = 357.529 * p + 0.9856003 * p * d\n  const sV = Math.sin(V)\n  const N = 20.02 * p + 0.0830853 * p * d + 0.329 * p * sV\n  const J = 66.115 * p + 0.9025179 * p * d - 0.329 * p * sV\n  const [sM, cM] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(M)\n  const [sN, cN] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(N)\n  const [s2M, c2M] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * M)\n  const [s2N, c2N] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * N)\n  const A = 1.915 * p * sM + 0.02 * p * s2M\n  const B = 5.555 * p * sN + 0.168 * p * s2N\n  const K = J + A - B\n  const R = 1.00014 - 0.01671 * cM - 0.00014 * c2M\n  const r = 5.20872 - 0.25208 * cN - 0.00611 * c2N\n  const [sK, cK] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(K)\n  const Δ = Math.sqrt(r * r + R * R - 2 * r * R * cK)\n  const ψ = Math.asin(R / Δ * sK)\n  const dd = d - Δ / 173\n  let ω1 = 210.98 * p + 877.8169088 * p * dd + ψ - B\n  let ω2 = 187.23 * p + 870.1869088 * p * dd + ψ - B\n  let C = Math.sin(ψ / 2)\n  C *= C\n  if (sK > 0) {\n    C = -C\n  }\n  ω1 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(ω1 + C, 2 * Math.PI)\n  ω2 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(ω2 + C, 2 * Math.PI)\n  const λ = 34.35 * p + 0.083091 * p * d + 0.329 * p * sV + B\n  const DS = 3.12 * p * Math.sin(λ + 42.8 * p)\n  const DE = DS - 2.22 * p * Math.sin(ψ) * Math.cos(λ + 22 * p) -\n    1.3 * p * (r - Δ) / Δ * Math.sin(λ - 100.5 * p)\n  return [DS, DE, ω1, ω2]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  physical,\n  physical2\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/jupiter.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/jupitermoons.js":
/*!*****************************************************!*\
  !*** ./node_modules/astronomia/src/jupitermoons.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callisto: () => (/* binding */ callisto),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   e5: () => (/* binding */ e5),\n/* harmony export */   europa: () => (/* binding */ europa),\n/* harmony export */   ganymede: () => (/* binding */ ganymede),\n/* harmony export */   io: () => (/* binding */ io),\n/* harmony export */   positions: () => (/* binding */ positions)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _planetelements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./planetelements.js */ \"./node_modules/astronomia/src/planetelements.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module jupitermoons\n */\n/**\n * Jupitermoons: Chapter 44, Positions of the Satellites of Jupiter.\n */\n\n\n\n\n // eslint-disable-line no-unused-vars\n\n// Moon names in order of position in Array\nconst io = 0\nconst europa = 1\nconst ganymede = 2\nconst callisto = 3\n\nconst k = [17295, 21819, 27558, 36548]\n\n/**\n * XY used for returning coordinates of moons.\n * @param {number} x - in units of Jupiter radii\n * @param {number} y - in units of Jupiter radii\n */\nfunction XY (x, y) {\n  this.x = x\n  this.y = y\n}\n\n/**\n * Positions computes positions of moons of Jupiter.\n *\n * Returned coordinates are in units of Jupiter radii.\n *\n * @param {Number} jde - Julian ephemeris day\n * @return {Array} x, y - coordinates of the 4 Satellites of jupiter\n */\nfunction positions (jde) {\n  const d = jde - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000\n  const p = Math.PI / 180\n  const V = 172.74 * p + 0.00111588 * p * d\n  const M = 357.529 * p + 0.9856003 * p * d\n  const sV = Math.sin(V)\n  const N = 20.02 * p + 0.0830853 * p * d + 0.329 * p * sV\n  const J = 66.115 * p + 0.9025179 * p * d - 0.329 * p * sV\n  const [sM, cM] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(M)\n  const [sN, cN] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(N)\n  const [s2M, c2M] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * M)\n  const [s2N, c2N] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * N)\n  const A = 1.915 * p * sM + 0.02 * p * s2M\n  const B = 5.555 * p * sN + 0.168 * p * s2N\n  const K = J + A - B\n  const R = 1.00014 - 0.01671 * cM - 0.00014 * c2M\n  const r = 5.20872 - 0.25208 * cN - 0.00611 * c2N\n  const [sK, cK] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(K)\n  const Δ = Math.sqrt(r * r + R * R - 2 * r * R * cK)\n  const ψ = Math.asin(R / Δ * sK)\n  const λ = 34.35 * p + 0.083091 * p * d + 0.329 * p * sV + B\n  const DS = 3.12 * p * Math.sin(λ + 42.8 * p)\n  const DE = DS - 2.22 * p * Math.sin(ψ) * Math.cos(λ + 22 * p) -\n    1.3 * p * (r - Δ) / Δ * Math.sin(λ - 100.5 * p)\n  const dd = d - Δ / 173\n  const u1 = 163.8069 * p + 203.4058646 * p * dd + ψ - B\n  const u2 = 358.414 * p + 101.2916335 * p * dd + ψ - B\n  const u3 = 5.7176 * p + 50.234518 * p * dd + ψ - B\n  const u4 = 224.8092 * p + 21.48798 * p * dd + ψ - B\n  const G = 331.18 * p + 50.310482 * p * dd\n  const H = 87.45 * p + 21.569231 * p * dd\n  const [s212, c212] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * (u1 - u2))\n  const [s223, c223] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * (u2 - u3))\n  const [sG, cG] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(G)\n  const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n  const c1 = 0.473 * p * s212\n  const c2 = 1.065 * p * s223\n  const c3 = 0.165 * p * sG\n  const c4 = 0.843 * p * sH\n  const r1 = 5.9057 - 0.0244 * c212\n  const r2 = 9.3966 - 0.0882 * c223\n  const r3 = 14.9883 - 0.0216 * cG\n  const r4 = 26.3627 - 0.1939 * cH\n  const sDE = Math.sin(DE)\n  const xy = function (u, r) {\n    const [su, cu] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u)\n    return new XY(r * su, -r * cu * sDE)\n  }\n  return [xy(u1 + c1, r1), xy(u2 + c2, r2), xy(u3 + c3, r3), xy(u4 + c4, r4)]\n}\n\n/**\n * Positions computes positions of moons of Jupiter.\n *\n * High accuracy method based on theory \"E5\"  Results returned in\n * argument pos, which must not be undefined.  Returned coordinates in units\n * of Jupiter radii.\n *\n * @param {Number} jde - Julian ephemeris day\n * @param {Planet} earth - VSOP87 Planet earth\n * @param {Planet} jupiter - VSOP87 Planet jupiter\n * @param {Array} [pos] - reference to array of positions (same as return value)\n * @return {Array} x, y - coordinates of the 4 Satellites of jupiter\n */\nfunction e5 (jde, earth, jupiter, pos) {\n  pos = pos || new Array(4)\n\n  // variables assigned in following block\n  let λ0, β0, t\n  let Δ = 5.0\n\n  ;(function () {\n    const { lon, lat, range } = _solar_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].trueVSOP87(earth, jde)\n    const [s, β, R] = [lon, lat, range]\n    const [ss, cs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(s)\n    const sβ = Math.sin(β)\n    let τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n    let x = 0\n    let y = 0\n    let z = 0\n\n    function f () {\n      const { lon, lat, range } = jupiter.position(jde - τ)\n      const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lon)\n      const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lat)\n      x = range * cb * cl + R * cs\n      y = range * cb * sl + R * ss\n      z = range * sb + R * sβ\n      Δ = Math.sqrt(x * x + y * y + z * z)\n      τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n    }\n\n    f()\n    f()\n\n    λ0 = Math.atan2(y, x)\n    β0 = Math.atan(z / Math.hypot(x, y))\n    t = jde - 2443000.5 - τ\n  })()\n\n  const p = Math.PI / 180\n  const l1 = 106.07719 * p + 203.48895579 * p * t\n  const l2 = 175.73161 * p + 101.374724735 * p * t\n  const l3 = 120.55883 * p + 50.317609207 * p * t\n  const l4 = 84.44459 * p + 21.571071177 * p * t\n  const π1 = 97.0881 * p + 0.16138586 * p * t\n  const π2 = 154.8663 * p + 0.04726307 * p * t\n  const π3 = 188.184 * p + 0.00712734 * p * t\n  const π4 = 335.2868 * p + 0.00184 * p * t\n  const ω1 = 312.3346 * p - 0.13279386 * p * t\n  const ω2 = 100.4411 * p - 0.03263064 * p * t\n  const ω3 = 119.1942 * p - 0.00717703 * p * t\n  const ω4 = 322.6186 * p - 0.00175934 * p * t\n  const Γ = 0.33033 * p * Math.sin(163.679 * p + 0.0010512 * p * t) +\n    0.03439 * p * Math.sin(34.486 * p - 0.0161731 * p * t)\n  const Φλ = 199.6766 * p + 0.1737919 * p * t\n  let ψ = 316.5182 * p - 0.00000208 * p * t\n  const G = 30.23756 * p + 0.0830925701 * p * t + Γ\n  const Gʹ = 31.97853 * p + 0.0334597339 * p * t\n  const Π = 13.469942 * p\n\n  const Σ1 = 0.47259 * p * Math.sin(2 * (l1 - l2)) +\n    -0.03478 * p * Math.sin(π3 - π4) +\n    0.01081 * p * Math.sin(l2 - 2 * l3 + π3) +\n    0.00738 * p * Math.sin(Φλ) +\n    0.00713 * p * Math.sin(l2 - 2 * l3 + π2) +\n    -0.00674 * p * Math.sin(π1 + π3 - 2 * Π - 2 * G) +\n    0.00666 * p * Math.sin(l2 - 2 * l3 + π4) +\n    0.00445 * p * Math.sin(l1 - π3) +\n    -0.00354 * p * Math.sin(l1 - l2) +\n    -0.00317 * p * Math.sin(2 * ψ - 2 * Π) +\n    0.00265 * p * Math.sin(l1 - π4) +\n    -0.00186 * p * Math.sin(G) +\n    0.00162 * p * Math.sin(π2 - π3) +\n    0.00158 * p * Math.sin(4 * (l1 - l2)) +\n    -0.00155 * p * Math.sin(l1 - l3) +\n    -0.00138 * p * Math.sin(ψ + ω3 - 2 * Π - 2 * G) +\n    -0.00115 * p * Math.sin(2 * (l1 - 2 * l2 + ω2)) +\n    0.00089 * p * Math.sin(π2 - π4) +\n    0.00085 * p * Math.sin(l1 + π3 - 2 * Π - 2 * G) +\n    0.00083 * p * Math.sin(ω2 - ω3) +\n    0.00053 * p * Math.sin(ψ - ω2)\n  const Σ2 = 1.06476 * p * Math.sin(2 * (l2 - l3)) +\n    0.04256 * p * Math.sin(l1 - 2 * l2 + π3) +\n    0.03581 * p * Math.sin(l2 - π3) +\n    0.02395 * p * Math.sin(l1 - 2 * l2 + π4) +\n    0.01984 * p * Math.sin(l2 - π4) +\n    -0.01778 * p * Math.sin(Φλ) +\n    0.01654 * p * Math.sin(l2 - π2) +\n    0.01334 * p * Math.sin(l2 - 2 * l3 + π2) +\n    0.01294 * p * Math.sin(π3 - π4) +\n    -0.01142 * p * Math.sin(l2 - l3) +\n    -0.01057 * p * Math.sin(G) +\n    -0.00775 * p * Math.sin(2 * (ψ - Π)) +\n    0.00524 * p * Math.sin(2 * (l1 - l2)) +\n    -0.0046 * p * Math.sin(l1 - l3) +\n    0.00316 * p * Math.sin(ψ - 2 * G + ω3 - 2 * Π) +\n    -0.00203 * p * Math.sin(π1 + π3 - 2 * Π - 2 * G) +\n    0.00146 * p * Math.sin(ψ - ω3) +\n    -0.00145 * p * Math.sin(2 * G) +\n    0.00125 * p * Math.sin(ψ - ω4) +\n    -0.00115 * p * Math.sin(l1 - 2 * l3 + π3) +\n    -0.00094 * p * Math.sin(2 * (l2 - ω2)) +\n    0.00086 * p * Math.sin(2 * (l1 - 2 * l2 + ω2)) +\n    -0.00086 * p * Math.sin(5 * Gʹ - 2 * G + 52.225 * p) +\n    -0.00078 * p * Math.sin(l2 - l4) +\n    -0.00064 * p * Math.sin(3 * l3 - 7 * l4 + 4 * π4) +\n    0.00064 * p * Math.sin(π1 - π4) +\n    -0.00063 * p * Math.sin(l1 - 2 * l3 + π4) +\n    0.00058 * p * Math.sin(ω3 - ω4) +\n    0.00056 * p * Math.sin(2 * (ψ - Π - G)) +\n    0.00056 * p * Math.sin(2 * (l2 - l4)) +\n    0.00055 * p * Math.sin(2 * (l1 - l3)) +\n    0.00052 * p * Math.sin(3 * l3 - 7 * l4 + π3 + 3 * π4) +\n    -0.00043 * p * Math.sin(l1 - π3) +\n    0.00041 * p * Math.sin(5 * (l2 - l3)) +\n    0.00041 * p * Math.sin(π4 - Π) +\n    0.00032 * p * Math.sin(ω2 - ω3) +\n    0.00032 * p * Math.sin(2 * (l3 - G - Π))\n  const Σ3 = 0.1649 * p * Math.sin(l3 - π3) +\n    0.09081 * p * Math.sin(l3 - π4) +\n    -0.06907 * p * Math.sin(l2 - l3) +\n    0.03784 * p * Math.sin(π3 - π4) +\n    0.01846 * p * Math.sin(2 * (l3 - l4)) +\n    -0.0134 * p * Math.sin(G) +\n    -0.01014 * p * Math.sin(2 * (ψ - Π)) +\n    0.00704 * p * Math.sin(l2 - 2 * l3 + π3) +\n    -0.0062 * p * Math.sin(l2 - 2 * l3 + π2) +\n    -0.00541 * p * Math.sin(l3 - l4) +\n    0.00381 * p * Math.sin(l2 - 2 * l3 + π4) +\n    0.00235 * p * Math.sin(ψ - ω3) +\n    0.00198 * p * Math.sin(ψ - ω4) +\n    0.00176 * p * Math.sin(Φλ) +\n    0.0013 * p * Math.sin(3 * (l3 - l4)) +\n    0.00125 * p * Math.sin(l1 - l3) +\n    -0.00119 * p * Math.sin(5 * Gʹ - 2 * G + 52.225 * p) +\n    0.00109 * p * Math.sin(l1 - l2) +\n    -0.001 * p * Math.sin(3 * l3 - 7 * l4 + 4 * π4) +\n    0.00091 * p * Math.sin(ω3 - ω4) +\n    0.0008 * p * Math.sin(3 * l3 - 7 * l4 + π3 + 3 * π4) +\n    -0.00075 * p * Math.sin(2 * l2 - 3 * l3 + π3) +\n    0.00072 * p * Math.sin(π1 + π3 - 2 * Π - 2 * G) +\n    0.00069 * p * Math.sin(π4 - Π) +\n    -0.00058 * p * Math.sin(2 * l3 - 3 * l4 + π4) +\n    -0.00057 * p * Math.sin(l3 - 2 * l4 + π4) +\n    0.00056 * p * Math.sin(l3 + π3 - 2 * Π - 2 * G) +\n    -0.00052 * p * Math.sin(l2 - 2 * l3 + π1) +\n    -0.00050 * p * Math.sin(π2 - π3) +\n    0.00048 * p * Math.sin(l3 - 2 * l4 + π3) +\n    -0.00045 * p * Math.sin(2 * l2 - 3 * l3 + π4) +\n    -0.00041 * p * Math.sin(π2 - π4) +\n    -0.00038 * p * Math.sin(2 * G) +\n    -0.00037 * p * Math.sin(π3 - π4 + ω3 - ω4) +\n    -0.00032 * p * Math.sin(3 * l3 - 7 * l4 + 2 * π3 + 2 * π4) +\n    0.0003 * p * Math.sin(4 * (l3 - l4)) +\n    0.00029 * p * Math.sin(l3 + π4 - 2 * Π - 2 * G) +\n    -0.00028 * p * Math.sin(ω3 + ψ - 2 * Π - 2 * G) +\n    0.00026 * p * Math.sin(l3 - Π - G) +\n    0.00024 * p * Math.sin(l2 - 3 * l3 + 2 * l4) +\n    0.00021 * p * Math.sin(2 * (l3 - Π - G)) +\n    -0.00021 * p * Math.sin(l3 - π2) +\n    0.00017 * p * Math.sin(2 * (l3 - π3))\n  const Σ4 = 0.84287 * p * Math.sin(l4 - π4) +\n    0.03431 * p * Math.sin(π4 - π3) +\n    -0.03305 * p * Math.sin(2 * (ψ - Π)) +\n    -0.03211 * p * Math.sin(G) +\n    -0.01862 * p * Math.sin(l4 - π3) +\n    0.01186 * p * Math.sin(ψ - ω4) +\n    0.00623 * p * Math.sin(l4 + π4 - 2 * G - 2 * Π) +\n    0.00387 * p * Math.sin(2 * (l4 - π4)) +\n    -0.00284 * p * Math.sin(5 * Gʹ - 2 * G + 52.225 * p) +\n    -0.00234 * p * Math.sin(2 * (ψ - π4)) +\n    -0.00223 * p * Math.sin(l3 - l4) +\n    -0.00208 * p * Math.sin(l4 - Π) +\n    0.00178 * p * Math.sin(ψ + ω4 - 2 * π4) +\n    0.00134 * p * Math.sin(π4 - Π) +\n    0.00125 * p * Math.sin(2 * (l4 - G - Π)) +\n    -0.00117 * p * Math.sin(2 * G) +\n    -0.00112 * p * Math.sin(2 * (l3 - l4)) +\n    0.00107 * p * Math.sin(3 * l3 - 7 * l4 + 4 * π4) +\n    0.00102 * p * Math.sin(l4 - G - Π) +\n    0.00096 * p * Math.sin(2 * l4 - ψ - ω4) +\n    0.00087 * p * Math.sin(2 * (ψ - ω4)) +\n    -0.00085 * p * Math.sin(3 * l3 - 7 * l4 + π3 + 3 * π4) +\n    0.00085 * p * Math.sin(l3 - 2 * l4 + π4) +\n    -0.00081 * p * Math.sin(2 * (l4 - ψ)) +\n    0.00071 * p * Math.sin(l4 + π4 - 2 * Π - 3 * G) +\n    0.00061 * p * Math.sin(l1 - l4) +\n    -0.00056 * p * Math.sin(ψ - ω3) +\n    -0.00054 * p * Math.sin(l3 - 2 * l4 + π3) +\n    0.00051 * p * Math.sin(l2 - l4) +\n    0.00042 * p * Math.sin(2 * (ψ - G - Π)) +\n    0.00039 * p * Math.sin(2 * (π4 - ω4)) +\n    0.00036 * p * Math.sin(ψ + Π - π4 - ω4) +\n    0.00035 * p * Math.sin(2 * Gʹ - G + 188.37 * p) +\n    -0.00035 * p * Math.sin(l4 - π4 + 2 * Π - 2 * ψ) +\n    -0.00032 * p * Math.sin(l4 + π4 - 2 * Π - G) +\n    0.0003 * p * Math.sin(2 * Gʹ - 2 * G + 149.15 * p) +\n    0.00029 * p * Math.sin(3 * l3 - 7 * l4 + 2 * π3 + 2 * π4) +\n    0.00028 * p * Math.sin(l4 - π4 + 2 * ψ - 2 * Π) +\n    -0.00028 * p * Math.sin(2 * (l4 - ω4)) +\n    -0.00027 * p * Math.sin(π3 - π4 + ω3 - ω4) +\n    -0.00026 * p * Math.sin(5 * Gʹ - 3 * G + 188.37 * p) +\n    0.00025 * p * Math.sin(ω4 - ω3) +\n    -0.00025 * p * Math.sin(l2 - 3 * l3 + 2 * l4) +\n    -0.00023 * p * Math.sin(3 * (l3 - l4)) +\n    0.00021 * p * Math.sin(2 * l4 - 2 * Π - 3 * G) +\n    -0.00021 * p * Math.sin(2 * l3 - 3 * l4 + π4) +\n    0.00019 * p * Math.sin(l4 - π4 - G) +\n    -0.00019 * p * Math.sin(2 * l4 - π3 - π4) +\n    -0.00018 * p * Math.sin(l4 - π4 + G) +\n    -0.00016 * p * Math.sin(l4 + π3 - 2 * Π - 2 * G)\n  const L1 = l1 + Σ1\n  const L2 = l2 + Σ2\n  const L3 = l3 + Σ3\n  const L4 = l4 + Σ4\n\n  // variables assigned in following block\n  let I\n  const X = new Array(5).fill(0)\n  const Y = new Array(5).fill(0)\n  const Z = new Array(5).fill(0)\n  let R\n\n  ;(function () {\n    const L = [L1, L2, L3, L4]\n    const B = [\n      Math.atan(0.0006393 * Math.sin(L1 - ω1) +\n        0.0001825 * Math.sin(L1 - ω2) +\n        0.0000329 * Math.sin(L1 - ω3) +\n        -0.0000311 * Math.sin(L1 - ψ) +\n        0.0000093 * Math.sin(L1 - ω4) +\n        0.0000075 * Math.sin(3 * L1 - 4 * l2 - 1.9927 * Σ1 + ω2) +\n        0.0000046 * Math.sin(L1 + ψ - 2 * Π - 2 * G)),\n      Math.atan(0.0081004 * Math.sin(L2 - ω2) +\n        0.0004512 * Math.sin(L2 - ω3) +\n        -0.0003284 * Math.sin(L2 - ψ) +\n        0.0001160 * Math.sin(L2 - ω4) +\n        0.0000272 * Math.sin(l1 - 2 * l3 + 1.0146 * Σ2 + ω2) +\n        -0.0000144 * Math.sin(L2 - ω1) +\n        0.0000143 * Math.sin(L2 + ψ - 2 * Π - 2 * G) +\n        0.0000035 * Math.sin(L2 - ψ + G) +\n        -0.0000028 * Math.sin(l1 - 2 * l3 + 1.0146 * Σ2 + ω3)),\n      Math.atan(0.0032402 * Math.sin(L3 - ω3) +\n        -0.0016911 * Math.sin(L3 - ψ) +\n        0.0006847 * Math.sin(L3 - ω4) +\n        -0.0002797 * Math.sin(L3 - ω2) +\n        0.0000321 * Math.sin(L3 + ψ - 2 * Π - 2 * G) +\n        0.0000051 * Math.sin(L3 - ψ + G) +\n        -0.0000045 * Math.sin(L3 - ψ - G) +\n        -0.0000045 * Math.sin(L3 + ψ - 2 * Π) +\n        0.0000037 * Math.sin(L3 + ψ - 2 * Π - 3 * G) +\n        0.000003 * Math.sin(2 * l2 - 3 * L3 + 4.03 * Σ3 + ω2) +\n        -0.0000021 * Math.sin(2 * l2 - 3 * L3 + 4.03 * Σ3 + ω3)),\n      Math.atan(-0.0076579 * Math.sin(L4 - ψ) +\n        0.0044134 * Math.sin(L4 - ω4) +\n        -0.0005112 * Math.sin(L4 - ω3) +\n        0.0000773 * Math.sin(L4 + ψ - 2 * Π - 2 * G) +\n        0.0000104 * Math.sin(L4 - ψ + G) +\n        -0.0000102 * Math.sin(L4 - ψ - G) +\n        0.0000088 * Math.sin(L4 + ψ - 2 * Π - 3 * G) +\n        -0.0000038 * Math.sin(L4 + ψ - 2 * Π - G))\n    ]\n    R = [\n      5.90569 * (1 +\n        -0.0041339 * Math.cos(2 * (l1 - l2)) +\n        -0.0000387 * Math.cos(l1 - π3) +\n        -0.0000214 * Math.cos(l1 - π4) +\n        0.000017 * Math.cos(l1 - l2) +\n        -0.0000131 * Math.cos(4 * (l1 - l2)) +\n        0.0000106 * Math.cos(l1 - l3) +\n        -0.0000066 * Math.cos(l1 + π3 - 2 * Π - 2 * G)),\n      9.39657 * (1 +\n        0.0093848 * Math.cos(l1 - l2) +\n        -0.0003116 * Math.cos(l2 - π3) +\n        -0.0001744 * Math.cos(l2 - π4) +\n        -0.0001442 * Math.cos(l2 - π2) +\n        0.0000553 * Math.cos(l2 - l3) +\n        0.0000523 * Math.cos(l1 - l3) +\n        -0.0000290 * Math.cos(2 * (l1 - l2)) +\n        0.0000164 * Math.cos(2 * (l2 - ω2)) +\n        0.0000107 * Math.cos(l1 - 2 * l3 + π3) +\n        -0.0000102 * Math.cos(l2 - π1) +\n        -0.0000091 * Math.cos(2 * (l1 - l3))),\n      14.98832 * (1 +\n        -0.0014388 * Math.cos(l3 - π3) +\n        -0.0007917 * Math.cos(l3 - π4) +\n        0.0006342 * Math.cos(l2 - l3) +\n        -0.0001761 * Math.cos(2 * (l3 - l4)) +\n        0.0000294 * Math.cos(l3 - l4) +\n        -0.0000156 * Math.cos(3 * (l3 - l4)) +\n        0.0000156 * Math.cos(l1 - l3) +\n        -0.0000153 * Math.cos(l1 - l2) +\n        0.000007 * Math.cos(2 * l2 - 3 * l3 + π3) +\n        -0.0000051 * Math.cos(l3 + π3 - 2 * Π - 2 * G)),\n      26.36273 * (1 +\n        -0.0073546 * Math.cos(l4 - π4) +\n        0.0001621 * Math.cos(l4 - π3) +\n        0.0000974 * Math.cos(l3 - l4) +\n        -0.0000543 * Math.cos(l4 + π4 - 2 * Π - 2 * G) +\n        -0.0000271 * Math.cos(2 * (l4 - π4)) +\n        0.0000182 * Math.cos(l4 - Π) +\n        0.0000177 * Math.cos(2 * (l3 - l4)) +\n        -0.0000167 * Math.cos(2 * l4 - ψ - ω4) +\n        0.0000167 * Math.cos(ψ - ω4) +\n        -0.0000155 * Math.cos(2 * (l4 - Π - G)) +\n        0.0000142 * Math.cos(2 * (l4 - ψ)) +\n        0.0000105 * Math.cos(l1 - l4) +\n        0.0000092 * Math.cos(l2 - l4) +\n        -0.0000089 * Math.cos(l4 - Π - G) +\n        -0.0000062 * Math.cos(l4 + π4 - 2 * Π - 3 * G) +\n        0.0000048 * Math.cos(2 * (l4 - ω4)))\n    ]\n    // p. 311\n    const T0 = (jde - 2433282.423) / _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianCentury\n    const P = (1.3966626 * p + 0.0003088 * p * T0) * T0\n    for (const i in L) {\n      L[i] += P\n    }\n    ψ += P\n    const T = (jde - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J1900) / _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianCentury\n    I = 3.120262 * p + 0.0006 * p * T\n    for (const i in L) {\n      const [sLψ, cLψ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(L[i] - ψ)\n      const [sB, cB] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(B[i])\n      X[i] = R[i] * cLψ * cB\n      Y[i] = R[i] * sLψ * cB\n      Z[i] = R[i] * sB\n    }\n  })()\n\n  Z[4] = 1\n  // p. 312\n  const A = new Array(5).fill(0)\n  const B = new Array(5).fill(0)\n  const C = new Array(5).fill(0)\n  const [sI, cI] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(I)\n  const Ω = _planetelements_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].node(_planetelements_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jupiter, jde)\n  const [sΩ, cΩ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(Ω)\n  const [sΦ, cΦ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ψ - Ω)\n  const [si, ci] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(_planetelements_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inc(_planetelements_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jupiter, jde))\n  const [sλ0, cλ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λ0)\n  const [sβ0, cβ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β0)\n\n  for (const i in A) {\n    let a0\n    // step 1\n    let a = X[i]\n    let b = Y[i] * cI - Z[i] * sI\n    let c = Y[i] * sI + Z[i] * cI\n    // step 2\n    a0 = a * cΦ - b * sΦ\n    b = a * sΦ + b * cΦ\n    a = a0\n    // step 3\n    const b0 = b * ci - c * si\n    c = b * si + c * ci\n    b = b0\n    // step 4\n    a0 = a * cΩ - b * sΩ\n    b = a * sΩ + b * cΩ\n    a = a0\n    // step 5\n    a0 = a * sλ0 - b * cλ0\n    b = a * cλ0 + b * sλ0\n    a = a0\n    // step 6\n    A[i] = a\n    B[i] = c * sβ0 + b * cβ0\n    C[i] = c * cβ0 - b * sβ0\n  }\n  const [sD, cD] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(Math.atan2(A[4], C[4]))\n  // p. 313\n  for (let i = 0; i < 4; i++) {\n    let x = A[i] * cD - C[i] * sD\n    const y = A[i] * sD + C[i] * cD\n    const z = B[i]\n    // differential light time\n    const d = x / R[i]\n    x += Math.abs(z) / k[i] * Math.sqrt(1 - d * d)\n    // perspective effect\n    const W = Δ / (Δ + z / 2095)\n    pos[i] = new XY(x * W, y * W)\n  }\n  return pos\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  io,\n  europa,\n  ganymede,\n  callisto,\n  positions,\n  e5\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/jupitermoons.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/kepler.js":
/*!***********************************************!*\
  !*** ./node_modules/astronomia/src/kepler.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   kepler1: () => (/* binding */ kepler1),\n/* harmony export */   kepler2: () => (/* binding */ kepler2),\n/* harmony export */   kepler2a: () => (/* binding */ kepler2a),\n/* harmony export */   kepler2b: () => (/* binding */ kepler2b),\n/* harmony export */   kepler3: () => (/* binding */ kepler3),\n/* harmony export */   kepler4: () => (/* binding */ kepler4),\n/* harmony export */   radius: () => (/* binding */ radius),\n/* harmony export */   trueAnomaly: () => (/* binding */ trueAnomaly)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _iterate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterate.js */ \"./node_modules/astronomia/src/iterate.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module kepler\n */\n/**\n * Kepler: Chapter 30, Equation of Kepler.\n */\n\n\n\n\n/**\n * True returns true anomaly ν for given eccentric anomaly E.\n *\n * @param {number} e - eccentricity\n * @param {number} E - eccentric anomaly in radians.\n * @return true anomaly ν in radians.\n */\nfunction trueAnomaly (E, e) {\n  // (30.1) p. 195\n  return 2 * Math.atan(Math.sqrt((1 + e) / (1 - e)) * Math.tan(E * 0.5))\n}\n\n/**\n * Radius returns radius distance r for given eccentric anomaly E.\n *\n * Result unit is the unit of semimajor axis a (typically AU.)\n *\n * @param {number} e - eccentricity\n * @param {number} E - eccentric anomaly in radians\n * @param {number} a - semimajor axis\n * @return {number} radius distance in unit of `a`\n */\nfunction radius (E, e, a) { // (E, e, a float64)  float64\n  // (30.2) p. 195\n  return a * (1 - e * Math.cos(E))\n}\n\n/**\n * Kepler1 solves Kepler's equation by iteration.\n *\n * The iterated formula is\n *\n *  E1 = m + e * sin(E0)\n *\n * For some vaues of e and M it will fail to converge and the\n * function will return an error.\n *\n * @throws Error\n * @param {number} e - eccentricity\n * @param {number} m - mean anomaly in radians\n * @param {number} places - (int) desired number of decimal places in the result\n * @return {number} eccentric anomaly `E` in radians.\n */\nfunction kepler1 (e, m, places) {\n  const f = function (E0) {\n    return m + e * Math.sin(E0) // (30.5) p. 195\n  }\n  return _iterate_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].decimalPlaces(f, m, places, places * 5)\n}\n\n/**\n * Kepler2 solves Kepler's equation by iteration.\n *\n * The iterated formula is\n *\n *  E1 = E0 + (m + e * sin(E0) - E0) / (1 - e * cos(E0))\n *\n * The function converges over a wider range of inputs than does Kepler1\n * but it also fails to converge for some values of e and M.\n *\n * @throws Error\n * @param {number} e - eccentricity\n * @param {number} m - mean anomaly in radians\n * @param {number} places - (int) desired number of decimal places in the result\n * @return {number} eccentric anomaly `E` in radians.\n */\nfunction kepler2 (e, m, places) { // (e, M float64, places int)  (E float64, err error)\n  const f = function (E0) {\n    const [se, ce] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(E0)\n    return E0 + (m + e * se - E0) / (1 - e * ce) // (30.7) p. 199\n  }\n  return _iterate_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].decimalPlaces(f, m, places, places)\n}\n\n/**\n * Kepler2a solves Kepler's equation by iteration.\n *\n * The iterated formula is the same as in Kepler2 but a limiting function\n * avoids divergence.\n *\n * @throws Error\n * @param {number} e - eccentricity\n * @param {number} m - mean anomaly in radians\n * @param {number} places - (int) desired number of decimal places in the result\n * @return {number} eccentric anomaly `E` in radians.\n */\nfunction kepler2a (e, m, places) { // (e, M float64, places int)  (E float64, err error)\n  const f = function (E0) {\n    const [se, ce] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(E0)\n    // method of Leingärtner, p. 205\n    return E0 + Math.asin(Math.sin((m + e * se - E0) / (1 - e * ce)))\n  }\n  return _iterate_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].decimalPlaces(f, m, places, places * 5)\n}\n\n/**\n * Kepler2b solves Kepler's equation by iteration.\n *\n * The iterated formula is the same as in Kepler2 but a (different) limiting\n * function avoids divergence.\n *\n * @throws Error\n * @param {number} e - eccentricity\n * @param {number} m - mean anomaly in radians\n * @param {number} places - (int) desired number of decimal places in the result\n * @return {number} eccentric anomaly `E` in radians.\n */\nfunction kepler2b (e, m, places) { // (e, M float64, places int)  (E float64, err error)\n  const f = function (E0) {\n    const [se, ce] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(E0)\n    let d = (m + e * se - E0) / (1 - e * ce)\n    // method of Steele, p. 205\n    if (d > 0.5) {\n      d = 0.5\n    } else if (d < -0.5) {\n      d = -0.5\n    }\n    return E0 + d\n  }\n  return _iterate_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].decimalPlaces(f, m, places, places)\n}\n\n/**\n * Kepler3 solves Kepler's equation by binary search.\n *\n * @throws Error\n * @param {number} e - eccentricity\n * @param {number} m - mean anomaly in radians\n * @return {number} eccentric anomaly `E` in radians.\n */\nfunction kepler3 (e, m) { // (e, m float64)  (E float64)\n  // adapted from BASIC, p. 206\n  m = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(m, 2 * Math.PI)\n  let f = 1\n  if (m > Math.PI) {\n    f = -1\n    m = 2 * Math.PI - m\n  }\n  let E0 = Math.PI * 0.5\n  let d = Math.PI * 0.25\n  for (let i = 0; i < 53; i++) {\n    const M1 = E0 - e * Math.sin(E0)\n    if (m - M1 < 0) {\n      E0 -= d\n    } else {\n      E0 += d\n    }\n    d *= 0.5\n  }\n  if (f < 0) {\n    return -E0\n  }\n  return E0\n}\n\n/**\n * Kepler4 returns an approximate solution to Kepler's equation.\n *\n * It is valid only for small values of e.\n *\n * @param {number} e - eccentricity\n * @param {number} m - mean anomaly in radians\n * @return {number} eccentric anomaly `E` in radians.\n */\nfunction kepler4 (e, m) { // (e, m float64)  (E float64)\n  const [sm, cm] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(m)\n  return Math.atan2(sm, cm - e) // (30.8) p. 206\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  trueAnomaly,\n  true: trueAnomaly, // BACKWARDS-COMPATIBILITY\n  radius,\n  kepler1,\n  kepler2,\n  kepler2a,\n  kepler2b,\n  kepler3,\n  kepler4\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/kepler.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/line.js":
/*!*********************************************!*\
  !*** ./node_modules/astronomia/src/line.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   angle: () => (/* binding */ angle),\n/* harmony export */   angleError: () => (/* binding */ angleError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   time: () => (/* binding */ time)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module line\n */\n/**\n * Line: Chapter 19, Bodies in Straight Line\n */\n\n\n\n\n/**\n * Time computes the time at which a moving body is on a straight line (great\n * circle) between two fixed points, such as stars.\n *\n * Coordinates may be right ascensions and declinations or longitudes and\n * latitudes.  Fixed points are r1, d1, r2, d2.  Moving body is an ephemeris\n * of 5 rows, r3, d3, starting at time t1 and ending at time t5.  Time scale\n * is arbitrary.\n *\n * @throws Error\n * @param {Number} r1 - right ascension Coordinate 1\n * @param {Number} d1 - declination Coordinate 1\n * @param {Number} r2 - right ascension Coordinate 2\n * @param {Number} d2 - declination Coordinate 2\n * @param {Number[]} r3 - right ascension Coordinate 3\n * @param {Number[]} d3 - declination Coordinate 3\n * @param {Number} t1 - time in Julian Days\n * @param {Number} t5 - time in Julian Days\n * @returns {Number} time of alignment in Julian Days\n */\nfunction time (r1, d1, r2, d2, r3, d3, t1, t5) { // (r1, d1, r2, d2 float64, r3, d3 []float64, t1, t5 float64)  (float64, error)\n  if (r3.length !== 5 || d3.length !== 5) {\n    throw new Error('r3, d3 must be length 5')\n  }\n  const gc = new Array(5)\n  r3.forEach((r3i, i) => {\n    // (19.1) p. 121\n    gc[i] = Math.tan(d1) * Math.sin(r2 - r3i) +\n      Math.tan(d2) * Math.sin(r3i - r1) +\n      Math.tan(d3[i]) * Math.sin(r1 - r2)\n  })\n  const l5 = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len5(t1, t5, gc)\n  return l5.zero(false)\n}\n\n/**\n * Angle returns the angle between great circles defined by three points.\n *\n * Coordinates may be right ascensions and declinations or longitudes and\n * latitudes.  If r1, d1, r2, d2 defines one line and r2, d2, r3, d3 defines\n * another, the result is the angle between the two lines.\n *\n * Algorithm by Meeus.\n */\nfunction angle (r1, d1, r2, d2, r3, d3) { // (r1, d1, r2, d2, r3, d3 float64)  float64\n  const [sd2, cd2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d2)\n  const [sr21, cr21] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r2 - r1)\n  const [sr32, cr32] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r3 - r2)\n  const C1 = Math.atan2(sr21, cd2 * Math.tan(d1) - sd2 * cr21)\n  const C2 = Math.atan2(sr32, cd2 * Math.tan(d3) - sd2 * cr32)\n  return C1 + C2\n}\n\n/**\n * Error returns an error angle of three nearly co-linear points.\n *\n * For the line defined by r1, d1, r2, d2, the result is the anglular distance\n * between that line and r0, d0.\n *\n * Algorithm by Meeus.\n */\nfunction error (r1, d1, r2, d2, r0, d0) { // (r1, d1, r2, d2, r0, d0 float64)  float64\n  const [sr1, cr1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r1)\n  const [sd1, cd1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d1)\n  const [sr2, cr2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r2)\n  const [sd2, cd2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d2)\n  const X1 = cd1 * cr1\n  const X2 = cd2 * cr2\n  const Y1 = cd1 * sr1\n  const Y2 = cd2 * sr2\n  const Z1 = sd1\n  const Z2 = sd2\n  const A = Y1 * Z2 - Z1 * Y2\n  const B = Z1 * X2 - X1 * Z2\n  const C = X1 * Y2 - Y1 * X2\n  const m = Math.tan(r0)\n  const n = Math.tan(d0) / Math.cos(r0)\n  return Math.asin((A + B * m + C * n) /\n    (Math.sqrt(A * A + B * B + C * C) * Math.sqrt(1 + m * m + n * n)))\n}\n\n/**\n * AngleError returns both an angle as in the function Angle, and an error\n * as in the function Error.\n *\n * The algorithm is by B. Pessens.\n *\n * @returns {Number[]} [ψ, ω]\n *  {Number} ψ - angle between great circles defined by three points.\n *  {Number} ω - error angle of three nearly co-linear points\n */\nfunction angleError (r1, d1, r2, d2, r3, d3) {\n  const [sr1, cr1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r1)\n  const [c1, cd1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d1)\n  const [sr2, cr2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r2)\n  const [c2, cd2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d2)\n  const [sr3, cr3] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(r3)\n  const [c3, cd3] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d3)\n  const a1 = cd1 * cr1\n  const a2 = cd2 * cr2\n  const a3 = cd3 * cr3\n  const b1 = cd1 * sr1\n  const b2 = cd2 * sr2\n  const b3 = cd3 * sr3\n  const l1 = b1 * c2 - b2 * c1\n  const l2 = b2 * c3 - b3 * c2\n  const l3 = b1 * c3 - b3 * c1\n  const m1 = c1 * a2 - c2 * a1\n  const m2 = c2 * a3 - c3 * a2\n  const m3 = c1 * a3 - c3 * a1\n  const n1 = a1 * b2 - a2 * b1\n  const n2 = a2 * b3 - a3 * b2\n  const n3 = a1 * b3 - a3 * b1\n  const ψ = Math.acos((l1 * l2 + m1 * m2 + n1 * n2) /\n    (Math.sqrt(l1 * l1 + m1 * m1 + n1 * n1) * Math.sqrt(l2 * l2 + m2 * m2 + n2 * n2)))\n  const ω = Math.asin((a2 * l3 + b2 * m3 + c2 * n3) /\n    (Math.sqrt(a2 * a2 + b2 * b2 + c2 * c2) * Math.sqrt(l3 * l3 + m3 * m3 + n3 * n3)))\n  return [ψ, ω]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  time,\n  angle,\n  error,\n  angleError\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvbGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUNXOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ08saURBQWlEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxpQkFBaUIsOERBQVc7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwQ0FBMEM7QUFDakQscUJBQXFCLHVEQUFXO0FBQ2hDLHVCQUF1Qix1REFBVztBQUNsQyx1QkFBdUIsdURBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQztBQUNqRCxxQkFBcUIsdURBQVc7QUFDaEMscUJBQXFCLHVEQUFXO0FBQ2hDLHFCQUFxQix1REFBVztBQUNoQyxxQkFBcUIsdURBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkIsS0FBSyxRQUFRO0FBQ2IsS0FBSyxRQUFRO0FBQ2I7QUFDTztBQUNQLHFCQUFxQix1REFBVztBQUNoQyxvQkFBb0IsdURBQVc7QUFDL0IscUJBQXFCLHVEQUFXO0FBQ2hDLG9CQUFvQix1REFBVztBQUMvQixxQkFBcUIsdURBQVc7QUFDaEMsb0JBQW9CLHVEQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9saW5lLmpzPzQxNjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBsaW5lXG4gKi9cbi8qKlxuICogTGluZTogQ2hhcHRlciAxOSwgQm9kaWVzIGluIFN0cmFpZ2h0IExpbmVcbiAqL1xuXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5pbXBvcnQgaW50ZXJwIGZyb20gJy4vaW50ZXJwb2xhdGlvbi5qcydcblxuLyoqXG4gKiBUaW1lIGNvbXB1dGVzIHRoZSB0aW1lIGF0IHdoaWNoIGEgbW92aW5nIGJvZHkgaXMgb24gYSBzdHJhaWdodCBsaW5lIChncmVhdFxuICogY2lyY2xlKSBiZXR3ZWVuIHR3byBmaXhlZCBwb2ludHMsIHN1Y2ggYXMgc3RhcnMuXG4gKlxuICogQ29vcmRpbmF0ZXMgbWF5IGJlIHJpZ2h0IGFzY2Vuc2lvbnMgYW5kIGRlY2xpbmF0aW9ucyBvciBsb25naXR1ZGVzIGFuZFxuICogbGF0aXR1ZGVzLiAgRml4ZWQgcG9pbnRzIGFyZSByMSwgZDEsIHIyLCBkMi4gIE1vdmluZyBib2R5IGlzIGFuIGVwaGVtZXJpc1xuICogb2YgNSByb3dzLCByMywgZDMsIHN0YXJ0aW5nIGF0IHRpbWUgdDEgYW5kIGVuZGluZyBhdCB0aW1lIHQ1LiAgVGltZSBzY2FsZVxuICogaXMgYXJiaXRyYXJ5LlxuICpcbiAqIEB0aHJvd3MgRXJyb3JcbiAqIEBwYXJhbSB7TnVtYmVyfSByMSAtIHJpZ2h0IGFzY2Vuc2lvbiBDb29yZGluYXRlIDFcbiAqIEBwYXJhbSB7TnVtYmVyfSBkMSAtIGRlY2xpbmF0aW9uIENvb3JkaW5hdGUgMVxuICogQHBhcmFtIHtOdW1iZXJ9IHIyIC0gcmlnaHQgYXNjZW5zaW9uIENvb3JkaW5hdGUgMlxuICogQHBhcmFtIHtOdW1iZXJ9IGQyIC0gZGVjbGluYXRpb24gQ29vcmRpbmF0ZSAyXG4gKiBAcGFyYW0ge051bWJlcltdfSByMyAtIHJpZ2h0IGFzY2Vuc2lvbiBDb29yZGluYXRlIDNcbiAqIEBwYXJhbSB7TnVtYmVyW119IGQzIC0gZGVjbGluYXRpb24gQ29vcmRpbmF0ZSAzXG4gKiBAcGFyYW0ge051bWJlcn0gdDEgLSB0aW1lIGluIEp1bGlhbiBEYXlzXG4gKiBAcGFyYW0ge051bWJlcn0gdDUgLSB0aW1lIGluIEp1bGlhbiBEYXlzXG4gKiBAcmV0dXJucyB7TnVtYmVyfSB0aW1lIG9mIGFsaWdubWVudCBpbiBKdWxpYW4gRGF5c1xuICovXG5leHBvcnQgZnVuY3Rpb24gdGltZSAocjEsIGQxLCByMiwgZDIsIHIzLCBkMywgdDEsIHQ1KSB7IC8vIChyMSwgZDEsIHIyLCBkMiBmbG9hdDY0LCByMywgZDMgW11mbG9hdDY0LCB0MSwgdDUgZmxvYXQ2NCkgIChmbG9hdDY0LCBlcnJvcilcbiAgaWYgKHIzLmxlbmd0aCAhPT0gNSB8fCBkMy5sZW5ndGggIT09IDUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3IzLCBkMyBtdXN0IGJlIGxlbmd0aCA1JylcbiAgfVxuICBjb25zdCBnYyA9IG5ldyBBcnJheSg1KVxuICByMy5mb3JFYWNoKChyM2ksIGkpID0+IHtcbiAgICAvLyAoMTkuMSkgcC4gMTIxXG4gICAgZ2NbaV0gPSBNYXRoLnRhbihkMSkgKiBNYXRoLnNpbihyMiAtIHIzaSkgK1xuICAgICAgTWF0aC50YW4oZDIpICogTWF0aC5zaW4ocjNpIC0gcjEpICtcbiAgICAgIE1hdGgudGFuKGQzW2ldKSAqIE1hdGguc2luKHIxIC0gcjIpXG4gIH0pXG4gIGNvbnN0IGw1ID0gbmV3IGludGVycC5MZW41KHQxLCB0NSwgZ2MpXG4gIHJldHVybiBsNS56ZXJvKGZhbHNlKVxufVxuXG4vKipcbiAqIEFuZ2xlIHJldHVybnMgdGhlIGFuZ2xlIGJldHdlZW4gZ3JlYXQgY2lyY2xlcyBkZWZpbmVkIGJ5IHRocmVlIHBvaW50cy5cbiAqXG4gKiBDb29yZGluYXRlcyBtYXkgYmUgcmlnaHQgYXNjZW5zaW9ucyBhbmQgZGVjbGluYXRpb25zIG9yIGxvbmdpdHVkZXMgYW5kXG4gKiBsYXRpdHVkZXMuICBJZiByMSwgZDEsIHIyLCBkMiBkZWZpbmVzIG9uZSBsaW5lIGFuZCByMiwgZDIsIHIzLCBkMyBkZWZpbmVzXG4gKiBhbm90aGVyLCB0aGUgcmVzdWx0IGlzIHRoZSBhbmdsZSBiZXR3ZWVuIHRoZSB0d28gbGluZXMuXG4gKlxuICogQWxnb3JpdGhtIGJ5IE1lZXVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYW5nbGUgKHIxLCBkMSwgcjIsIGQyLCByMywgZDMpIHsgLy8gKHIxLCBkMSwgcjIsIGQyLCByMywgZDMgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgW3NkMiwgY2QyXSA9IGJhc2Uuc2luY29zKGQyKVxuICBjb25zdCBbc3IyMSwgY3IyMV0gPSBiYXNlLnNpbmNvcyhyMiAtIHIxKVxuICBjb25zdCBbc3IzMiwgY3IzMl0gPSBiYXNlLnNpbmNvcyhyMyAtIHIyKVxuICBjb25zdCBDMSA9IE1hdGguYXRhbjIoc3IyMSwgY2QyICogTWF0aC50YW4oZDEpIC0gc2QyICogY3IyMSlcbiAgY29uc3QgQzIgPSBNYXRoLmF0YW4yKHNyMzIsIGNkMiAqIE1hdGgudGFuKGQzKSAtIHNkMiAqIGNyMzIpXG4gIHJldHVybiBDMSArIEMyXG59XG5cbi8qKlxuICogRXJyb3IgcmV0dXJucyBhbiBlcnJvciBhbmdsZSBvZiB0aHJlZSBuZWFybHkgY28tbGluZWFyIHBvaW50cy5cbiAqXG4gKiBGb3IgdGhlIGxpbmUgZGVmaW5lZCBieSByMSwgZDEsIHIyLCBkMiwgdGhlIHJlc3VsdCBpcyB0aGUgYW5nbHVsYXIgZGlzdGFuY2VcbiAqIGJldHdlZW4gdGhhdCBsaW5lIGFuZCByMCwgZDAuXG4gKlxuICogQWxnb3JpdGhtIGJ5IE1lZXVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXJyb3IgKHIxLCBkMSwgcjIsIGQyLCByMCwgZDApIHsgLy8gKHIxLCBkMSwgcjIsIGQyLCByMCwgZDAgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgW3NyMSwgY3IxXSA9IGJhc2Uuc2luY29zKHIxKVxuICBjb25zdCBbc2QxLCBjZDFdID0gYmFzZS5zaW5jb3MoZDEpXG4gIGNvbnN0IFtzcjIsIGNyMl0gPSBiYXNlLnNpbmNvcyhyMilcbiAgY29uc3QgW3NkMiwgY2QyXSA9IGJhc2Uuc2luY29zKGQyKVxuICBjb25zdCBYMSA9IGNkMSAqIGNyMVxuICBjb25zdCBYMiA9IGNkMiAqIGNyMlxuICBjb25zdCBZMSA9IGNkMSAqIHNyMVxuICBjb25zdCBZMiA9IGNkMiAqIHNyMlxuICBjb25zdCBaMSA9IHNkMVxuICBjb25zdCBaMiA9IHNkMlxuICBjb25zdCBBID0gWTEgKiBaMiAtIFoxICogWTJcbiAgY29uc3QgQiA9IFoxICogWDIgLSBYMSAqIFoyXG4gIGNvbnN0IEMgPSBYMSAqIFkyIC0gWTEgKiBYMlxuICBjb25zdCBtID0gTWF0aC50YW4ocjApXG4gIGNvbnN0IG4gPSBNYXRoLnRhbihkMCkgLyBNYXRoLmNvcyhyMClcbiAgcmV0dXJuIE1hdGguYXNpbigoQSArIEIgKiBtICsgQyAqIG4pIC9cbiAgICAoTWF0aC5zcXJ0KEEgKiBBICsgQiAqIEIgKyBDICogQykgKiBNYXRoLnNxcnQoMSArIG0gKiBtICsgbiAqIG4pKSlcbn1cblxuLyoqXG4gKiBBbmdsZUVycm9yIHJldHVybnMgYm90aCBhbiBhbmdsZSBhcyBpbiB0aGUgZnVuY3Rpb24gQW5nbGUsIGFuZCBhbiBlcnJvclxuICogYXMgaW4gdGhlIGZ1bmN0aW9uIEVycm9yLlxuICpcbiAqIFRoZSBhbGdvcml0aG0gaXMgYnkgQi4gUGVzc2Vucy5cbiAqXG4gKiBAcmV0dXJucyB7TnVtYmVyW119IFvPiCwgz4ldXG4gKiAge051bWJlcn0gz4ggLSBhbmdsZSBiZXR3ZWVuIGdyZWF0IGNpcmNsZXMgZGVmaW5lZCBieSB0aHJlZSBwb2ludHMuXG4gKiAge051bWJlcn0gz4kgLSBlcnJvciBhbmdsZSBvZiB0aHJlZSBuZWFybHkgY28tbGluZWFyIHBvaW50c1xuICovXG5leHBvcnQgZnVuY3Rpb24gYW5nbGVFcnJvciAocjEsIGQxLCByMiwgZDIsIHIzLCBkMykge1xuICBjb25zdCBbc3IxLCBjcjFdID0gYmFzZS5zaW5jb3MocjEpXG4gIGNvbnN0IFtjMSwgY2QxXSA9IGJhc2Uuc2luY29zKGQxKVxuICBjb25zdCBbc3IyLCBjcjJdID0gYmFzZS5zaW5jb3MocjIpXG4gIGNvbnN0IFtjMiwgY2QyXSA9IGJhc2Uuc2luY29zKGQyKVxuICBjb25zdCBbc3IzLCBjcjNdID0gYmFzZS5zaW5jb3MocjMpXG4gIGNvbnN0IFtjMywgY2QzXSA9IGJhc2Uuc2luY29zKGQzKVxuICBjb25zdCBhMSA9IGNkMSAqIGNyMVxuICBjb25zdCBhMiA9IGNkMiAqIGNyMlxuICBjb25zdCBhMyA9IGNkMyAqIGNyM1xuICBjb25zdCBiMSA9IGNkMSAqIHNyMVxuICBjb25zdCBiMiA9IGNkMiAqIHNyMlxuICBjb25zdCBiMyA9IGNkMyAqIHNyM1xuICBjb25zdCBsMSA9IGIxICogYzIgLSBiMiAqIGMxXG4gIGNvbnN0IGwyID0gYjIgKiBjMyAtIGIzICogYzJcbiAgY29uc3QgbDMgPSBiMSAqIGMzIC0gYjMgKiBjMVxuICBjb25zdCBtMSA9IGMxICogYTIgLSBjMiAqIGExXG4gIGNvbnN0IG0yID0gYzIgKiBhMyAtIGMzICogYTJcbiAgY29uc3QgbTMgPSBjMSAqIGEzIC0gYzMgKiBhMVxuICBjb25zdCBuMSA9IGExICogYjIgLSBhMiAqIGIxXG4gIGNvbnN0IG4yID0gYTIgKiBiMyAtIGEzICogYjJcbiAgY29uc3QgbjMgPSBhMSAqIGIzIC0gYTMgKiBiMVxuICBjb25zdCDPiCA9IE1hdGguYWNvcygobDEgKiBsMiArIG0xICogbTIgKyBuMSAqIG4yKSAvXG4gICAgKE1hdGguc3FydChsMSAqIGwxICsgbTEgKiBtMSArIG4xICogbjEpICogTWF0aC5zcXJ0KGwyICogbDIgKyBtMiAqIG0yICsgbjIgKiBuMikpKVxuICBjb25zdCDPiSA9IE1hdGguYXNpbigoYTIgKiBsMyArIGIyICogbTMgKyBjMiAqIG4zKSAvXG4gICAgKE1hdGguc3FydChhMiAqIGEyICsgYjIgKiBiMiArIGMyICogYzIpICogTWF0aC5zcXJ0KGwzICogbDMgKyBtMyAqIG0zICsgbjMgKiBuMykpKVxuICByZXR1cm4gW8+ILCDPiV1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aW1lLFxuICBhbmdsZSxcbiAgZXJyb3IsXG4gIGFuZ2xlRXJyb3Jcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/line.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/mars.js":
/*!*********************************************!*\
  !*** ./node_modules/astronomia/src/mars.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   physical: () => (/* binding */ physical)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _illum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./illum.js */ \"./node_modules/astronomia/src/illum.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module mars\n */\n/**\n * Mars: Chapter 42, Ephemeris for Physical Observations of Mars.\n */\n\n\n\n\n\n // eslint-disable-line no-unused-vars\n\n/**\n * Physical computes quantities for physical observations of Mars.\n *\n * Results:\n *  DE  planetocentric declination of the Earth.\n *  DS  planetocentric declination of the Sun.\n *  ω   Areographic longitude of the central meridian, as seen from Earth.\n *  P   Geocentric position angle of Mars' northern rotation pole.\n *  Q   Position angle of greatest defect of illumination.\n *  d   Apparent diameter of Mars.\n *  k   Illuminated fraction of the disk.\n *  q   Greatest defect of illumination.\n *\n * All angular results (all results except k) are in radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @param {Planet} earth\n * @param {Planet} mars\n */\nfunction physical (jde, earth, mars) { // (jde float64, earth, mars *pp.V87Planet)  (DE, DS, ω, P, Q, d, k, q float64)\n  // Step 1.0\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const p = Math.PI / 180\n  // (42.1) p. 288\n  let λ0 = 352.9065 * p + 1.1733 * p * T\n  const β0 = 63.2818 * p - 0.00394 * p * T\n  // Step 2.0\n  const earthPos = earth.position(jde)\n  const R = earthPos.range\n  const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toFK5(earthPos.lon, earthPos.lat, jde)\n  const [l0, b0] = [fk5.lon, fk5.lat]\n  // Steps 3, 4.0\n  const [sl0, cl0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l0)\n  const sb0 = Math.sin(b0)\n  let Δ = 0.5 // surely better than 0.0\n  let τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n  let l = 0\n  let b = 0\n  let r = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\n  function f () {\n    const marsPos = mars.position(jde - τ)\n    r = marsPos.range\n    const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toFK5(marsPos.lon, marsPos.lat, jde)\n    l = fk5.lon\n    b = fk5.lat\n    const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(b)\n    const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l)\n    // (42.2) p. 289\n    x = r * cb * cl - R * cl0\n    y = r * cb * sl - R * sl0\n    z = r * sb - R * sb0\n    // (42.3) p. 289\n    Δ = Math.sqrt(x * x + y * y + z * z)\n    τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n  }\n\n  f()\n  f()\n  // Step 5.0\n  let λ = Math.atan2(y, x)\n  let β = Math.atan(z / Math.hypot(x, y))\n  // Step 6.0\n  const [sβ0, cβ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β0)\n  const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β)\n  const DE = Math.asin(-sβ0 * sβ - cβ0 * cβ * Math.cos(λ0 - λ))\n  // Step 7.0\n  const N = 49.5581 * p + 0.7721 * p * T\n  const lʹ = l - 0.00697 * p / r\n  const bʹ = b - 0.000225 * p * Math.cos(l - N) / r\n  // Step 8.0\n  const [sbʹ, cbʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(bʹ)\n  const DS = Math.asin(-sβ0 * sbʹ - cβ0 * cbʹ * Math.cos(λ0 - lʹ))\n  // Step 9.0\n  const W = 11.504 * p + 350.89200025 * p * (jde - τ - 2433282.5)\n  // Step 10.0\n  const ε0 = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanObliquity(jde)\n  const [sε0, cε0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε0)\n  let eq = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ0, β0).toEquatorial(ε0)\n  const [α0, δ0] = [eq.ra, eq.dec]\n  // Step 11.0\n  const u = y * cε0 - z * sε0\n  const v = y * sε0 + z * cε0\n  const α = Math.atan2(u, x)\n  const δ = Math.atan(v / Math.hypot(x, u))\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const [sδ0, cδ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ0)\n  const [sα0α, cα0α] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α0 - α)\n  const ζ = Math.atan2(sδ0 * cδ * cα0α - sδ * cδ0, cδ * sα0α)\n  // Step 12.0\n  const ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(W - ζ, 2 * Math.PI)\n  // Step 13.0\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].nutation(jde)\n  // Step 14.0\n  const [sl0λ, cl0λ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l0 - λ)\n  λ += 0.005693 * p * cl0λ / cβ\n  β += 0.005693 * p * sl0λ * sβ\n  // Step 15.0\n  λ0 += Δψ\n  λ += Δψ\n  const ε = ε0 + Δε\n  // Step 16.0\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  eq = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ0, β0).toEquatorial(ε)\n  const [α0ʹ, δ0ʹ] = [eq.ra, eq.dec]\n  eq = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ, β).toEquatorial(ε)\n  const [αʹ, δʹ] = [eq.ra, eq.dec]\n  // Step 17.0\n  const [sδ0ʹ, cδ0ʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ0ʹ)\n  const [sδʹ, cδʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δʹ)\n  const [sα0ʹαʹ, cα0ʹαʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α0ʹ - αʹ)\n  // (42.4) p. 290\n  let P = Math.atan2(cδ0ʹ * sα0ʹαʹ, sδ0ʹ * cδʹ - cδ0ʹ * sδʹ * cα0ʹαʹ)\n  if (P < 0) {\n    P += 2 * Math.PI\n  }\n  // Step 18.0\n  const s = l0 + Math.PI\n  const [ss, cs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(s)\n  const αs = Math.atan2(cε * ss, cs)\n  const δs = Math.asin(sε * ss)\n  const [sδs, cδs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δs)\n  const [sαsα, cαsα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(αs - α)\n  const χ = Math.atan2(cδs * sαsα, sδs * cδ - cδs * sδ * cαsα)\n  const Q = χ + Math.PI\n  // Step 19.0\n  const d = 9.36 / 60 / 60 * Math.PI / 180 / Δ\n  const k = _illum_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fraction(r, Δ, R)\n  const q = (1 - k) * d\n  return [DE, DS, ω, P, Q, d, k, q]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  physical\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/mars.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/moon.js":
/*!*********************************************!*\
  !*** ./node_modules/astronomia/src/moon.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Moon: () => (/* binding */ Moon),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   physical: () => (/* binding */ physical),\n/* harmony export */   selenographic: () => (/* binding */ selenographic),\n/* harmony export */   sunAltitude: () => (/* binding */ sunAltitude),\n/* harmony export */   sunrise: () => (/* binding */ sunrise),\n/* harmony export */   sunset: () => (/* binding */ sunset)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _moonposition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./moonposition.js */ \"./node_modules/astronomia/src/moonposition.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module moon\n */\n/**\n * Moon: Chapter 53, Ephemeris for Physical Observations of the Moon.\n *\n * Incomplete.  Topocentric functions are commented out for lack of test data.\n */\n\n// eslint-disable-line no-unused-vars\n\n\n\n\n // eslint-disable-line no-unused-vars\n\nconst { sin, cos, asin, atan2 } = Math\nconst D2R = Math.PI / 180\nconst _I = 1.54242 * D2R // IAU value of inclination of mean lunar equator\n\nconst [sI, cI] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(_I)\n\n/**\n * Physical returns quantities useful for physical observation of the Moon.\n *\n * Returned l, b are librations in selenographic longitude and latitude.\n * They represent combined optical and physical librations.  Topocentric\n * librations are not considered.\n *\n * Returned P is the the position angle of the Moon's axis of rotation.\n *\n * Returned l0, b0 are the selenographic coordinates of the Sun.\n *\n * Returned values all in radians.\n\n * @param {number} jde - Julian ephemeris day\n * @param {Planet} earth - VSOP87 Planet Earth\n * @return {Array}\n *    {base.Coord} cMoon - selenographic longitude, latitude of the Moon\n *    {number} P - position angle of the Moon's axis of rotation\n *    {base.Coord} cSun - selenographic longitude, latitude of the Sun.\n */\nfunction physical (jde, earth) {\n  const { lon, lat, range } = _moonposition_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].position(jde) // (λ without nutation)\n  // [λ, β, Δ]\n  const m = new Moon(jde)\n  const [l, b] = m.lib(lon, lat)\n  const P = m.pa(lon, lat, b)\n  const [l0, b0] = m.sun(lon, lat, range, earth)\n  const cMoon = new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(l, b)\n  const cSun = new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(l0, b0)\n  return [cMoon, P, cSun]\n}\n\n/**\n * Quantities computed for a jde and used in computing return values of\n * physical().  Computations are broken into several methods to organize\n * the code.\n */\nclass Moon {\n  constructor (jde) {\n    this.jde = jde\n    // Δψ, F, Ω, p. 372.0\n    const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].nutation(jde)\n    this.Δψ = Δψ\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    const F = this.F = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 93.272095 * D2R, 483202.0175233 * D2R, -0.0036539 * D2R, -D2R / 3526000, D2R / 863310000)\n    this.Ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 125.0445479 * D2R, -1934.1362891 * D2R, 0.0020754 * D2R,\n      D2R / 467441, -D2R / 60616000)\n    // true ecliptic\n    this.ε = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanObliquity(jde) + Δε\n    this.sε = sin(this.ε)\n    this.cε = cos(this.ε)\n    // ρ, σ, τ, p. 372,373\n    const D = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 297.8501921 * D2R, 445267.1114034 * D2R, -0.0018819 * D2R, D2R / 545868, -D2R / 113065000)\n    const M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 357.5291092 * D2R, 35999.0502909 * D2R, -0.0001536 * D2R, D2R / 24490000)\n    const M_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 134.9633964 * D2R, 477198.8675055 * D2R,\n      0.0087414 * D2R, D2R / 69699, -D2R / 14712000)\n    const E = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1, -0.002516, -0.0000074)\n    const K1 = 119.75 * D2R + 131.849 * D2R * T\n    const K2 = 72.56 * D2R + 20.186 * D2R * T\n    this.ρ = -0.02752 * D2R * cos(M_) +\n      -0.02245 * D2R * sin(F) +\n      0.00684 * D2R * cos(M_ - 2 * F) +\n      -0.00293 * D2R * cos(2 * F) +\n      -0.00085 * D2R * cos(2 * (F - D)) +\n      -0.00054 * D2R * cos(M_ - 2 * D) +\n      -0.0002 * D2R * sin(M_ + F) +\n      -0.0002 * D2R * cos(M_ + 2 * F) +\n      -0.0002 * D2R * cos(M_ - F) +\n      0.00014 * D2R * cos(M_ + 2 * (F - D))\n    this.σ = -0.02816 * D2R * sin(M_) +\n      0.02244 * D2R * cos(F) +\n      -0.00682 * D2R * sin(M_ - 2 * F) +\n      -0.00279 * D2R * sin(2 * F) +\n      -0.00083 * D2R * sin(2 * (F - D)) +\n      0.00069 * D2R * sin(M_ - 2 * D) +\n      0.0004 * D2R * cos(M_ + F) +\n      -0.00025 * D2R * sin(2 * M_) +\n      -0.00023 * D2R * sin(M_ + 2 * F) +\n      0.0002 * D2R * cos(M_ - F) +\n      0.00019 * D2R * sin(M_ - F) +\n      0.00013 * D2R * sin(M_ + 2 * (F - D)) +\n      -0.0001 * D2R * cos(M_ - 3 * F)\n    this.τ = 0.0252 * D2R * sin(M) * E +\n      0.00473 * D2R * sin(2 * (M_ - F)) +\n      -0.00467 * D2R * sin(M_) +\n      0.00396 * D2R * sin(K1) +\n      0.00276 * D2R * sin(2 * (M_ - D)) +\n      0.00196 * D2R * sin(this.Ω) +\n      -0.00183 * D2R * cos(M_ - F) +\n      0.00115 * D2R * sin(M_ - 2 * D) +\n      -0.00096 * D2R * sin(M_ - D) +\n      0.00046 * D2R * sin(2 * (F - D)) +\n      -0.00039 * D2R * sin(M_ - F) +\n      -0.00032 * D2R * sin(M_ - M - D) +\n      0.00027 * D2R * sin(2 * (M_ - D) - M) +\n      0.00023 * D2R * sin(K2) +\n      -0.00014 * D2R * sin(2 * D) +\n      0.00014 * D2R * cos(2 * (M_ - F)) +\n      -0.00012 * D2R * sin(M_ - 2 * F) +\n      -0.00012 * D2R * sin(2 * M_) +\n      0.00011 * D2R * sin(2 * (M_ - M - D))\n  }\n\n  /**\n   * lib() curiously serves for computing both librations and solar coordinates,\n   * depending on the coordinates λ, β passed in.  Quantity A not described in\n   * the book, but clearly depends on the λ, β of the current context and so\n   * does not belong in the moon struct.  Instead just return it from optical\n   * and pass it along to physical.\n   */\n  lib (λ, β) {\n    const [l_, b_, A] = this.optical(λ, β)\n    const [l$, b$] = this.physical(A, b_)\n    let l = l_ + l$\n    if (l > Math.PI) {\n      l -= 2 * Math.PI\n    }\n    const b = b_ + b$\n    return [l, b]\n  }\n\n  optical (λ, β) {\n    // (53.1) p. 372\n    const W = λ - this.Ω // (λ without nutation)\n    const [sW, cW] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(W)\n    const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β)\n    const A = atan2(sW * cβ * cI - sβ * sI, cW * cβ)\n    const l_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(A - this.F, 2 * Math.PI)\n    const b_ = asin(-sW * cβ * sI - sβ * cI)\n    return [l_, b_, A]\n  }\n\n  physical (A, b_) {\n    // (53.2) p. 373\n    const [sA, cA] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(A)\n    const l$ = -this.τ + (this.ρ * cA + this.σ * sA) * Math.tan(b_)\n    const b$ = this.σ * cA - this.ρ * sA\n    return [l$, b$]\n  }\n\n  pa (λ, β, b) {\n    const V = this.Ω + this.Δψ + this.σ / sI\n    const [sV, cV] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(V)\n    const [sIρ, cIρ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(_I + this.ρ)\n    const X = sIρ * sV\n    const Y = sIρ * cV * this.cε - cIρ * this.sε\n    const ω = Math.atan2(X, Y)\n    const ecl = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ + this.Δψ, β).toEquatorial(this.ε) // eslint-disable-line no-unused-vars\n    let P = asin(Math.hypot(X, Y) * cos(ecl.ra - ω) / cos(b))\n    if (P < 0) {\n      P += 2 * Math.PI\n    }\n    return P\n  }\n\n  sun (λ, β, Δ, earth) {\n    const { lon, lat, range } = _solar_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].apparentVSOP87(earth, this.jde) // eslint-disable-line no-unused-vars\n    const ΔR = Δ / (range * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AU)\n    const λH = lon + Math.PI + 57.296 * D2R * ΔR * cos(β) * sin(lon - λ)\n    const βH = ΔR * β\n    return this.lib(λH, βH)\n  }\n}\n\n/* commented out for lack of test data\nexport function Topocentric (jde, ρsφ_, ρcφ_, L) { // (jde, ρsφ_, ρcφ_, L float64)  (l, b, P float64)\n  λ, β, Δ := moonposition.Position(jde) // (λ without nutation)\n  Δψ, Δε := nutation.Nutation(jde)\n  sε, cε := base.sincos(nutation.MeanObliquity(jde) + Δε)\n  α, δ := coord.EclToEq(λ+Δψ, β, sε, cε)\n  α, δ = parallax.Topocentric(α, δ, Δ/base.AU, ρsφ_, ρcφ_, L, jde)\n  λ, β = coord.EqToEcl(α, δ, sε, cε)\n  const m = newMoon(jde)\n  l, b = m.lib(λ, β)\n  P = m.pa(λ, β, b)\n  return\n}\n\nexport function TopocentricCorrections (jde, b, P, φ, δ, H, π) { // (jde, b, P, φ, δ, H, π float64)  (Δl, Δb, ΔP float64)\n  sφ, cφ := base.sincos(φ)\n  sH, cH := base.sincos(H)\n  sδ, cδ := base.sincos(δ)\n  const Q = Math.atan(cφ * sH / (cδ*sφ - sδ*cφ*cH))\n  const z = Math.acos(sδ*sφ + cδ*cφ*cH)\n  const π_ = π * (sin(z) + 0.0084*sin(2*z))\n  sQP, cQP := base.sincos(Q - P)\n  Δl = -π_ * sQP / cos(b)\n  Δb = π_ * cQP\n  ΔP = Δl*sin(b+Δb) - π_*sin(Q)*Math.tan(δ)\n  return\n}\n*/\n\n/**\n * SunAltitude returns altitude of the Sun above the lunar horizon.\n *\n * @param {Coord} cOnMoon - selenographic longitude and latitude of a site on the Moon\n * @param {Coord} cSun - selenographic coordinates of the Sun (as returned by physical(), for example.)\n * @return altitude in radians.\n */\nfunction sunAltitude (cOnMoon, cSun) { // (η, θ, l0, b0 float64)  float64\n  const c0 = Math.PI / 2 - cSun.lon\n  const [sb0, cb0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(cSun.lat)\n  const [sθ, cθ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(cOnMoon.lat)\n  return asin(sb0 * sθ + cb0 * cθ * sin(c0 + cOnMoon.lon))\n}\n\n/**\n * Sunrise returns time of sunrise for a point on the Moon near the given date.\n *\n * @param {Coord} cOnMoon - selenographic longitude and latitude of a site on the Moon\n * @param {Number} jde - Julian ephemeris day\n * @param {Planet} earth - VSOP87 Planet Earth\n * @return time of sunrise as a jde nearest the given jde.\n */\nfunction sunrise (cOnMoon, jde, earth) { // (η, θ, jde float64, earth *pp.V87Planet)  float64\n  jde -= srCorr(cOnMoon, jde, earth)\n  return jde - srCorr(cOnMoon, jde, earth)\n}\n\n/**\n * Sunset returns time of sunset for a point on the Moon near the given date.\n *\n * @param {Coord} cOnMoon - selenographic longitude and latitude of a site on the Moon\n * @param {Number} jde - Julian ephemeris day\n * @param {Planet} earth - VSOP87 Planet Earth\n * @return time of sunset as a jde nearest the given jde.\n */\nfunction sunset (cOnMoon, jde, earth) { // (η, θ, jde float64, earth *pp.V87Planet)  float64\n  jde += srCorr(cOnMoon, jde, earth)\n  return jde + srCorr(cOnMoon, jde, earth)\n}\n\n/**\n * @private\n */\nfunction srCorr (cOnMoon, jde, earth) {\n  const phy = physical(jde, earth)\n  const h = sunAltitude(cOnMoon, phy[2])\n  return h / (12.19075 * D2R * cos(cOnMoon.lat))\n}\n\nconst lunarCoord = (η, θ) => new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(η * D2R, θ * D2R)\n/**\n * selenographic coordinates of some lunar features\n * Table 53.A\n */\nconst selenographic = {\n  archimedes: lunarCoord(-3.9, 29.7),\n  aristarchus: lunarCoord(-47.5, 23.7),\n  aristillus: lunarCoord(1.2, 33.9),\n  aristoteles: lunarCoord(17.3, 50.1),\n  arzachel: lunarCoord(-1.9, -17.7),\n  autolycus: lunarCoord(1.5, 30.7),\n  billy: lunarCoord(-50, -13.8),\n  birt: lunarCoord(-8.5, -22.3),\n  campanus: lunarCoord(-27.7, -28),\n  censorinus: lunarCoord(32.7, -0.4),\n  clavius: lunarCoord(-14, -58),\n  copernicus: lunarCoord(-20, 9.7),\n  delambre: lunarCoord(17.5, -1.9),\n  dionysius: lunarCoord(17.3, 2.8),\n  endymion: lunarCoord(56.4, 53.6),\n  eratosthenes: lunarCoord(-11.3, 14.5),\n  eudoxus: lunarCoord(16.3, 44.3),\n  fracastorius: lunarCoord(33.2, -21),\n  fraMauro: lunarCoord(-17, -6),\n  gassendi: lunarCoord(-39.9, -17.5),\n  goclenius: lunarCoord(45, -10.1),\n  grimaldi: lunarCoord(-68.5, -5.8),\n  harpalus: lunarCoord(-43.4, 52.6),\n  horrocks: lunarCoord(5.9, -4),\n  kepler: lunarCoord(-38, 8.1),\n  langrenus: lunarCoord(60.9, -8.9),\n  lansberg: lunarCoord(-26.6, -0.3),\n  letronne: lunarCoord(-43, -10),\n  macrobius: lunarCoord(46, 21.2),\n  manilius: lunarCoord(9.1, 14.5),\n  menelaus: lunarCoord(16, 16.3),\n  messier: lunarCoord(47.6, -1.9),\n  petavius: lunarCoord(61, -25),\n  pico: lunarCoord(-8.8, 45.8),\n  pitatus: lunarCoord(-13.5, -29.8),\n  piton: lunarCoord(-0.8, 40.8),\n  plato: lunarCoord(-9.2, 51.4),\n  plinius: lunarCoord(23.6, 15.3),\n  posidonius: lunarCoord(30, 31.9),\n  proclus: lunarCoord(46.9, 16.1),\n  ptolemeusA: lunarCoord(-0.8, -8.5),\n  pytheas: lunarCoord(-20.6, 20.5),\n  reinhold: lunarCoord(-22.8, 3.2),\n  riccioli: lunarCoord(-74.3, -3.2),\n  schickard: lunarCoord(-54.5, -44),\n  schiller: lunarCoord(-39, -52),\n  tauruntius: lunarCoord(46.5, 5.6),\n  theophilus: lunarCoord(26.5, -11.4),\n  timocharis: lunarCoord(-13.1, 26.7),\n  tycho: lunarCoord(-11, -43.2),\n  vitruvius: lunarCoord(31.3, 17.6),\n  walter: lunarCoord(1, -33)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  physical,\n  Moon,\n  // Topocentric,\n  // TopocentricCorrections,\n  sunAltitude,\n  sunrise,\n  sunset,\n  selenographic\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/moon.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/moonillum.js":
/*!**************************************************!*\
  !*** ./node_modules/astronomia/src/moonillum.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   phaseAngle3: () => (/* binding */ phaseAngle3),\n/* harmony export */   phaseAngleEcliptic: () => (/* binding */ phaseAngleEcliptic),\n/* harmony export */   phaseAngleEcliptic2: () => (/* binding */ phaseAngleEcliptic2),\n/* harmony export */   phaseAngleEquatorial: () => (/* binding */ phaseAngleEquatorial),\n/* harmony export */   phaseAngleEquatorial2: () => (/* binding */ phaseAngleEquatorial2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module moonillum\n */\n/**\n * Moonillum: Chapter 48, Illuminated Fraction of the Moon's Disk\n *\n * Also see functions `illuminated` and `limb` in package base.  The function\n * for computing illuminated fraction given a phase angle (48.1) is\n * base.illuminated.  Formula (48.3) is implemented as base.limb.\n */\n\n // eslint-disable-line no-unused-vars\n\nconst D2R = Math.PI / 180\n\n/**\n * phaseAngleEquatorial computes the phase angle of the Moon given equatorial coordinates.\n *\n * @param {Coord} cMoon - geocentric right ascension,  declination and distance to the Moon\n * @param {Coord} cSun - coordinates and distance of the Sun\n * @returns {number} phase angle of the Moon in radians\n */\nfunction phaseAngleEquatorial (cMoon, cSun) {\n  return pa(cMoon.range, cSun.range, cosEq(cMoon.ra, cMoon.dec, cSun.ra, cSun.dec))\n}\n\n/**\n * cos elongation from equatorial coordinates\n * @private\n */\nfunction cosEq (α, δ, α0, δ0) {\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const [sδ0, cδ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ0)\n  return sδ0 * sδ + cδ0 * cδ * Math.cos(α0 - α)\n}\n\n/**\n * phase angle from cos elongation and distances\n * @private\n * @param {number} Δ\n * @param {number} R\n * @param {number} cψ\n * @returns {number}\n */\nfunction pa (Δ, R, cψ) {\n  const sψ = Math.sin(Math.acos(cψ))\n  let i = Math.atan(R * sψ / (Δ - R * cψ))\n  if (i < 0) {\n    i += Math.PI\n  }\n  return i\n}\n\n/**\n * phaseAngleEquatorial2 computes the phase angle of the Moon given equatorial coordinates.\n *\n * Less accurate than phaseAngleEquatorial.\n *\n * Arguments α, δ are geocentric right ascension and declination of the Moon;\n * α0, δ0  are coordinates of the Sun.  Angles must be in radians.\n *\n * @param {Coord} cMoon - eocentric right ascension and declination of the Moon\n * @param {Coord} cSun - coordinates of the Sun\n * @returns {number} phase angle of the Moon in radians\n */\nfunction phaseAngleEquatorial2 (cMoon, cSun) {\n  return Math.acos(-cosEq(cMoon.ra, cMoon.dec, cSun.ra, cSun.dec))\n}\n\n/**\n * phaseAngleEcliptic computes the phase angle of the Moon given ecliptic coordinates.\n *\n * Distances must be in the same units as each other.\n *\n * @param {Coord} cMoon - geocentric longitude, latitude and distance to the Moon\n * @param {Coord} cSun -  longitude and distance to the Sun\n * @returns {number} phase angle of the Moon in radians\n */\nfunction phaseAngleEcliptic (cMoon, cSun) {\n  return pa(cMoon.range, cSun.range, cosEcl(cMoon.lon, cMoon.lat, cSun.lon))\n}\n\n/**\n * cos elongation from ecliptic coordinates\n * @private\n */\nfunction cosEcl (λ, β, λ0) { // (λ, β, λ0 float64)  float64\n  return Math.cos(β) * Math.cos(λ - λ0)\n}\n\n/**\n * phaseAngleEcliptic2 computes the phase angle of the Moon given ecliptic coordinates.\n *\n * Less accurate than phaseAngleEcliptic.\n *\n * Angles must be in radians.\n *\n * @param {Coord} cMoon - geocentric longitude, latitude of the Moon\n * @param {Coord} cSun -  longitude of the Sun\n * @returns {number} phase angle of the Moon in radians\n */\nfunction phaseAngleEcliptic2 (cMoon, cSun) {\n  return Math.acos(-cosEcl(cMoon.lon, cMoon.lat, cSun.lon))\n}\n\n/**\n * phaseAngle3 computes the phase angle of the Moon given a julian day.\n *\n * Less accurate than phaseAngle functions taking coordinates.\n *\n * Result in radians.\n */\nfunction phaseAngle3 (jde) { // (jde float64)  float64\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const D = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 297.8501921 * D2R, 445267.1114034 * D2R,\n    -0.0018819 * D2R, D2R / 545868, -D2R / 113065000)\n  const m = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 357.5291092 * D2R, 35999.0502909 * D2R,\n    -0.0001536 * D2R, D2R / 24490000)\n  const m_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 134.9633964 * D2R, 477198.8675055 * D2R,\n    0.0087414 * D2R, D2R / 69699, -D2R / 14712000)\n  return Math.PI - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(D, 2 * Math.PI) +\n    -6.289 * D2R * Math.sin(m_) +\n    2.1 * D2R * Math.sin(m) +\n    -1.274 * D2R * Math.sin(2 * D - m_) +\n    -0.658 * D2R * Math.sin(2 * D) +\n    -0.214 * D2R * Math.sin(2 * m_) +\n    -0.11 * D2R * Math.sin(D)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  phaseAngleEquatorial,\n  phaseAngleEquatorial2,\n  phaseAngleEcliptic,\n  phaseAngleEcliptic2,\n  phaseAngle3\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvbW9vbmlsbHVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUM7O0FBRXZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsdURBQVc7QUFDOUIscUJBQXFCLHVEQUFXO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZCQUE2QjtBQUNwQyxZQUFZLDZEQUFpQjtBQUM3QixZQUFZLHVEQUFXO0FBQ3ZCO0FBQ0EsWUFBWSx1REFBVztBQUN2QjtBQUNBLGFBQWEsdURBQVc7QUFDeEI7QUFDQSxtQkFBbUIscURBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9tb29uaWxsdW0uanM/ZTQxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIG1vb25pbGx1bVxuICovXG4vKipcbiAqIE1vb25pbGx1bTogQ2hhcHRlciA0OCwgSWxsdW1pbmF0ZWQgRnJhY3Rpb24gb2YgdGhlIE1vb24ncyBEaXNrXG4gKlxuICogQWxzbyBzZWUgZnVuY3Rpb25zIGBpbGx1bWluYXRlZGAgYW5kIGBsaW1iYCBpbiBwYWNrYWdlIGJhc2UuICBUaGUgZnVuY3Rpb25cbiAqIGZvciBjb21wdXRpbmcgaWxsdW1pbmF0ZWQgZnJhY3Rpb24gZ2l2ZW4gYSBwaGFzZSBhbmdsZSAoNDguMSkgaXNcbiAqIGJhc2UuaWxsdW1pbmF0ZWQuICBGb3JtdWxhICg0OC4zKSBpcyBpbXBsZW1lbnRlZCBhcyBiYXNlLmxpbWIuXG4gKi9cblxuaW1wb3J0IGJhc2UsIHsgQ29vcmQgfSBmcm9tICcuL2Jhc2UuanMnIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuY29uc3QgRDJSID0gTWF0aC5QSSAvIDE4MFxuXG4vKipcbiAqIHBoYXNlQW5nbGVFcXVhdG9yaWFsIGNvbXB1dGVzIHRoZSBwaGFzZSBhbmdsZSBvZiB0aGUgTW9vbiBnaXZlbiBlcXVhdG9yaWFsIGNvb3JkaW5hdGVzLlxuICpcbiAqIEBwYXJhbSB7Q29vcmR9IGNNb29uIC0gZ2VvY2VudHJpYyByaWdodCBhc2NlbnNpb24sICBkZWNsaW5hdGlvbiBhbmQgZGlzdGFuY2UgdG8gdGhlIE1vb25cbiAqIEBwYXJhbSB7Q29vcmR9IGNTdW4gLSBjb29yZGluYXRlcyBhbmQgZGlzdGFuY2Ugb2YgdGhlIFN1blxuICogQHJldHVybnMge251bWJlcn0gcGhhc2UgYW5nbGUgb2YgdGhlIE1vb24gaW4gcmFkaWFuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcGhhc2VBbmdsZUVxdWF0b3JpYWwgKGNNb29uLCBjU3VuKSB7XG4gIHJldHVybiBwYShjTW9vbi5yYW5nZSwgY1N1bi5yYW5nZSwgY29zRXEoY01vb24ucmEsIGNNb29uLmRlYywgY1N1bi5yYSwgY1N1bi5kZWMpKVxufVxuXG4vKipcbiAqIGNvcyBlbG9uZ2F0aW9uIGZyb20gZXF1YXRvcmlhbCBjb29yZGluYXRlc1xuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY29zRXEgKM6xLCDOtCwgzrEwLCDOtDApIHtcbiAgY29uc3QgW3POtCwgY860XSA9IGJhc2Uuc2luY29zKM60KVxuICBjb25zdCBbc860MCwgY860MF0gPSBiYXNlLnNpbmNvcyjOtDApXG4gIHJldHVybiBzzrQwICogc860ICsgY860MCAqIGPOtCAqIE1hdGguY29zKM6xMCAtIM6xKVxufVxuXG4vKipcbiAqIHBoYXNlIGFuZ2xlIGZyb20gY29zIGVsb25nYXRpb24gYW5kIGRpc3RhbmNlc1xuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7bnVtYmVyfSDOlFxuICogQHBhcmFtIHtudW1iZXJ9IFJcbiAqIEBwYXJhbSB7bnVtYmVyfSBjz4hcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIHBhICjOlCwgUiwgY8+IKSB7XG4gIGNvbnN0IHPPiCA9IE1hdGguc2luKE1hdGguYWNvcyhjz4gpKVxuICBsZXQgaSA9IE1hdGguYXRhbihSICogc8+IIC8gKM6UIC0gUiAqIGPPiCkpXG4gIGlmIChpIDwgMCkge1xuICAgIGkgKz0gTWF0aC5QSVxuICB9XG4gIHJldHVybiBpXG59XG5cbi8qKlxuICogcGhhc2VBbmdsZUVxdWF0b3JpYWwyIGNvbXB1dGVzIHRoZSBwaGFzZSBhbmdsZSBvZiB0aGUgTW9vbiBnaXZlbiBlcXVhdG9yaWFsIGNvb3JkaW5hdGVzLlxuICpcbiAqIExlc3MgYWNjdXJhdGUgdGhhbiBwaGFzZUFuZ2xlRXF1YXRvcmlhbC5cbiAqXG4gKiBBcmd1bWVudHMgzrEsIM60IGFyZSBnZW9jZW50cmljIHJpZ2h0IGFzY2Vuc2lvbiBhbmQgZGVjbGluYXRpb24gb2YgdGhlIE1vb247XG4gKiDOsTAsIM60MCAgYXJlIGNvb3JkaW5hdGVzIG9mIHRoZSBTdW4uICBBbmdsZXMgbXVzdCBiZSBpbiByYWRpYW5zLlxuICpcbiAqIEBwYXJhbSB7Q29vcmR9IGNNb29uIC0gZW9jZW50cmljIHJpZ2h0IGFzY2Vuc2lvbiBhbmQgZGVjbGluYXRpb24gb2YgdGhlIE1vb25cbiAqIEBwYXJhbSB7Q29vcmR9IGNTdW4gLSBjb29yZGluYXRlcyBvZiB0aGUgU3VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBwaGFzZSBhbmdsZSBvZiB0aGUgTW9vbiBpbiByYWRpYW5zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwaGFzZUFuZ2xlRXF1YXRvcmlhbDIgKGNNb29uLCBjU3VuKSB7XG4gIHJldHVybiBNYXRoLmFjb3MoLWNvc0VxKGNNb29uLnJhLCBjTW9vbi5kZWMsIGNTdW4ucmEsIGNTdW4uZGVjKSlcbn1cblxuLyoqXG4gKiBwaGFzZUFuZ2xlRWNsaXB0aWMgY29tcHV0ZXMgdGhlIHBoYXNlIGFuZ2xlIG9mIHRoZSBNb29uIGdpdmVuIGVjbGlwdGljIGNvb3JkaW5hdGVzLlxuICpcbiAqIERpc3RhbmNlcyBtdXN0IGJlIGluIHRoZSBzYW1lIHVuaXRzIGFzIGVhY2ggb3RoZXIuXG4gKlxuICogQHBhcmFtIHtDb29yZH0gY01vb24gLSBnZW9jZW50cmljIGxvbmdpdHVkZSwgbGF0aXR1ZGUgYW5kIGRpc3RhbmNlIHRvIHRoZSBNb29uXG4gKiBAcGFyYW0ge0Nvb3JkfSBjU3VuIC0gIGxvbmdpdHVkZSBhbmQgZGlzdGFuY2UgdG8gdGhlIFN1blxuICogQHJldHVybnMge251bWJlcn0gcGhhc2UgYW5nbGUgb2YgdGhlIE1vb24gaW4gcmFkaWFuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcGhhc2VBbmdsZUVjbGlwdGljIChjTW9vbiwgY1N1bikge1xuICByZXR1cm4gcGEoY01vb24ucmFuZ2UsIGNTdW4ucmFuZ2UsIGNvc0VjbChjTW9vbi5sb24sIGNNb29uLmxhdCwgY1N1bi5sb24pKVxufVxuXG4vKipcbiAqIGNvcyBlbG9uZ2F0aW9uIGZyb20gZWNsaXB0aWMgY29vcmRpbmF0ZXNcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGNvc0VjbCAozrssIM6yLCDOuzApIHsgLy8gKM67LCDOsiwgzrswIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiBNYXRoLmNvcyjOsikgKiBNYXRoLmNvcyjOuyAtIM67MClcbn1cblxuLyoqXG4gKiBwaGFzZUFuZ2xlRWNsaXB0aWMyIGNvbXB1dGVzIHRoZSBwaGFzZSBhbmdsZSBvZiB0aGUgTW9vbiBnaXZlbiBlY2xpcHRpYyBjb29yZGluYXRlcy5cbiAqXG4gKiBMZXNzIGFjY3VyYXRlIHRoYW4gcGhhc2VBbmdsZUVjbGlwdGljLlxuICpcbiAqIEFuZ2xlcyBtdXN0IGJlIGluIHJhZGlhbnMuXG4gKlxuICogQHBhcmFtIHtDb29yZH0gY01vb24gLSBnZW9jZW50cmljIGxvbmdpdHVkZSwgbGF0aXR1ZGUgb2YgdGhlIE1vb25cbiAqIEBwYXJhbSB7Q29vcmR9IGNTdW4gLSAgbG9uZ2l0dWRlIG9mIHRoZSBTdW5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IHBoYXNlIGFuZ2xlIG9mIHRoZSBNb29uIGluIHJhZGlhbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBoYXNlQW5nbGVFY2xpcHRpYzIgKGNNb29uLCBjU3VuKSB7XG4gIHJldHVybiBNYXRoLmFjb3MoLWNvc0VjbChjTW9vbi5sb24sIGNNb29uLmxhdCwgY1N1bi5sb24pKVxufVxuXG4vKipcbiAqIHBoYXNlQW5nbGUzIGNvbXB1dGVzIHRoZSBwaGFzZSBhbmdsZSBvZiB0aGUgTW9vbiBnaXZlbiBhIGp1bGlhbiBkYXkuXG4gKlxuICogTGVzcyBhY2N1cmF0ZSB0aGFuIHBoYXNlQW5nbGUgZnVuY3Rpb25zIHRha2luZyBjb29yZGluYXRlcy5cbiAqXG4gKiBSZXN1bHQgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBoYXNlQW5nbGUzIChqZGUpIHsgLy8gKGpkZSBmbG9hdDY0KSAgZmxvYXQ2NFxuICBjb25zdCBUID0gYmFzZS5KMjAwMENlbnR1cnkoamRlKVxuICBjb25zdCBEID0gYmFzZS5ob3JuZXIoVCwgMjk3Ljg1MDE5MjEgKiBEMlIsIDQ0NTI2Ny4xMTE0MDM0ICogRDJSLFxuICAgIC0wLjAwMTg4MTkgKiBEMlIsIEQyUiAvIDU0NTg2OCwgLUQyUiAvIDExMzA2NTAwMClcbiAgY29uc3QgbSA9IGJhc2UuaG9ybmVyKFQsIDM1Ny41MjkxMDkyICogRDJSLCAzNTk5OS4wNTAyOTA5ICogRDJSLFxuICAgIC0wLjAwMDE1MzYgKiBEMlIsIEQyUiAvIDI0NDkwMDAwKVxuICBjb25zdCBtXyA9IGJhc2UuaG9ybmVyKFQsIDEzNC45NjMzOTY0ICogRDJSLCA0NzcxOTguODY3NTA1NSAqIEQyUixcbiAgICAwLjAwODc0MTQgKiBEMlIsIEQyUiAvIDY5Njk5LCAtRDJSIC8gMTQ3MTIwMDApXG4gIHJldHVybiBNYXRoLlBJIC0gYmFzZS5wbW9kKEQsIDIgKiBNYXRoLlBJKSArXG4gICAgLTYuMjg5ICogRDJSICogTWF0aC5zaW4obV8pICtcbiAgICAyLjEgKiBEMlIgKiBNYXRoLnNpbihtKSArXG4gICAgLTEuMjc0ICogRDJSICogTWF0aC5zaW4oMiAqIEQgLSBtXykgK1xuICAgIC0wLjY1OCAqIEQyUiAqIE1hdGguc2luKDIgKiBEKSArXG4gICAgLTAuMjE0ICogRDJSICogTWF0aC5zaW4oMiAqIG1fKSArXG4gICAgLTAuMTEgKiBEMlIgKiBNYXRoLnNpbihEKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHBoYXNlQW5nbGVFcXVhdG9yaWFsLFxuICBwaGFzZUFuZ2xlRXF1YXRvcmlhbDIsXG4gIHBoYXNlQW5nbGVFY2xpcHRpYyxcbiAgcGhhc2VBbmdsZUVjbGlwdGljMixcbiAgcGhhc2VBbmdsZTNcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/moonillum.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/moonmaxdec.js":
/*!***************************************************!*\
  !*** ./node_modules/astronomia/src/moonmaxdec.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   north: () => (/* binding */ north),\n/* harmony export */   south: () => (/* binding */ south)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module moonmaxdec\n */\n/**\n * Moonmaxdec: Chapter 52, Maximum Declinations of the Moon\n */\n\n\n\n/**\n * North computes the maximum northern declination of the Moon near a given date.\n *\n * Argument year is a decimal year specifying a date near the event.\n *\n * Returned is the jde of the event nearest the given date and the declination\n * of the Moon at that time.\n */\nfunction north (y) { // (y float64)  (jde, δ float64)\n  return max(y, nc)\n}\n\n/**\n * South computes the maximum southern declination of the Moon near a given date.\n *\n * Argument year is a decimal year specifying a date near the event.\n *\n * Returned is the jde of the event nearest the given date and the declination\n * of the Moon at that time.\n */\nfunction south (y) { // (y float64)  (jde, δ float64)\n  return max(y, sc)\n}\n\nconst p = Math.PI / 180\nconst ck = 1 / 1336.86\n\n/**\n * @private\n */\nfunction max (y, c) { // (y float64, c *mc)  (jde, δ float64)\n  let k = (y - 2000.03) * 13.3686 // (52.1) p. 367\n  k = Math.floor(k + 0.5)\n  const T = k * ck\n  const D = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.D, 333.0705546 * p / ck, -0.0004214 * p, 0.00000011 * p)\n  const m = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.m, 26.9281592 * p / ck, -0.0000355 * p, -0.0000001 * p)\n  const m_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.m_, 356.9562794 * p / ck, 0.0103066 * p, 0.00001251 * p)\n  const f = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.f, 1.4467807 * p / ck, -0.002069 * p, -0.00000215 * p)\n  const E = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1, -0.002516, -0.0000074)\n  const jde = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.JDE, 27.321582247 / ck, 0.000119804, -0.000000141) +\n    c.tc[0] * Math.cos(f) +\n    c.tc[1] * Math.sin(m_) +\n    c.tc[2] * Math.sin(2 * f) +\n    c.tc[3] * Math.sin(2 * D - m_) +\n    c.tc[4] * Math.cos(m_ - f) +\n    c.tc[5] * Math.cos(m_ + f) +\n    c.tc[6] * Math.sin(2 * D) +\n    c.tc[7] * Math.sin(m) * E +\n    c.tc[8] * Math.cos(3 * f) +\n    c.tc[9] * Math.sin(m_ + 2 * f) +\n    c.tc[10] * Math.cos(2 * D - f) +\n    c.tc[11] * Math.cos(2 * D - m_ - f) +\n    c.tc[12] * Math.cos(2 * D - m_ + f) +\n    c.tc[13] * Math.cos(2 * D + f) +\n    c.tc[14] * Math.sin(2 * m_) +\n    c.tc[15] * Math.sin(m_ - 2 * f) +\n    c.tc[16] * Math.cos(2 * m_ - f) +\n    c.tc[17] * Math.sin(m_ + 3 * f) +\n    c.tc[18] * Math.sin(2 * D - m - m_) * E +\n    c.tc[19] * Math.cos(m_ - 2 * f) +\n    c.tc[20] * Math.sin(2 * (D - m_)) +\n    c.tc[21] * Math.sin(f) +\n    c.tc[22] * Math.sin(2 * D + m_) +\n    c.tc[23] * Math.cos(m_ + 2 * f) +\n    c.tc[24] * Math.sin(2 * D - m) * E +\n    c.tc[25] * Math.sin(m_ + f) +\n    c.tc[26] * Math.sin(m - m_) * E +\n    c.tc[27] * Math.sin(m_ - 3 * f) +\n    c.tc[28] * Math.sin(2 * m_ + f) +\n    c.tc[29] * Math.cos(2 * (D - m_) - f) +\n    c.tc[30] * Math.sin(3 * f) +\n    c.tc[31] * Math.cos(m_ + 3 * f) +\n    c.tc[32] * Math.cos(2 * m_) +\n    c.tc[33] * Math.cos(2 * D - m_) +\n    c.tc[34] * Math.cos(2 * D + m_ + f) +\n    c.tc[35] * Math.cos(m_) +\n    c.tc[36] * Math.sin(3 * m_ + f) +\n    c.tc[37] * Math.sin(2 * D - m_ + f) +\n    c.tc[38] * Math.cos(2 * (D - m_)) +\n    c.tc[39] * Math.cos(D + f) +\n    c.tc[40] * Math.sin(m + m_) * E +\n    c.tc[41] * Math.sin(2 * (D - f)) +\n    c.tc[42] * Math.cos(2 * m_ + f) +\n    c.tc[43] * Math.cos(3 * m_ + f)\n  const δ = 23.6961 * p - 0.013004 * p * T +\n    c.dc[0] * Math.sin(f) +\n    c.dc[1] * Math.cos(2 * f) +\n    c.dc[2] * Math.sin(2 * D - f) +\n    c.dc[3] * Math.sin(3 * f) +\n    c.dc[4] * Math.cos(2 * (D - f)) +\n    c.dc[5] * Math.cos(2 * D) +\n    c.dc[6] * Math.sin(m_ - f) +\n    c.dc[7] * Math.sin(m_ + 2 * f) +\n    c.dc[8] * Math.cos(f) +\n    c.dc[9] * Math.sin(2 * D + m - f) * E +\n    c.dc[10] * Math.sin(m_ + 3 * f) +\n    c.dc[11] * Math.sin(D + f) +\n    c.dc[12] * Math.sin(m_ - 2 * f) +\n    c.dc[13] * Math.sin(2 * D - m - f) * E +\n    c.dc[14] * Math.sin(2 * D - m_ - f) +\n    c.dc[15] * Math.cos(m_ + f) +\n    c.dc[16] * Math.cos(m_ + 2 * f) +\n    c.dc[17] * Math.cos(2 * m_ + f) +\n    c.dc[18] * Math.cos(m_ - 3 * f) +\n    c.dc[19] * Math.cos(2 * m_ - f) +\n    c.dc[20] * Math.cos(m_ - 2 * f) +\n    c.dc[21] * Math.sin(2 * m_) +\n    c.dc[22] * Math.sin(3 * m_ + f) +\n    c.dc[23] * Math.cos(2 * D + m - f) * E +\n    c.dc[24] * Math.cos(m_ - f) +\n    c.dc[25] * Math.cos(3 * f) +\n    c.dc[26] * Math.sin(2 * D + f) +\n    c.dc[27] * Math.cos(m_ + 3 * f) +\n    c.dc[28] * Math.cos(D + f) +\n    c.dc[29] * Math.sin(2 * m_ - f) +\n    c.dc[30] * Math.cos(3 * m_ + f) +\n    c.dc[31] * Math.cos(2 * (D + m_) + f) +\n    c.dc[32] * Math.sin(2 * (D - m_) - f) +\n    c.dc[33] * Math.cos(2 * m_) +\n    c.dc[34] * Math.cos(m_) +\n    c.dc[35] * Math.sin(2 * f) +\n    c.dc[36] * Math.sin(m_ + f)\n  return { jde, dec: c.s * δ }\n}\n\n/**\n * north coefficients\n */\nconst nc = {\n  D: 152.2029 * p,\n  m: 14.8591 * p,\n  m_: 4.6881 * p,\n  f: 325.8867 * p,\n  JDE: 2451562.5897,\n  s: 1,\n  tc: [\n    0.8975,\n    -0.4726,\n    -0.1030,\n    -0.0976,\n    -0.0462,\n    -0.0461,\n    -0.0438,\n    0.0162,\n    -0.0157,\n    0.0145,\n    0.0136,\n    -0.0095,\n    -0.0091,\n    -0.0089,\n    0.0075,\n    -0.0068,\n    0.0061,\n    -0.0047,\n    -0.0043,\n    -0.004,\n    -0.0037,\n    0.0031,\n    0.0030,\n    -0.0029,\n    -0.0029,\n    -0.0027,\n    0.0024,\n    -0.0021,\n    0.0019,\n    0.0018,\n    0.0018,\n    0.0017,\n    0.0017,\n    -0.0014,\n    0.0013,\n    0.0013,\n    0.0012,\n    0.0011,\n    -0.0011,\n    0.001,\n    0.001,\n    -0.0009,\n    0.0007,\n    -0.0007\n  ],\n  dc: [\n    5.1093 * p,\n    0.2658 * p,\n    0.1448 * p,\n    -0.0322 * p,\n    0.0133 * p,\n    0.0125 * p,\n    -0.0124 * p,\n    -0.0101 * p,\n    0.0097 * p,\n    -0.0087 * p,\n    0.0074 * p,\n    0.0067 * p,\n    0.0063 * p,\n    0.0060 * p,\n    -0.0057 * p,\n    -0.0056 * p,\n    0.0052 * p,\n    0.0041 * p,\n    -0.004 * p,\n    0.0038 * p,\n    -0.0034 * p,\n    -0.0029 * p,\n    0.0029 * p,\n    -0.0028 * p,\n    -0.0028 * p,\n    -0.0023 * p,\n    -0.0021 * p,\n    0.0019 * p,\n    0.0018 * p,\n    0.0017 * p,\n    0.0015 * p,\n    0.0014 * p,\n    -0.0012 * p,\n    -0.0012 * p,\n    -0.001 * p,\n    -0.001 * p,\n    0.0006 * p\n  ]\n}\n\n/**\n * south coefficients\n */\nconst sc = {\n  D: 345.6676 * p,\n  m: 1.3951 * p,\n  m_: 186.21 * p,\n  f: 145.1633 * p,\n  JDE: 2451548.9289,\n  s: -1,\n  tc: [\n    -0.8975,\n    -0.4726,\n    -0.1030,\n    -0.0976,\n    0.0541,\n    0.0516,\n    -0.0438,\n    0.0112,\n    0.0157,\n    0.0023,\n    -0.0136,\n    0.011,\n    0.0091,\n    0.0089,\n    0.0075,\n    -0.003,\n    -0.0061,\n    -0.0047,\n    -0.0043,\n    0.004,\n    -0.0037,\n    -0.0031,\n    0.0030,\n    0.0029,\n    -0.0029,\n    -0.0027,\n    0.0024,\n    -0.0021,\n    -0.0019,\n    -0.0006,\n    -0.0018,\n    -0.0017,\n    0.0017,\n    0.0014,\n    -0.0013,\n    -0.0013,\n    0.0012,\n    0.0011,\n    0.0011,\n    0.001,\n    0.001,\n    -0.0009,\n    -0.0007,\n    -0.0007\n  ],\n  dc: [\n    -5.1093 * p,\n    0.2658 * p,\n    -0.1448 * p,\n    0.0322 * p,\n    0.0133 * p,\n    0.0125 * p,\n    -0.0015 * p,\n    0.0101 * p,\n    -0.0097 * p,\n    0.0087 * p,\n    0.0074 * p,\n    0.0067 * p,\n    -0.0063 * p,\n    -0.0060 * p,\n    0.0057 * p,\n    -0.0056 * p,\n    -0.0052 * p,\n    -0.0041 * p,\n    -0.004 * p,\n    -0.0038 * p,\n    0.0034 * p,\n    -0.0029 * p,\n    0.0029 * p,\n    0.0028 * p,\n    -0.0028 * p,\n    0.0023 * p,\n    0.0021 * p,\n    0.0019 * p,\n    0.0018 * p,\n    -0.0017 * p,\n    0.0015 * p,\n    0.0014 * p,\n    0.0012 * p,\n    -0.0012 * p,\n    0.001 * p,\n    -0.001 * p,\n    0.0037 * p\n  ]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  north,\n  south\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/moonmaxdec.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/moonnode.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/moonnode.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ascending: () => (/* binding */ ascending),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   descending: () => (/* binding */ descending)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module moonnode\n */\n/**\n * Moonnode: Chapter 51, Passages of the Moon through the Nodes.\n */\n\n\n\n/**\n * Ascending returns the date of passage of the Moon through an ascending node.\n *\n * @param {Number} year - decimal year specifying a date near the event.\n * @returns {Number} jde of the event nearest the given date.\n */\nfunction ascending (year) { // (year float64)  float64\n  return node(year, 0)\n}\n\n/**\n * Descending returns the date of passage of the Moon through a descending node.\n *\n * @param {Number} year - decimal year specifying a date near the event.\n * @returns {Number} jde of the event nearest the given date.\n */\nfunction descending (year) { // (year float64)  float64\n  return node(year, 0.5)\n}\n\n/**\n * @private\n */\nfunction node (y, h) { // (y, h float64)  float64\n  let k = (y - 2000.05) * 13.4223 // (50.1) p. 355\n  k = Math.floor(k - h + 0.5) + h // snap to half orbit\n  const p = Math.PI / 180\n  const ck = 1 / 1342.23\n  const T = k * ck\n  const D = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 183.638 * p, 331.73735682 * p / ck,\n    0.0014852 * p, 0.00000209 * p, -0.00000001 * p)\n  const M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 17.4006 * p, 26.8203725 * p / ck,\n    0.0001186 * p, 0.00000006 * p)\n  const m_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 38.3776 * p, 355.52747313 * p / ck,\n    0.0123499 * p, 0.000014627 * p, -0.000000069 * p)\n  const Ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 123.9767 * p, -1.44098956 * p / ck,\n    0.0020608 * p, 0.00000214 * p, -0.000000016 * p)\n  const V = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 299.75 * p, 132.85 * p, -0.009173 * p)\n  const P = Ω + 272.75 * p - 2.3 * p * T\n  const E = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1, -0.002516, -0.0000074)\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 2451565.1619, 27.212220817 / ck,\n    0.0002762, 0.000000021, -0.000000000088) +\n    -0.4721 * Math.sin(m_) +\n    -0.1649 * Math.sin(2 * D) +\n    -0.0868 * Math.sin(2 * D - m_) +\n    0.0084 * Math.sin(2 * D + m_) +\n    -0.0083 * Math.sin(2 * D - M) * E +\n    -0.0039 * Math.sin(2 * D - M - m_) * E +\n    0.0034 * Math.sin(2 * m_) +\n    -0.0031 * Math.sin(2 * (D - m_)) +\n    0.003 * Math.sin(2 * D + M) * E +\n    0.0028 * Math.sin(M - m_) * E +\n    0.0026 * Math.sin(M) * E +\n    0.0025 * Math.sin(4 * D) +\n    0.0024 * Math.sin(D) +\n    0.0022 * Math.sin(M + m_) * E +\n    0.0017 * Math.sin(Ω) +\n    0.0014 * Math.sin(4 * D - m_) +\n    0.0005 * Math.sin(2 * D + M - m_) * E +\n    0.0004 * Math.sin(2 * D - M + m_) * E +\n    -0.0003 * Math.sin(2 * (D - M)) * E +\n    0.0003 * Math.sin(4 * D - M) * E +\n    0.0003 * Math.sin(V) +\n    0.0003 * Math.sin(P)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ascending,\n  descending\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvbW9vbm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDTyw0QkFBNEI7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ08sNkJBQTZCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVEQUFXO0FBQ3ZCO0FBQ0EsWUFBWSx1REFBVztBQUN2QjtBQUNBLGFBQWEsdURBQVc7QUFDeEI7QUFDQSxZQUFZLHVEQUFXO0FBQ3ZCO0FBQ0EsWUFBWSx1REFBVztBQUN2QjtBQUNBLFlBQVksdURBQVc7QUFDdkIsU0FBUyx1REFBVztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9tb29ubm9kZS5qcz84MGNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDEzIFNvbmlhIEtleXNcbiAqIEBjb3B5cmlnaHQgMjAxNiBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgbW9vbm5vZGVcbiAqL1xuLyoqXG4gKiBNb29ubm9kZTogQ2hhcHRlciA1MSwgUGFzc2FnZXMgb2YgdGhlIE1vb24gdGhyb3VnaCB0aGUgTm9kZXMuXG4gKi9cblxuaW1wb3J0IGJhc2UgZnJvbSAnLi9iYXNlLmpzJ1xuXG4vKipcbiAqIEFzY2VuZGluZyByZXR1cm5zIHRoZSBkYXRlIG9mIHBhc3NhZ2Ugb2YgdGhlIE1vb24gdGhyb3VnaCBhbiBhc2NlbmRpbmcgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0geWVhciAtIGRlY2ltYWwgeWVhciBzcGVjaWZ5aW5nIGEgZGF0ZSBuZWFyIHRoZSBldmVudC5cbiAqIEByZXR1cm5zIHtOdW1iZXJ9IGpkZSBvZiB0aGUgZXZlbnQgbmVhcmVzdCB0aGUgZ2l2ZW4gZGF0ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzY2VuZGluZyAoeWVhcikgeyAvLyAoeWVhciBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gbm9kZSh5ZWFyLCAwKVxufVxuXG4vKipcbiAqIERlc2NlbmRpbmcgcmV0dXJucyB0aGUgZGF0ZSBvZiBwYXNzYWdlIG9mIHRoZSBNb29uIHRocm91Z2ggYSBkZXNjZW5kaW5nIG5vZGUuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHllYXIgLSBkZWNpbWFsIHllYXIgc3BlY2lmeWluZyBhIGRhdGUgbmVhciB0aGUgZXZlbnQuXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBqZGUgb2YgdGhlIGV2ZW50IG5lYXJlc3QgdGhlIGdpdmVuIGRhdGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZXNjZW5kaW5nICh5ZWFyKSB7IC8vICh5ZWFyIGZsb2F0NjQpICBmbG9hdDY0XG4gIHJldHVybiBub2RlKHllYXIsIDAuNSlcbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBub2RlICh5LCBoKSB7IC8vICh5LCBoIGZsb2F0NjQpICBmbG9hdDY0XG4gIGxldCBrID0gKHkgLSAyMDAwLjA1KSAqIDEzLjQyMjMgLy8gKDUwLjEpIHAuIDM1NVxuICBrID0gTWF0aC5mbG9vcihrIC0gaCArIDAuNSkgKyBoIC8vIHNuYXAgdG8gaGFsZiBvcmJpdFxuICBjb25zdCBwID0gTWF0aC5QSSAvIDE4MFxuICBjb25zdCBjayA9IDEgLyAxMzQyLjIzXG4gIGNvbnN0IFQgPSBrICogY2tcbiAgY29uc3QgRCA9IGJhc2UuaG9ybmVyKFQsIDE4My42MzggKiBwLCAzMzEuNzM3MzU2ODIgKiBwIC8gY2ssXG4gICAgMC4wMDE0ODUyICogcCwgMC4wMDAwMDIwOSAqIHAsIC0wLjAwMDAwMDAxICogcClcbiAgY29uc3QgTSA9IGJhc2UuaG9ybmVyKFQsIDE3LjQwMDYgKiBwLCAyNi44MjAzNzI1ICogcCAvIGNrLFxuICAgIDAuMDAwMTE4NiAqIHAsIDAuMDAwMDAwMDYgKiBwKVxuICBjb25zdCBtXyA9IGJhc2UuaG9ybmVyKFQsIDM4LjM3NzYgKiBwLCAzNTUuNTI3NDczMTMgKiBwIC8gY2ssXG4gICAgMC4wMTIzNDk5ICogcCwgMC4wMDAwMTQ2MjcgKiBwLCAtMC4wMDAwMDAwNjkgKiBwKVxuICBjb25zdCDOqSA9IGJhc2UuaG9ybmVyKFQsIDEyMy45NzY3ICogcCwgLTEuNDQwOTg5NTYgKiBwIC8gY2ssXG4gICAgMC4wMDIwNjA4ICogcCwgMC4wMDAwMDIxNCAqIHAsIC0wLjAwMDAwMDAxNiAqIHApXG4gIGNvbnN0IFYgPSBiYXNlLmhvcm5lcihULCAyOTkuNzUgKiBwLCAxMzIuODUgKiBwLCAtMC4wMDkxNzMgKiBwKVxuICBjb25zdCBQID0gzqkgKyAyNzIuNzUgKiBwIC0gMi4zICogcCAqIFRcbiAgY29uc3QgRSA9IGJhc2UuaG9ybmVyKFQsIDEsIC0wLjAwMjUxNiwgLTAuMDAwMDA3NClcbiAgcmV0dXJuIGJhc2UuaG9ybmVyKFQsIDI0NTE1NjUuMTYxOSwgMjcuMjEyMjIwODE3IC8gY2ssXG4gICAgMC4wMDAyNzYyLCAwLjAwMDAwMDAyMSwgLTAuMDAwMDAwMDAwMDg4KSArXG4gICAgLTAuNDcyMSAqIE1hdGguc2luKG1fKSArXG4gICAgLTAuMTY0OSAqIE1hdGguc2luKDIgKiBEKSArXG4gICAgLTAuMDg2OCAqIE1hdGguc2luKDIgKiBEIC0gbV8pICtcbiAgICAwLjAwODQgKiBNYXRoLnNpbigyICogRCArIG1fKSArXG4gICAgLTAuMDA4MyAqIE1hdGguc2luKDIgKiBEIC0gTSkgKiBFICtcbiAgICAtMC4wMDM5ICogTWF0aC5zaW4oMiAqIEQgLSBNIC0gbV8pICogRSArXG4gICAgMC4wMDM0ICogTWF0aC5zaW4oMiAqIG1fKSArXG4gICAgLTAuMDAzMSAqIE1hdGguc2luKDIgKiAoRCAtIG1fKSkgK1xuICAgIDAuMDAzICogTWF0aC5zaW4oMiAqIEQgKyBNKSAqIEUgK1xuICAgIDAuMDAyOCAqIE1hdGguc2luKE0gLSBtXykgKiBFICtcbiAgICAwLjAwMjYgKiBNYXRoLnNpbihNKSAqIEUgK1xuICAgIDAuMDAyNSAqIE1hdGguc2luKDQgKiBEKSArXG4gICAgMC4wMDI0ICogTWF0aC5zaW4oRCkgK1xuICAgIDAuMDAyMiAqIE1hdGguc2luKE0gKyBtXykgKiBFICtcbiAgICAwLjAwMTcgKiBNYXRoLnNpbijOqSkgK1xuICAgIDAuMDAxNCAqIE1hdGguc2luKDQgKiBEIC0gbV8pICtcbiAgICAwLjAwMDUgKiBNYXRoLnNpbigyICogRCArIE0gLSBtXykgKiBFICtcbiAgICAwLjAwMDQgKiBNYXRoLnNpbigyICogRCAtIE0gKyBtXykgKiBFICtcbiAgICAtMC4wMDAzICogTWF0aC5zaW4oMiAqIChEIC0gTSkpICogRSArXG4gICAgMC4wMDAzICogTWF0aC5zaW4oNCAqIEQgLSBNKSAqIEUgK1xuICAgIDAuMDAwMyAqIE1hdGguc2luKFYpICtcbiAgICAwLjAwMDMgKiBNYXRoLnNpbihQKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFzY2VuZGluZyxcbiAgZGVzY2VuZGluZ1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/moonnode.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/moonphase.js":
/*!**************************************************!*\
  !*** ./node_modules/astronomia/src/moonphase.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   full: () => (/* binding */ full),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   meanFirst: () => (/* binding */ meanFirst),\n/* harmony export */   meanFull: () => (/* binding */ meanFull),\n/* harmony export */   meanLast: () => (/* binding */ meanLast),\n/* harmony export */   meanLunarMonth: () => (/* binding */ meanLunarMonth),\n/* harmony export */   meanNew: () => (/* binding */ meanNew),\n/* harmony export */   newMoon: () => (/* binding */ newMoon)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module moonphase\n */\n/**\n * Moonphase: Chapter 49, Phases of the Moon\n */\n\n\n\nconst { sin, cos } = Math\nconst ck = 1 / 1236.85\nconst D2R = Math.PI / 180\n\n/**\n * mean synodial lunar month\n */\nconst meanLunarMonth = 29.530588861\n\n// (49.1) p. 349\nfunction mean (T) {\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 2451550.09766, 29.530588861 / ck,\n    0.00015437, -0.00000015, 0.00000000073)\n}\n\n/** snap returns k at specified quarter q nearest year y. */\nfunction snap (y, q) {\n  const k = (y - 2000) * 12.3685 // (49.2) p. 350\n  return Math.floor(k - q + 0.5) + q\n}\n\n/**\n * MeanNew returns the jde of the mean New Moon nearest the given datthis.\n * The mean date is within 0.5 day of the true date of New Moon.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction meanNew (year) {\n  return mean(snap(year, 0) * ck)\n}\n\n/**\n * MeanFirst returns the jde of the mean First Quarter Moon nearest the given datthis.\n * The mean date is within 0.5 day of the true date of First Quarter Moon.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction meanFirst (year) {\n  return mean(snap(year, 0.25) * ck)\n}\n\n/**\n * MeanFull returns the jde of the mean Full Moon nearest the given datthis.\n * The mean date is within 0.5 day of the true date of Full Moon.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction meanFull (year) {\n  return mean(snap(year, 0.5) * ck)\n}\n\n/**\n * MeanLast returns the jde of the mean Last Quarter Moon nearest the given datthis.\n * The mean date is within 0.5 day of the true date of Last Quarter Moon.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction meanLast (year) {\n  return mean(snap(year, 0.75) * ck)\n}\n\n/**\n * New returns the jde of New Moon nearest the given date.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction newMoon (year) {\n  const m = new Mp(year, 0)\n  return mean(m.T) + m.nfc(nc) + m.a()\n}\n\n/**\n * First returns the jde of First Quarter Moon nearest the given datthis.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction first (year) {\n  const m = new Mp(year, 0.25)\n  return mean(m.T) + m.flc() + m.w() + m.a()\n}\n\n/**\n * Full returns the jde of Full Moon nearest the given datthis.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction full (year) {\n  const m = new Mp(year, 0.5)\n  return mean(m.T) + m.nfc(fc) + m.a()\n}\n\n/**\n * Last returns the jde of Last Quarter Moon nearest the given datthis.\n *\n * @param {Number} year - decimal year\n * @returns {Number} jde\n */\nfunction last (year) {\n  const m = new Mp(year, 0.75)\n  return mean(m.T) + m.flc() - m.w() + m.a()\n}\n\nclass Mp {\n  constructor (y, q) {\n    this.A = new Array(14)\n    const k = this.k = snap(y, q)\n    const T = this.T = this.k * ck // (49.3) p. 350\n    this.E = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1, -0.002516, -0.0000074)\n    this.M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 2.5534 * D2R, 29.1053567 * D2R / ck,\n      -0.0000014 * D2R, -0.00000011 * D2R)\n    this.M_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 201.5643 * D2R, 385.81693528 * D2R / ck,\n      0.0107582 * D2R, 0.00001238 * D2R, -0.000000058 * D2R)\n    this.F = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 160.7108 * D2R, 390.67050284 * D2R / ck,\n      -0.0016118 * D2R, -0.00000227 * D2R, 0.000000011 * D2R)\n    this.Ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 124.7746 * D2R, -1.56375588 * D2R / ck,\n      0.0020672 * D2R, 0.00000215 * D2R)\n    this.A[0] = 299.7 * D2R + 0.107408 * D2R * k - 0.009173 * T * T\n    this.A[1] = 251.88 * D2R + 0.016321 * D2R * k\n    this.A[2] = 251.83 * D2R + 26.651886 * D2R * k\n    this.A[3] = 349.42 * D2R + 36.412478 * D2R * k\n    this.A[4] = 84.66 * D2R + 18.206239 * D2R * k\n    this.A[5] = 141.74 * D2R + 53.303771 * D2R * k\n    this.A[6] = 207.17 * D2R + 2.453732 * D2R * k\n    this.A[7] = 154.84 * D2R + 7.30686 * D2R * k\n    this.A[8] = 34.52 * D2R + 27.261239 * D2R * k\n    this.A[9] = 207.19 * D2R + 0.121824 * D2R * k\n    this.A[10] = 291.34 * D2R + 1.844379 * D2R * k\n    this.A[11] = 161.72 * D2R + 24.198154 * D2R * k\n    this.A[12] = 239.56 * D2R + 25.513099 * D2R * k\n    this.A[13] = 331.55 * D2R + 3.592518 * D2R * k\n  }\n\n  // new or full corrections\n  nfc (c) {\n    const { M, M_, E, F, Ω } = this\n    return c[0] * sin(M_) +\n      c[1] * sin(M) * E +\n      c[2] * sin(2 * M_) +\n      c[3] * sin(2 * F) +\n      c[4] * sin(M_ - M) * E +\n      c[5] * sin(M_ + M) * E +\n      c[6] * sin(2 * M) * E * E +\n      c[7] * sin(M_ - 2 * F) +\n      c[8] * sin(M_ + 2 * F) +\n      c[9] * sin(2 * M_ + M) * E +\n      c[10] * sin(3 * M_) +\n      c[11] * sin(M + 2 * F) * E +\n      c[12] * sin(M - 2 * F) * E +\n      c[13] * sin(2 * M_ - M) * E +\n      c[14] * sin(Ω) +\n      c[15] * sin(M_ + 2 * M) +\n      c[16] * sin(2 * (M_ - F)) +\n      c[17] * sin(3 * M) +\n      c[18] * sin(M_ + M - 2 * F) +\n      c[19] * sin(2 * (M_ + F)) +\n      c[20] * sin(M_ + M + 2 * F) +\n      c[21] * sin(M_ - M + 2 * F) +\n      c[22] * sin(M_ - M - 2 * F) +\n      c[23] * sin(3 * M_ + M) +\n      c[24] * sin(4 * M_)\n  }\n\n  // first or last corrections\n  flc () {\n    const { M, M_, E, F, Ω } = this\n    return -0.62801 * sin(M_) +\n      0.17172 * sin(M) * E +\n      -0.01183 * sin(M_ + M) * E +\n      0.00862 * sin(2 * M_) +\n      0.00804 * sin(2 * F) +\n      0.00454 * sin(M_ - M) * E +\n      0.00204 * sin(2 * M) * E * E +\n      -0.0018 * sin(M_ - 2 * F) +\n      -0.0007 * sin(M_ + 2 * F) +\n      -0.0004 * sin(3 * M_) +\n      -0.00034 * sin(2 * M_ - M) * E +\n      0.00032 * sin(M + 2 * F) * E +\n      0.00032 * sin(M - 2 * F) * E +\n      -0.00028 * sin(M_ + 2 * M) * E * E +\n      0.00027 * sin(2 * M_ + M) * E +\n      -0.00017 * sin(Ω) +\n      -0.00005 * sin(M_ - M - 2 * F) +\n      0.00004 * sin(2 * M_ + 2 * F) +\n      -0.00004 * sin(M_ + M + 2 * F) +\n      0.00004 * sin(M_ - 2 * M) +\n      0.00003 * sin(M_ + M - 2 * F) +\n      0.00003 * sin(3 * M) +\n      0.00002 * sin(2 * M_ - 2 * F) +\n      0.00002 * sin(M_ - M + 2 * F) +\n      -0.00002 * sin(3 * M_ + M)\n  }\n\n  w () {\n    const { M, M_, E, F } = this\n    return 0.00306 -\n      0.00038 * E * cos(M) +\n      0.00026 * cos(M_) -\n      0.00002 * (cos(M_ - M) -\n        cos(M_ + M) -\n        cos(2 * F)\n      )\n  }\n\n  // additional corrections\n  a () {\n    let a = 0\n    ac.forEach((c, i) => {\n      a += c * sin(this.A[i])\n    })\n    return a\n  }\n}\n\n// new coefficients\nconst nc = [\n  -0.4072, 0.17241, 0.01608, 0.01039, 0.00739,\n  -0.00514, 0.00208, -0.00111, -0.00057, 0.00056,\n  -0.00042, 0.00042, 0.00038, -0.00024, -0.00017,\n  -0.00007, 0.00004, 0.00004, 0.00003, 0.00003,\n  -0.00003, 0.00003, -0.00002, -0.00002, 0.00002\n]\n\n// full coefficients\nconst fc = [\n  -0.40614, 0.17302, 0.01614, 0.01043, 0.00734,\n  -0.00515, 0.00209, -0.00111, -0.00057, 0.00056,\n  -0.00042, 0.00042, 0.00038, -0.00024, -0.00017,\n  -0.00007, 0.00004, 0.00004, 0.00003, 0.00003,\n  -0.00003, 0.00003, -0.00002, -0.00002, 0.00002\n]\n\n// additional corrections\nconst ac = [\n  0.000325, 0.000165, 0.000164, 0.000126, 0.00011,\n  0.000062, 0.00006, 0.000056, 0.000047, 0.000042,\n  0.000040, 0.000037, 0.000035, 0.000023\n]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  meanLunarMonth,\n  meanNew,\n  meanFirst,\n  meanFull,\n  meanLast,\n  newMoon,\n  new: newMoon, // BACKWARDS-COMPATIBILITY\n  first,\n  full,\n  last\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/moonphase.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/moonposition.js":
/*!*****************************************************!*\
  !*** ./node_modules/astronomia/src/moonposition.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   node: () => (/* binding */ node),\n/* harmony export */   parallax: () => (/* binding */ parallax),\n/* harmony export */   perigee: () => (/* binding */ perigee),\n/* harmony export */   position: () => (/* binding */ position),\n/* harmony export */   trueNode: () => (/* binding */ trueNode)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module moonposition\n */\n/**\n * Moonposition: Chapter 47, Position of the Moon.\n */\n\n // eslint-disable-line no-unused-vars\nconst { asin, sin } = Math\nconst D2R = Math.PI / 180\n\nconst EARTH_RADIUS = 6378.137 // km\n\n/**\n * parallax returns equatorial horizontal parallax of the Moon.\n *\n * @param {Number} distance - distance between centers of the Earth and Moon, in km.\n * @returns {Number} Result in radians.\n */\nfunction parallax (distance) {\n  // p. 337\n  return asin(EARTH_RADIUS / distance)\n}\n\nfunction dmf (T) {\n  const d = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 297.8501921 * D2R, 445267.1114034 * D2R, -0.0018819 * D2R, D2R / 545868, -D2R / 113065000)\n  const m = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 357.5291092 * D2R, 35999.0502909 * D2R, -0.0001536 * D2R, D2R / 24490000)\n  const m_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 134.9633964 * D2R, 477198.8675055 * D2R,\n    0.0087414 * D2R, D2R / 69699, -D2R / 14712000)\n  const f = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 93.272095 * D2R, 483202.0175233 * D2R, -0.0036539 * D2R, -D2R / 3526000, D2R / 863310000)\n  return [d, m, m_, f]\n}\n\n/**\n * position returns geocentric location of the Moon.\n *\n * Results are referenced to mean equinox of date and do not include\n * the effect of nutation.\n *\n * @param {number} jde - Julian ephemeris day\n * @returns {Coord}\n *  {number} lon - Geocentric longitude λ, in radians.\n *  {number} lat - Geocentric latitude β, in radians.\n *  {number} range - Distance Δ between centers of the Earth and Moon, in km.\n */\nfunction position (jde) {\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const l_ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 218.3164477 * D2R, 481267.88123421 * D2R, -0.0015786 * D2R, D2R / 538841, -D2R / 65194000)\n  const [d, m, m_, f] = dmf(T)\n  const a1 = 119.75 * D2R + 131.849 * D2R * T\n  const a2 = 53.09 * D2R + 479264.29 * D2R * T\n  const a3 = 313.45 * D2R + 481266.484 * D2R * T\n  const e = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1, -0.002516, -0.0000074)\n  const e2 = e * e\n  let Σl = 3958 * sin(a1) + 1962 * sin(l_ - f) + 318 * sin(a2)\n  let Σr = 0.0\n  let Σb = -2235 * sin(l_) + 382 * sin(a3) + 175 * sin(a1 - f) +\n    175 * sin(a1 + f) + 127 * sin(l_ - m_) - 115 * sin(l_ + m_)\n  ta.forEach((r) => {\n    const [sina, cosa] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(d * r.d + m * r.m + m_ * r.m_ + f * r.f)\n    switch (r.m) {\n      case 0:\n        Σl += r.Σl * sina\n        Σr += r.Σr * cosa\n        break\n      case -1:\n      case 1:\n        Σl += r.Σl * sina * e\n        Σr += r.Σr * cosa * e\n        break\n      case -2:\n      case 2:\n        Σl += r.Σl * sina * e2\n        Σr += r.Σr * cosa * e2\n        break\n    }\n  })\n\n  tb.forEach((r) => {\n    const sb = sin(d * r.d + m * r.m + m_ * r.m_ + f * r.f)\n    switch (r.m) {\n      case 0:\n        Σb += r.Σb * sb\n        break\n      case -1:\n      case 1:\n        Σb += r.Σb * sb * e\n        break\n      case -2:\n      case 2:\n        Σb += r.Σb * sb * e2\n        break\n    }\n  })\n  const lon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(l_, 2 * Math.PI) + Σl * 1e-6 * D2R\n  const lat = Σb * 1e-6 * D2R\n  const range = 385000.56 + Σr * 1e-3\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(lon, lat, range)\n}\n\nconst ta = (function () {\n  const ta = [\n    [0, 0, 1, 0, 6288774, -20905355],\n    [2, 0, -1, 0, 1274027, -3699111],\n    [2, 0, 0, 0, 658314, -2955968],\n    [0, 0, 2, 0, 213618, -569925],\n\n    [0, 1, 0, 0, -185116, 48888],\n    [0, 0, 0, 2, -114332, -3149],\n    [2, 0, -2, 0, 58793, 246158],\n    [2, -1, -1, 0, 57066, -152138],\n\n    [2, 0, 1, 0, 53322, -170733],\n    [2, -1, 0, 0, 45758, -204586],\n    [0, 1, -1, 0, -40923, -129620],\n    [1, 0, 0, 0, -34720, 108743],\n\n    [0, 1, 1, 0, -30383, 104755],\n    [2, 0, 0, -2, 15327, 10321],\n    [0, 0, 1, 2, -12528, 0],\n    [0, 0, 1, -2, 10980, 79661],\n\n    [4, 0, -1, 0, 10675, -34782],\n    [0, 0, 3, 0, 10034, -23210],\n    [4, 0, -2, 0, 8548, -21636],\n    [2, 1, -1, 0, -7888, 24208],\n\n    [2, 1, 0, 0, -6766, 30824],\n    [1, 0, -1, 0, -5163, -8379],\n    [1, 1, 0, 0, 4987, -16675],\n    [2, -1, 1, 0, 4036, -12831],\n\n    [2, 0, 2, 0, 3994, -10445],\n    [4, 0, 0, 0, 3861, -11650],\n    [2, 0, -3, 0, 3665, 14403],\n    [0, 1, -2, 0, -2689, -7003],\n\n    [2, 0, -1, 2, -2602, 0],\n    [2, -1, -2, 0, 2390, 10056],\n    [1, 0, 1, 0, -2348, 6322],\n    [2, -2, 0, 0, 2236, -9884],\n\n    [0, 1, 2, 0, -2120, 5751],\n    [0, 2, 0, 0, -2069, 0],\n    [2, -2, -1, 0, 2048, -4950],\n    [2, 0, 1, -2, -1773, 4130],\n\n    [2, 0, 0, 2, -1595, 0],\n    [4, -1, -1, 0, 1215, -3958],\n    [0, 0, 2, 2, -1110, 0],\n    [3, 0, -1, 0, -892, 3258],\n\n    [2, 1, 1, 0, -810, 2616],\n    [4, -1, -2, 0, 759, -1897],\n    [0, 2, -1, 0, -713, -2117],\n    [2, 2, -1, 0, -700, 2354],\n\n    [2, 1, -2, 0, 691, 0],\n    [2, -1, 0, -2, 596, 0],\n    [4, 0, 1, 0, 549, -1423],\n    [0, 0, 4, 0, 537, -1117],\n\n    [4, -1, 0, 0, 520, -1571],\n    [1, 0, -2, 0, -487, -1739],\n    [2, 1, 0, -2, -399, 0],\n    [0, 0, 2, -2, -381, -4421],\n\n    [1, 1, 1, 0, 351, 0],\n    [3, 0, -2, 0, -340, 0],\n    [4, 0, -3, 0, 330, 0],\n    [2, -1, 2, 0, 327, 0],\n\n    [0, 2, 1, 0, -323, 1165],\n    [1, 1, -1, 0, 299, 0],\n    [2, 0, 3, 0, 294, 0],\n    [2, 0, -1, -2, 0, 8752]\n  ]\n  return ta.map((row) => {\n    const o = {}\n    const vals = ['d', 'm', 'm_', 'f', 'Σl', 'Σr']\n    vals.forEach((D2R, i) => {\n      o[D2R] = row[i]\n    })\n    return o\n  })\n})()\n\nconst tb = (function () {\n  const tb = [\n    [0, 0, 0, 1, 5128122],\n    [0, 0, 1, 1, 280602],\n    [0, 0, 1, -1, 277693],\n    [2, 0, 0, -1, 173237],\n\n    [2, 0, -1, 1, 55413],\n    [2, 0, -1, -1, 46271],\n    [2, 0, 0, 1, 32573],\n    [0, 0, 2, 1, 17198],\n\n    [2, 0, 1, -1, 9266],\n    [0, 0, 2, -1, 8822],\n    [2, -1, 0, -1, 8216],\n    [2, 0, -2, -1, 4324],\n\n    [2, 0, 1, 1, 4200],\n    [2, 1, 0, -1, -3359],\n    [2, -1, -1, 1, 2463],\n    [2, -1, 0, 1, 2211],\n\n    [2, -1, -1, -1, 2065],\n    [0, 1, -1, -1, -1870],\n    [4, 0, -1, -1, 1828],\n    [0, 1, 0, 1, -1794],\n\n    [0, 0, 0, 3, -1749],\n    [0, 1, -1, 1, -1565],\n    [1, 0, 0, 1, -1491],\n    [0, 1, 1, 1, -1475],\n\n    [0, 1, 1, -1, -1410],\n    [0, 1, 0, -1, -1344],\n    [1, 0, 0, -1, -1335],\n    [0, 0, 3, 1, 1107],\n\n    [4, 0, 0, -1, 1021],\n    [4, 0, -1, 1, 833],\n\n    [0, 0, 1, -3, 777],\n    [4, 0, -2, 1, 671],\n    [2, 0, 0, -3, 607],\n    [2, 0, 2, -1, 596],\n\n    [2, -1, 1, -1, 491],\n    [2, 0, -2, 1, -451],\n    [0, 0, 3, -1, 439],\n    [2, 0, 2, 1, 422],\n\n    [2, 0, -3, -1, 421],\n    [2, 1, -1, 1, -366],\n    [2, 1, 0, 1, -351],\n    [4, 0, 0, 1, 331],\n\n    [2, -1, 1, 1, 315],\n    [2, -2, 0, -1, 302],\n    [0, 0, 1, 3, -283],\n    [2, 1, 1, -1, -229],\n\n    [1, 1, 0, -1, 223],\n    [1, 1, 0, 1, 223],\n    [0, 1, -2, -1, -220],\n    [2, 1, -1, -1, -220],\n\n    [1, 0, 1, 1, -185],\n    [2, -1, -2, -1, 181],\n    [0, 1, 2, 1, -177],\n    [4, 0, -2, -1, 176],\n\n    [4, -1, -1, -1, 166],\n    [1, 0, 1, -1, -164],\n    [4, 0, 1, -1, 132],\n    [1, 0, -1, -1, -119],\n\n    [4, -1, 0, -1, 115],\n    [2, -2, 0, 1, 107]\n  ]\n  return tb.map((row) => {\n    const o = {}\n    const vals = ['d', 'm', 'm_', 'f', 'Σb']\n    vals.forEach((D2R, i) => {\n      o[D2R] = row[i]\n    })\n    return o\n  })\n})()\n\n/**\n * Node returns longitude of the mean ascending node of the lunar orbit.\n *\n * @param {number} jde - Julian ephemeris day\n * @returns result in radians.\n */\nfunction node (jde) {\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(\n    _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(\n      _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde),\n      125.0445479 * D2R,\n      -1934.1362891 * D2R,\n      0.0020754 * D2R,\n      D2R / 467441,\n      -D2R / 60616000\n    ), 2 * Math.PI\n  )\n}\n\n/**\n * perigee returns longitude of perigee of the lunar orbit.\n *\n * @param {number} jde - Julian ephemeris day\n * @returns result in radians.\n */\nfunction perigee (jde) {\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(\n    _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(\n      _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde),\n      83.3532465 * D2R,\n      4069.0137287 * D2R,\n      -0.01032 * D2R,\n      -D2R / 80053,\n      D2R / 18999000\n    ), 2 * Math.PI\n  )\n}\n\n/**\n * trueNode returns longitude of the true ascending node.\n *\n * That is, the node of the instantaneous lunar orbit.\n *\n * @param {number} jde - Julian ephemeris day\n * @returns result in radians.\n */\nfunction trueNode (jde) {\n  const [d, m, m_, f] = dmf(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde))\n  return node(jde) +\n    -1.4979 * D2R * sin(2 * (d - f)) +\n    -0.15 * D2R * sin(m) +\n    -0.1226 * D2R * sin(2 * d) +\n    0.1176 * D2R * sin(2 * f) +\n    -0.0801 * D2R * sin(2 * (m_ - f))\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  parallax,\n  position,\n  node,\n  perigee,\n  trueNode\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/moonposition.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/nearparabolic.js":
/*!******************************************************!*\
  !*** ./node_modules/astronomia/src/nearparabolic.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Elements: () => (/* binding */ Elements),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module nearparabolic\n */\n/**\n * Nearparabolic: Chapter 35, Near-parabolic Motion.\n */\n\n\n/**\n * Elements holds orbital elements for near-parabolic orbits.\n */\nclass Elements {\n  /**\n   * @param {Number} timeP - time of Perihelion, T\n   * @param {Number} pDis - Perihelion distance, q\n   * @param {Number} ecc - eccentricity, e\n   */\n  constructor (timeP, pDis, ecc) {\n    this.timeP = timeP\n    this.pDis = pDis\n    this.ecc = ecc\n  }\n\n  /**\n   * AnomalyDistance returns true anomaly and distance for near-parabolic orbits.\n   *\n   * True anomaly ν returned in radians. Distance r returned in AU.\n   * An error is returned if the algorithm fails to converge.\n   */\n  anomalyDistance (jde) {\n    // fairly literal translation of code on p. 246\n    const q1 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].K * Math.sqrt((1 + this.ecc) / this.pDis) / (2 * this.pDis) // line 20\n    const g = (1 - this.ecc) / (1 + this.ecc) // line 20\n\n    const t = jde - this.timeP // line 22\n    if (t === 0) { // line 24\n      return { ano: 0, dist: this.pDis, err: null }\n    }\n    const d1 = 1e4\n    const d = 1e-9 // line 14\n    const q2 = q1 * t // line 28\n    let s = 2.0 / (3 * Math.abs(q2)) // line 30\n    s = 2 / Math.tan(2 * Math.atan(Math.cbrt(Math.tan(Math.atan(s) / 2))))\n    if (t < 0) { // line 34\n      s = -s\n    }\n    if (this.ecc !== 1) { // line 36\n      let l = 0 // line 38\n      for (;;) {\n        const s0 = s // line 40\n        let z = 1.0\n        const y = s * s\n        let g1 = -y * s\n        let q3 = q2 + 2 * g * s * y / 3 // line 42\n        for (;;) {\n          z += 1 // line 44\n          g1 = -g1 * g * y // line 46\n          const z1 = (z - (z + 1) * g) / (2 * z + 1) // line 48\n          const f = z1 * g1 // line 50\n          q3 += f // line 52\n          if (z > 50 || Math.abs(f) > d1) { // line 54\n            return {\n              err: new Error('No convergence')\n            }\n          }\n          if (Math.abs(f) <= d) { // line 56\n            break\n          }\n        }\n        l++ // line 58\n        if (l > 50) {\n          return {\n            err: new Error('No convergence')\n          }\n        }\n        for (;;) {\n          const s1 = s // line 60\n          s = (2 * s * s * s / 3 + q3) / (s * s + 1)\n          if (Math.abs(s - s1) <= d) { // line 62\n            break\n          }\n        }\n        if (Math.abs(s - s0) <= d) { // line 64\n          break\n        }\n      }\n    }\n    let ν = 2 * Math.atan(s) // line 66\n    const r = this.pDis * (1 + this.ecc) / (1 + this.ecc * Math.cos(ν)) // line 68\n    if (ν < 0) { // line 70\n      ν += 2 * Math.PI\n    }\n    return {\n      ano: ν,\n      dist: r,\n      err: null\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Elements\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvbmVhcnBhcmFib2xpYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU07QUFDckI7O0FBRUE7QUFDQSxtQkFBbUI7QUFDbkIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZTtBQUNmO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9uZWFycGFyYWJvbGljLmpzPzc5MzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBuZWFycGFyYWJvbGljXG4gKi9cbi8qKlxuICogTmVhcnBhcmFib2xpYzogQ2hhcHRlciAzNSwgTmVhci1wYXJhYm9saWMgTW90aW9uLlxuICovXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5cbi8qKlxuICogRWxlbWVudHMgaG9sZHMgb3JiaXRhbCBlbGVtZW50cyBmb3IgbmVhci1wYXJhYm9saWMgb3JiaXRzLlxuICovXG5leHBvcnQgY2xhc3MgRWxlbWVudHMge1xuICAvKipcbiAgICogQHBhcmFtIHtOdW1iZXJ9IHRpbWVQIC0gdGltZSBvZiBQZXJpaGVsaW9uLCBUXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBwRGlzIC0gUGVyaWhlbGlvbiBkaXN0YW5jZSwgcVxuICAgKiBAcGFyYW0ge051bWJlcn0gZWNjIC0gZWNjZW50cmljaXR5LCBlXG4gICAqL1xuICBjb25zdHJ1Y3RvciAodGltZVAsIHBEaXMsIGVjYykge1xuICAgIHRoaXMudGltZVAgPSB0aW1lUFxuICAgIHRoaXMucERpcyA9IHBEaXNcbiAgICB0aGlzLmVjYyA9IGVjY1xuICB9XG5cbiAgLyoqXG4gICAqIEFub21hbHlEaXN0YW5jZSByZXR1cm5zIHRydWUgYW5vbWFseSBhbmQgZGlzdGFuY2UgZm9yIG5lYXItcGFyYWJvbGljIG9yYml0cy5cbiAgICpcbiAgICogVHJ1ZSBhbm9tYWx5IM69IHJldHVybmVkIGluIHJhZGlhbnMuIERpc3RhbmNlIHIgcmV0dXJuZWQgaW4gQVUuXG4gICAqIEFuIGVycm9yIGlzIHJldHVybmVkIGlmIHRoZSBhbGdvcml0aG0gZmFpbHMgdG8gY29udmVyZ2UuXG4gICAqL1xuICBhbm9tYWx5RGlzdGFuY2UgKGpkZSkge1xuICAgIC8vIGZhaXJseSBsaXRlcmFsIHRyYW5zbGF0aW9uIG9mIGNvZGUgb24gcC4gMjQ2XG4gICAgY29uc3QgcTEgPSBiYXNlLksgKiBNYXRoLnNxcnQoKDEgKyB0aGlzLmVjYykgLyB0aGlzLnBEaXMpIC8gKDIgKiB0aGlzLnBEaXMpIC8vIGxpbmUgMjBcbiAgICBjb25zdCBnID0gKDEgLSB0aGlzLmVjYykgLyAoMSArIHRoaXMuZWNjKSAvLyBsaW5lIDIwXG5cbiAgICBjb25zdCB0ID0gamRlIC0gdGhpcy50aW1lUCAvLyBsaW5lIDIyXG4gICAgaWYgKHQgPT09IDApIHsgLy8gbGluZSAyNFxuICAgICAgcmV0dXJuIHsgYW5vOiAwLCBkaXN0OiB0aGlzLnBEaXMsIGVycjogbnVsbCB9XG4gICAgfVxuICAgIGNvbnN0IGQxID0gMWU0XG4gICAgY29uc3QgZCA9IDFlLTkgLy8gbGluZSAxNFxuICAgIGNvbnN0IHEyID0gcTEgKiB0IC8vIGxpbmUgMjhcbiAgICBsZXQgcyA9IDIuMCAvICgzICogTWF0aC5hYnMocTIpKSAvLyBsaW5lIDMwXG4gICAgcyA9IDIgLyBNYXRoLnRhbigyICogTWF0aC5hdGFuKE1hdGguY2JydChNYXRoLnRhbihNYXRoLmF0YW4ocykgLyAyKSkpKVxuICAgIGlmICh0IDwgMCkgeyAvLyBsaW5lIDM0XG4gICAgICBzID0gLXNcbiAgICB9XG4gICAgaWYgKHRoaXMuZWNjICE9PSAxKSB7IC8vIGxpbmUgMzZcbiAgICAgIGxldCBsID0gMCAvLyBsaW5lIDM4XG4gICAgICBmb3IgKDs7KSB7XG4gICAgICAgIGNvbnN0IHMwID0gcyAvLyBsaW5lIDQwXG4gICAgICAgIGxldCB6ID0gMS4wXG4gICAgICAgIGNvbnN0IHkgPSBzICogc1xuICAgICAgICBsZXQgZzEgPSAteSAqIHNcbiAgICAgICAgbGV0IHEzID0gcTIgKyAyICogZyAqIHMgKiB5IC8gMyAvLyBsaW5lIDQyXG4gICAgICAgIGZvciAoOzspIHtcbiAgICAgICAgICB6ICs9IDEgLy8gbGluZSA0NFxuICAgICAgICAgIGcxID0gLWcxICogZyAqIHkgLy8gbGluZSA0NlxuICAgICAgICAgIGNvbnN0IHoxID0gKHogLSAoeiArIDEpICogZykgLyAoMiAqIHogKyAxKSAvLyBsaW5lIDQ4XG4gICAgICAgICAgY29uc3QgZiA9IHoxICogZzEgLy8gbGluZSA1MFxuICAgICAgICAgIHEzICs9IGYgLy8gbGluZSA1MlxuICAgICAgICAgIGlmICh6ID4gNTAgfHwgTWF0aC5hYnMoZikgPiBkMSkgeyAvLyBsaW5lIDU0XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICBlcnI6IG5ldyBFcnJvcignTm8gY29udmVyZ2VuY2UnKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoTWF0aC5hYnMoZikgPD0gZCkgeyAvLyBsaW5lIDU2XG4gICAgICAgICAgICBicmVha1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsKysgLy8gbGluZSA1OFxuICAgICAgICBpZiAobCA+IDUwKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycjogbmV3IEVycm9yKCdObyBjb252ZXJnZW5jZScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoOzspIHtcbiAgICAgICAgICBjb25zdCBzMSA9IHMgLy8gbGluZSA2MFxuICAgICAgICAgIHMgPSAoMiAqIHMgKiBzICogcyAvIDMgKyBxMykgLyAocyAqIHMgKyAxKVxuICAgICAgICAgIGlmIChNYXRoLmFicyhzIC0gczEpIDw9IGQpIHsgLy8gbGluZSA2MlxuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE1hdGguYWJzKHMgLSBzMCkgPD0gZCkgeyAvLyBsaW5lIDY0XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBsZXQgzr0gPSAyICogTWF0aC5hdGFuKHMpIC8vIGxpbmUgNjZcbiAgICBjb25zdCByID0gdGhpcy5wRGlzICogKDEgKyB0aGlzLmVjYykgLyAoMSArIHRoaXMuZWNjICogTWF0aC5jb3Mozr0pKSAvLyBsaW5lIDY4XG4gICAgaWYgKM69IDwgMCkgeyAvLyBsaW5lIDcwXG4gICAgICDOvSArPSAyICogTWF0aC5QSVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgYW5vOiDOvSxcbiAgICAgIGRpc3Q6IHIsXG4gICAgICBlcnI6IG51bGxcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBFbGVtZW50c1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/nearparabolic.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/node.js":
/*!*********************************************!*\
  !*** ./node_modules/astronomia/src/node.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   el: () => (/* binding */ el),\n/* harmony export */   ellipticAscending: () => (/* binding */ ellipticAscending),\n/* harmony export */   ellipticDescending: () => (/* binding */ ellipticDescending),\n/* harmony export */   pa: () => (/* binding */ pa),\n/* harmony export */   parabolicAscending: () => (/* binding */ parabolicAscending),\n/* harmony export */   parabolicDescending: () => (/* binding */ parabolicDescending)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module node\n */\n/**\n * Node: Chapter 39, Passages through the Nodes.\n */\n\n\n\n/**\n * EllipticAscending computes time and distance of passage through the ascending node of a body in an elliptical orbit.\n *\n * Argument axis is semimajor axis in AU, ecc is eccentricity, argP is argument\n * of perihelion in radians, timeP is time of perihelion as a jd.\n *\n * Result is jde of the event and distance from the sun in AU.\n */\nfunction ellipticAscending (axis, ecc, argP, timeP) { // (axis, ecc, argP, timeP float64)  (jde, r float64)\n  return el(-argP, axis, ecc, timeP)\n}\n\n/**\n * EllipticAscending computes time and distance of passage through the descending node of a body in an elliptical orbit.\n *\n * Argument axis is semimajor axis in AU, ecc is eccentricity, argP is argument\n * of perihelion in radians, timeP is time of perihelion as a jd.\n *\n * Result is jde of the event and distance from the sun in AU.\n */\nfunction ellipticDescending (axis, ecc, argP, timeP) { // (axis, ecc, argP, timeP float64)  (jde, r float64)\n  return el(Math.PI - argP, axis, ecc, timeP)\n}\n\nfunction el (ν, axis, ecc, timeP) { // (ν, axis, ecc, timeP float64)  (jde, r float64)\n  const E = 2 * Math.atan(Math.sqrt((1 - ecc) / (1 + ecc)) * Math.tan(ν * 0.5))\n  const [sE, cE] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(E)\n  const M = E - ecc * sE\n  const n = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].K / axis / Math.sqrt(axis)\n  const jde = timeP + M / n\n  const r = axis * (1 - ecc * cE)\n  return [jde, r]\n}\n\n/**\n * ParabolicAscending computes time and distance of passage through the ascending node of a body in a parabolic orbit.\n *\n * Argument q is perihelion distance in AU, argP is argument of perihelion\n * in radians, timeP is time of perihelion as a jd.\n *\n * Result is jde of the event and distance from the sun in AU.\n */\nfunction parabolicAscending (q, argP, timeP) { // (q, argP, timeP float64)  (jde, r float64)\n  return pa(-argP, q, timeP)\n}\n\n/**\n * ParabolicDescending computes time and distance of passage through the descending node of a body in a parabolic orbit.\n *\n * Argument q is perihelion distance in AU, argP is argument of perihelion\n * in radians, timeP is time of perihelion as a jd.\n *\n * Result is jde of the event and distance from the sun in AU.\n */\nfunction parabolicDescending (q, argP, timeP) { // (q, argP, timeP float64)  (jde, r float64)\n  return pa(Math.PI - argP, q, timeP)\n}\n\nfunction pa (ν, q, timeP) { // (ν, q, timeP float64)  (jde, r float64)\n  const s = Math.tan(ν * 0.5)\n  const jde = timeP + 27.403895 * s * (s * s + 3) * q * Math.sqrt(q)\n  const r = q * (1 + s * s)\n  return [jde, r]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ellipticAscending,\n  ellipticDescending,\n  el,\n  parabolicAscending,\n  parabolicDescending,\n  pa\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzREFBc0Q7QUFDN0Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sdURBQXVEO0FBQzlEO0FBQ0E7O0FBRU8sb0NBQW9DO0FBQzNDO0FBQ0EsbUJBQW1CLHVEQUFXO0FBQzlCO0FBQ0EsWUFBWSxrREFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0NBQStDO0FBQ3REO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdEQUFnRDtBQUN2RDtBQUNBOztBQUVPLDRCQUE0QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9ub2RlLmpzPzgzZTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSBub2RlXG4gKi9cbi8qKlxuICogTm9kZTogQ2hhcHRlciAzOSwgUGFzc2FnZXMgdGhyb3VnaCB0aGUgTm9kZXMuXG4gKi9cblxuaW1wb3J0IGJhc2UgZnJvbSAnLi9iYXNlLmpzJ1xuXG4vKipcbiAqIEVsbGlwdGljQXNjZW5kaW5nIGNvbXB1dGVzIHRpbWUgYW5kIGRpc3RhbmNlIG9mIHBhc3NhZ2UgdGhyb3VnaCB0aGUgYXNjZW5kaW5nIG5vZGUgb2YgYSBib2R5IGluIGFuIGVsbGlwdGljYWwgb3JiaXQuXG4gKlxuICogQXJndW1lbnQgYXhpcyBpcyBzZW1pbWFqb3IgYXhpcyBpbiBBVSwgZWNjIGlzIGVjY2VudHJpY2l0eSwgYXJnUCBpcyBhcmd1bWVudFxuICogb2YgcGVyaWhlbGlvbiBpbiByYWRpYW5zLCB0aW1lUCBpcyB0aW1lIG9mIHBlcmloZWxpb24gYXMgYSBqZC5cbiAqXG4gKiBSZXN1bHQgaXMgamRlIG9mIHRoZSBldmVudCBhbmQgZGlzdGFuY2UgZnJvbSB0aGUgc3VuIGluIEFVLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZWxsaXB0aWNBc2NlbmRpbmcgKGF4aXMsIGVjYywgYXJnUCwgdGltZVApIHsgLy8gKGF4aXMsIGVjYywgYXJnUCwgdGltZVAgZmxvYXQ2NCkgIChqZGUsIHIgZmxvYXQ2NClcbiAgcmV0dXJuIGVsKC1hcmdQLCBheGlzLCBlY2MsIHRpbWVQKVxufVxuXG4vKipcbiAqIEVsbGlwdGljQXNjZW5kaW5nIGNvbXB1dGVzIHRpbWUgYW5kIGRpc3RhbmNlIG9mIHBhc3NhZ2UgdGhyb3VnaCB0aGUgZGVzY2VuZGluZyBub2RlIG9mIGEgYm9keSBpbiBhbiBlbGxpcHRpY2FsIG9yYml0LlxuICpcbiAqIEFyZ3VtZW50IGF4aXMgaXMgc2VtaW1ham9yIGF4aXMgaW4gQVUsIGVjYyBpcyBlY2NlbnRyaWNpdHksIGFyZ1AgaXMgYXJndW1lbnRcbiAqIG9mIHBlcmloZWxpb24gaW4gcmFkaWFucywgdGltZVAgaXMgdGltZSBvZiBwZXJpaGVsaW9uIGFzIGEgamQuXG4gKlxuICogUmVzdWx0IGlzIGpkZSBvZiB0aGUgZXZlbnQgYW5kIGRpc3RhbmNlIGZyb20gdGhlIHN1biBpbiBBVS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVsbGlwdGljRGVzY2VuZGluZyAoYXhpcywgZWNjLCBhcmdQLCB0aW1lUCkgeyAvLyAoYXhpcywgZWNjLCBhcmdQLCB0aW1lUCBmbG9hdDY0KSAgKGpkZSwgciBmbG9hdDY0KVxuICByZXR1cm4gZWwoTWF0aC5QSSAtIGFyZ1AsIGF4aXMsIGVjYywgdGltZVApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbCAozr0sIGF4aXMsIGVjYywgdGltZVApIHsgLy8gKM69LCBheGlzLCBlY2MsIHRpbWVQIGZsb2F0NjQpICAoamRlLCByIGZsb2F0NjQpXG4gIGNvbnN0IEUgPSAyICogTWF0aC5hdGFuKE1hdGguc3FydCgoMSAtIGVjYykgLyAoMSArIGVjYykpICogTWF0aC50YW4ozr0gKiAwLjUpKVxuICBjb25zdCBbc0UsIGNFXSA9IGJhc2Uuc2luY29zKEUpXG4gIGNvbnN0IE0gPSBFIC0gZWNjICogc0VcbiAgY29uc3QgbiA9IGJhc2UuSyAvIGF4aXMgLyBNYXRoLnNxcnQoYXhpcylcbiAgY29uc3QgamRlID0gdGltZVAgKyBNIC8gblxuICBjb25zdCByID0gYXhpcyAqICgxIC0gZWNjICogY0UpXG4gIHJldHVybiBbamRlLCByXVxufVxuXG4vKipcbiAqIFBhcmFib2xpY0FzY2VuZGluZyBjb21wdXRlcyB0aW1lIGFuZCBkaXN0YW5jZSBvZiBwYXNzYWdlIHRocm91Z2ggdGhlIGFzY2VuZGluZyBub2RlIG9mIGEgYm9keSBpbiBhIHBhcmFib2xpYyBvcmJpdC5cbiAqXG4gKiBBcmd1bWVudCBxIGlzIHBlcmloZWxpb24gZGlzdGFuY2UgaW4gQVUsIGFyZ1AgaXMgYXJndW1lbnQgb2YgcGVyaWhlbGlvblxuICogaW4gcmFkaWFucywgdGltZVAgaXMgdGltZSBvZiBwZXJpaGVsaW9uIGFzIGEgamQuXG4gKlxuICogUmVzdWx0IGlzIGpkZSBvZiB0aGUgZXZlbnQgYW5kIGRpc3RhbmNlIGZyb20gdGhlIHN1biBpbiBBVS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcmFib2xpY0FzY2VuZGluZyAocSwgYXJnUCwgdGltZVApIHsgLy8gKHEsIGFyZ1AsIHRpbWVQIGZsb2F0NjQpICAoamRlLCByIGZsb2F0NjQpXG4gIHJldHVybiBwYSgtYXJnUCwgcSwgdGltZVApXG59XG5cbi8qKlxuICogUGFyYWJvbGljRGVzY2VuZGluZyBjb21wdXRlcyB0aW1lIGFuZCBkaXN0YW5jZSBvZiBwYXNzYWdlIHRocm91Z2ggdGhlIGRlc2NlbmRpbmcgbm9kZSBvZiBhIGJvZHkgaW4gYSBwYXJhYm9saWMgb3JiaXQuXG4gKlxuICogQXJndW1lbnQgcSBpcyBwZXJpaGVsaW9uIGRpc3RhbmNlIGluIEFVLCBhcmdQIGlzIGFyZ3VtZW50IG9mIHBlcmloZWxpb25cbiAqIGluIHJhZGlhbnMsIHRpbWVQIGlzIHRpbWUgb2YgcGVyaWhlbGlvbiBhcyBhIGpkLlxuICpcbiAqIFJlc3VsdCBpcyBqZGUgb2YgdGhlIGV2ZW50IGFuZCBkaXN0YW5jZSBmcm9tIHRoZSBzdW4gaW4gQVUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJhYm9saWNEZXNjZW5kaW5nIChxLCBhcmdQLCB0aW1lUCkgeyAvLyAocSwgYXJnUCwgdGltZVAgZmxvYXQ2NCkgIChqZGUsIHIgZmxvYXQ2NClcbiAgcmV0dXJuIHBhKE1hdGguUEkgLSBhcmdQLCBxLCB0aW1lUClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhICjOvSwgcSwgdGltZVApIHsgLy8gKM69LCBxLCB0aW1lUCBmbG9hdDY0KSAgKGpkZSwgciBmbG9hdDY0KVxuICBjb25zdCBzID0gTWF0aC50YW4ozr0gKiAwLjUpXG4gIGNvbnN0IGpkZSA9IHRpbWVQICsgMjcuNDAzODk1ICogcyAqIChzICogcyArIDMpICogcSAqIE1hdGguc3FydChxKVxuICBjb25zdCByID0gcSAqICgxICsgcyAqIHMpXG4gIHJldHVybiBbamRlLCByXVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGVsbGlwdGljQXNjZW5kaW5nLFxuICBlbGxpcHRpY0Rlc2NlbmRpbmcsXG4gIGVsLFxuICBwYXJhYm9saWNBc2NlbmRpbmcsXG4gIHBhcmFib2xpY0Rlc2NlbmRpbmcsXG4gIHBhXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/node.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/nutation.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/nutation.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   approxNutation: () => (/* binding */ approxNutation),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   meanObliquity: () => (/* binding */ meanObliquity),\n/* harmony export */   meanObliquityLaskar: () => (/* binding */ meanObliquityLaskar),\n/* harmony export */   nutation: () => (/* binding */ nutation),\n/* harmony export */   nutationInRA: () => (/* binding */ nutationInRA)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module nutation\n */\n/**\n * Nutation: Chapter 22, Nutation and the Obliquity of the Ecliptic.\n */\n\n\n\n\n// Nutation: Chapter 22, Nutation and the Obliquity of the Ecliptic.\n\n/**\n * Nutation returns nutation in longitude (Δψ) and nutation in obliquity (Δε)\n * for a given JDE.\n *\n * JDE = UT + ΔT, see package.\n *\n * Computation is by 1980 IAU theory, with terms < .0003″ neglected.\n *\n * Result units are radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @return {number[]} [Δψ, Δε] - [longitude, obliquity] in radians\n */\nfunction nutation (jde) {\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  // Mean elongation of the Moon from the sun\n  const D = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T,\n    297.85036, 445267.11148, -0.0019142, 1.0 / 189474) * Math.PI / 180\n  // Mean anomaly of the Sun (Earth)\n  const M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T,\n    357.52772, 35999.050340, -0.0001603, -1.0 / 300000) * Math.PI / 180\n  // Mean anomaly of the Moon\n  const N = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T,\n    134.96298, 477198.867398, 0.0086972, 1.0 / 56250) * Math.PI / 180\n  // Moon's argument of latitude\n  const F = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T,\n    93.27191, 483202.017538, -0.0036825, 1.0 / 327270) * Math.PI / 180\n  // Longitude of the ascending node of the Moon's mean orbit on the ecliptic, measured from mean equinox of date\n  const Ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T,\n    125.04452, -1934.136261, 0.0020708, 1.0 / 450000) * Math.PI / 180\n  let Δψ = 0\n  let Δε = 0\n  // sum in reverse order to accumulate smaller terms first\n  for (let i = table22A.length - 1; i >= 0; i--) {\n    const row = table22A[i]\n    const arg = row.d * D + row.m * M + row.n * N + row.f * F + row.ω * Ω\n    const [s, c] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(arg)\n    Δψ += s * (row.s0 + row.s1 * T)\n    Δε += c * (row.c0 + row.c1 * T)\n  }\n  Δψ *= 0.0001 / 3600 * (Math.PI / 180)\n  Δε *= 0.0001 / 3600 * (Math.PI / 180)\n  return [Δψ, Δε] // (Δψ, Δε float)\n}\n/**\n * ApproxNutation returns a fast approximation of nutation in longitude (Δψ)\n * and nutation in obliquity (Δε) for a given JDE.\n *\n * Accuracy is 0.5″ in Δψ, 0.1″ in Δε.\n *\n * Result units are radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @return {number[]} [Δψ, Δε] - [longitude, obliquity] in radians\n */\nfunction approxNutation (jde) {\n  const T = (jde - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000) / 36525\n  const Ω = (125.04452 - 1934.136261 * T) * Math.PI / 180\n  const L = (280.4665 + 36000.7698 * T) * Math.PI / 180\n  const N = (218.3165 + 481267.8813 * T) * Math.PI / 180\n  const [sΩ, cΩ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(Ω)\n  const [s2L, c2L] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * L)\n  const [s2N, c2N] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * N)\n  const [s2Ω, c2Ω] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * Ω)\n  const Δψ = (-17.2 * sΩ - 1.32 * s2L - 0.23 * s2N + 0.21 * s2Ω) / 3600 * (Math.PI / 180)\n  const Δε = (9.2 * cΩ + 0.57 * c2L + 0.1 * c2N - 0.09 * c2Ω) / 3600 * (Math.PI / 180)\n  return [Δψ, Δε] // (Δψ, Δε float)\n}\n\n/**\n * MeanObliquity returns mean obliquity (ε₀) following the IAU 1980\n * polynomial.\n *\n * Accuracy is 1″ over the range 1000 to 3000 years and 10″ over the range\n * 0 to 4000 years.\n *\n * Result unit is radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @return {number} mean obliquity (ε₀)\n */\nfunction meanObliquity (jde) {\n  // (22.2) p. 147\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(\n    _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde),\n    new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Angle(false, 23, 26, 21.448).rad(),\n    -46.815 / 3600 * (Math.PI / 180),\n    -0.00059 / 3600 * (Math.PI / 180),\n    0.001813 / 3600 * (Math.PI / 180)\n  )\n}\n\n/**\n * MeanObliquityLaskar returns mean obliquity (ε₀) following the Laskar\n * 1986 polynomial.\n *\n * Accuracy over the range 1000 to 3000 years is .01″.\n *\n * Accuracy over the valid date range of -8000 to +12000 years is\n * \"a few seconds.\"\n *\n * Result unit is radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @return {number} mean obliquity (ε₀)\n */\nfunction meanObliquityLaskar (jde) {\n  // (22.3) p. 147\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(\n    _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde) * 0.01,\n    new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Angle(false, 23, 26, 21.448).rad(),\n    -4680.93 / 3600 * (Math.PI / 180),\n    -1.55 / 3600 * (Math.PI / 180),\n    1999.25 / 3600 * (Math.PI / 180),\n    -51.38 / 3600 * (Math.PI / 180),\n    -249.67 / 3600 * (Math.PI / 180),\n    -39.05 / 3600 * (Math.PI / 180),\n    7.12 / 3600 * (Math.PI / 180),\n    27.87 / 3600 * (Math.PI / 180),\n    5.79 / 3600 * (Math.PI / 180),\n    2.45 / 3600 * (Math.PI / 180)\n  )\n}\n\n/**\n * NutationInRA returns \"nutation in right ascension\" or \"equation of the\n * equinoxes.\"\n *\n * Result is an angle in radians.\n *\n * @param {number} jde - Julian ephemeris day\n * @return {number} nutation in right ascension\n */\nfunction nutationInRA (jde) {\n  const [Δψ, Δε] = nutation(jde)\n  const ε0 = meanObliquity(jde)\n  return Δψ * Math.cos(ε0 + Δε)\n}\n\nconst table22A = (function () {\n  const PROPS = 'd,m,n,f,ω,s0,s1,c0,c1'.split(',')\n  const tab = [\n    [0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9],\n    [-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1],\n    [0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5],\n    [0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5],\n    [0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1],\n    [0, 0, 1, 0, 0, 712, 0.1, -7, 0],\n    [-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6],\n    [0, 0, 0, 2, 1, -386, -0.4, 200, 0],\n    [0, 0, 1, 2, 2, -301, 0, 129, -0.1],\n    [-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3],\n    [-2, 0, 1, 0, 0, -158, 0, 0, 0],\n    [-2, 0, 0, 2, 1, 129, 0.1, -70, 0],\n    [0, 0, -1, 2, 2, 123, 0, -53, 0],\n    [2, 0, 0, 0, 0, 63, 0, 0, 0],\n    [0, 0, 1, 0, 1, 63, 0.1, -33, 0],\n    [2, 0, -1, 2, 2, -59, 0, 26, 0],\n    [0, 0, -1, 0, 1, -58, -0.1, 32, 0],\n    [0, 0, 1, 2, 1, -51, 0, 27, 0],\n    [-2, 0, 2, 0, 0, 48, 0, 0, 0],\n    [0, 0, -2, 2, 1, 46, 0, -24, 0],\n    [2, 0, 0, 2, 2, -38, 0, 16, 0],\n    [0, 0, 2, 2, 2, -31, 0, 13, 0],\n    [0, 0, 2, 0, 0, 29, 0, 0, 0],\n    [-2, 0, 1, 2, 2, 29, 0, -12, 0],\n    [0, 0, 0, 2, 0, 26, 0, 0, 0],\n    [-2, 0, 0, 2, 0, -22, 0, 0, 0],\n    [0, 0, -1, 2, 1, 21, 0, -10, 0],\n    [0, 2, 0, 0, 0, 17, -0.1, 0, 0],\n    [2, 0, -1, 0, 1, 16, 0, -8, 0],\n    [-2, 2, 0, 2, 2, -16, 0.1, 7, 0],\n    [0, 1, 0, 0, 1, -15, 0, 9, 0],\n    [-2, 0, 1, 0, 1, -13, 0, 7, 0],\n    [0, -1, 0, 0, 1, -12, 0, 6, 0],\n    [0, 0, 2, -2, 0, 11, 0, 0, 0],\n    [2, 0, -1, 2, 1, -10, 0, 5, 0],\n    [2, 0, 1, 2, 2, -8, 0, 3, 0],\n    [0, 1, 0, 2, 2, 7, 0, -3, 0],\n    [-2, 1, 1, 0, 0, -7, 0, 0, 0],\n    [0, -1, 0, 2, 2, -7, 0, 3, 0],\n    [2, 0, 0, 2, 1, -7, 0, 3, 0],\n    [2, 0, 1, 0, 0, 6, 0, 0, 0],\n    [-2, 0, 2, 2, 2, 6, 0, -3, 0],\n    [-2, 0, 1, 2, 1, 6, 0, -3, 0],\n    [2, 0, -2, 0, 1, -6, 0, 3, 0],\n    [2, 0, 0, 0, 1, -6, 0, 3, 0],\n    [0, -1, 1, 0, 0, 5, 0, 0, 0],\n    [-2, -1, 0, 2, 1, -5, 0, 3, 0],\n    [-2, 0, 0, 0, 1, -5, 0, 3, 0],\n    [0, 0, 2, 2, 1, -5, 0, 3, 0],\n    [-2, 0, 2, 0, 1, 4, 0, 0, 0],\n    [-2, 1, 0, 2, 1, 4, 0, 0, 0],\n    [0, 0, 1, -2, 0, 4, 0, 0, 0],\n    [-1, 0, 1, 0, 0, -4, 0, 0, 0],\n    [-2, 1, 0, 0, 0, -4, 0, 0, 0],\n    [1, 0, 0, 0, 0, -4, 0, 0, 0],\n    [0, 0, 1, 2, 0, 3, 0, 0, 0],\n    [0, 0, -2, 2, 2, -3, 0, 0, 0],\n    [-1, -1, 1, 0, 0, -3, 0, 0, 0],\n    [0, 1, 1, 0, 0, -3, 0, 0, 0],\n    [0, -1, 1, 2, 2, -3, 0, 0, 0],\n    [2, -1, -1, 2, 2, -3, 0, 0, 0],\n    [0, 0, 3, 2, 2, -3, 0, 0, 0],\n    [2, -1, 0, 2, 2, -3, 0, 0, 0]\n  ]\n\n  return tab.map((row) => {\n    const o = {}\n    PROPS.forEach((p, i) => {\n      o[p] = row[i]\n    })\n    return o\n  })\n})()\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  nutation,\n  approxNutation,\n  meanObliquity,\n  meanObliquityLaskar,\n  nutationInRA\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/nutation.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/parabolic.js":
/*!**************************************************!*\
  !*** ./node_modules/astronomia/src/parabolic.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Elements: () => (/* binding */ Elements),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module parabolic\n */\n/**\n * Parabolic: Chapter 34, Parabolic Motion.\n */\n\n\n/**\n * Elements holds parabolic elements needed for computing true anomaly and distance.\n */\nclass Elements {\n  /**\n   * @param {Number} timeP - time of perihelion, T\n   * @param {Number} pDis - perihelion distance, q\n   */\n  constructor (timeP, pDis) {\n    this.timeP = timeP\n    this.pDis = pDis\n  }\n\n  /**\n   * AnomalyDistance returns true anomaly and distance of a body in a parabolic orbit of the Sun.\n   *\n   * @param {Number} jde - Julian ephemeris day\n   * @returns {Object} {ano, dist}\n   *   {Number} ano - True anomaly ν in radians.\n   *   {Number} dist - Distance r returned in AU.\n   */\n  anomalyDistance (jde) {\n    const W = 3 * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].K / Math.SQRT2 * (jde - this.timeP) / this.pDis / Math.sqrt(this.pDis)\n    const G = W * 0.5\n    const Y = Math.cbrt(G + Math.sqrt(G * G + 1))\n    const s = Y - 1 / Y\n    const ν = 2 * Math.atan(s)\n    const r = this.pDis * (1 + s * s)\n    return {\n      ano: ν,\n      dist: r\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Elements\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvcGFyYWJvbGljLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0Qjs7QUFFNUI7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZSxTQUFTO0FBQ3hCLFFBQVEsUUFBUTtBQUNoQixRQUFRLFFBQVE7QUFDaEI7QUFDQTtBQUNBLGtCQUFrQixrREFBTTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL3BhcmFib2xpYy5qcz8xM2ZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDEzIFNvbmlhIEtleXNcbiAqIEBjb3B5cmlnaHQgMjAxNiBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgcGFyYWJvbGljXG4gKi9cbi8qKlxuICogUGFyYWJvbGljOiBDaGFwdGVyIDM0LCBQYXJhYm9saWMgTW90aW9uLlxuICovXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5cbi8qKlxuICogRWxlbWVudHMgaG9sZHMgcGFyYWJvbGljIGVsZW1lbnRzIG5lZWRlZCBmb3IgY29tcHV0aW5nIHRydWUgYW5vbWFseSBhbmQgZGlzdGFuY2UuXG4gKi9cbmV4cG9ydCBjbGFzcyBFbGVtZW50cyB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gdGltZVAgLSB0aW1lIG9mIHBlcmloZWxpb24sIFRcbiAgICogQHBhcmFtIHtOdW1iZXJ9IHBEaXMgLSBwZXJpaGVsaW9uIGRpc3RhbmNlLCBxXG4gICAqL1xuICBjb25zdHJ1Y3RvciAodGltZVAsIHBEaXMpIHtcbiAgICB0aGlzLnRpbWVQID0gdGltZVBcbiAgICB0aGlzLnBEaXMgPSBwRGlzXG4gIH1cblxuICAvKipcbiAgICogQW5vbWFseURpc3RhbmNlIHJldHVybnMgdHJ1ZSBhbm9tYWx5IGFuZCBkaXN0YW5jZSBvZiBhIGJvZHkgaW4gYSBwYXJhYm9saWMgb3JiaXQgb2YgdGhlIFN1bi5cbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGpkZSAtIEp1bGlhbiBlcGhlbWVyaXMgZGF5XG4gICAqIEByZXR1cm5zIHtPYmplY3R9IHthbm8sIGRpc3R9XG4gICAqICAge051bWJlcn0gYW5vIC0gVHJ1ZSBhbm9tYWx5IM69IGluIHJhZGlhbnMuXG4gICAqICAge051bWJlcn0gZGlzdCAtIERpc3RhbmNlIHIgcmV0dXJuZWQgaW4gQVUuXG4gICAqL1xuICBhbm9tYWx5RGlzdGFuY2UgKGpkZSkge1xuICAgIGNvbnN0IFcgPSAzICogYmFzZS5LIC8gTWF0aC5TUVJUMiAqIChqZGUgLSB0aGlzLnRpbWVQKSAvIHRoaXMucERpcyAvIE1hdGguc3FydCh0aGlzLnBEaXMpXG4gICAgY29uc3QgRyA9IFcgKiAwLjVcbiAgICBjb25zdCBZID0gTWF0aC5jYnJ0KEcgKyBNYXRoLnNxcnQoRyAqIEcgKyAxKSlcbiAgICBjb25zdCBzID0gWSAtIDEgLyBZXG4gICAgY29uc3Qgzr0gPSAyICogTWF0aC5hdGFuKHMpXG4gICAgY29uc3QgciA9IHRoaXMucERpcyAqICgxICsgcyAqIHMpXG4gICAgcmV0dXJuIHtcbiAgICAgIGFubzogzr0sXG4gICAgICBkaXN0OiByXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgRWxlbWVudHNcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/parabolic.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/parallactic.js":
/*!****************************************************!*\
  !*** ./node_modules/astronomia/src/parallactic.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   diurnalPathAtHorizon: () => (/* binding */ diurnalPathAtHorizon),\n/* harmony export */   eclipticAtEquator: () => (/* binding */ eclipticAtEquator),\n/* harmony export */   eclipticAtHorizon: () => (/* binding */ eclipticAtHorizon),\n/* harmony export */   parallacticAngle: () => (/* binding */ parallacticAngle),\n/* harmony export */   parallacticAngleOnHorizon: () => (/* binding */ parallacticAngleOnHorizon)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module parallactic\n */\n/**\n * Parallactic: Chapter 14, The Parallactic Angle, and three other Topics.\n */\n\n\n\n/**\n * ParallacticAngle returns parallactic angle of a celestial object.\n *\n *  φ is geographic latitude of observer.\n *  δ is declination of observed object.\n *  H is hour angle of observed object.\n *\n * All angles including result are in radians.\n */\nfunction parallacticAngle (φ, δ, H) { // (φ, δ, H float64)  float64\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n  return Math.atan2(sH, Math.tan(φ) * cδ - sδ * cH) // (14.1) p. 98\n}\n\n/**\n * ParallacticAngleOnHorizon is a special case of ParallacticAngle.\n *\n * The hour angle is not needed as an input and the math inside simplifies.\n */\nfunction parallacticAngleOnHorizon (φ, δ) { // (φ, δ float64)  float64\n  return Math.acos(Math.sin(φ) / Math.cos(δ))\n}\n\n/**\n * EclipticAtHorizon computes how the plane of the ecliptic intersects\n * the horizon at a given local sidereal time as observed from a given\n * geographic latitude.\n *\n *  ε is obliquity of the ecliptic.\n *  φ is geographic latitude of observer.\n *  θ is local sidereal time expressed as an hour angle.\n *\n *  λ1 and λ2 are ecliptic longitudes where the ecliptic intersects the horizon.\n *  I is the angle at which the ecliptic intersects the horizon.\n *\n * All angles, arguments and results, are in radians.\n */\nfunction eclipticAtHorizon (ε, φ, θ) { // (ε, φ, θ float64)  (λ1, λ2, I float64)\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(φ)\n  const [sθ, cθ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(θ)\n  let λ = Math.atan2(-cθ, sε * (sφ / cφ) + cε * sθ) // (14.2) p. 99\n  if (λ < 0) {\n    λ += Math.PI\n  }\n  return [λ, λ + Math.PI, Math.acos(cε * sφ - sε * cφ * sθ)] // (14.3) p. 99\n}\n\n/**\n * EclipticAtEquator computes the angle between the ecliptic and the parallels\n * of ecliptic latitude at a given ecliptic longitude.\n *\n * (The function name EclipticAtEquator is for consistency with the Meeus text,\n * and works if you consider the equator a nominal parallel of latitude.)\n *\n *  λ is ecliptic longitude.\n *  ε is obliquity of the ecliptic.\n *\n * All angles in radians.\n */\nfunction eclipticAtEquator (λ, ε) { // (λ, ε float64)  float64\n  return Math.atan(-Math.cos(λ) * Math.tan(ε))\n}\n\n/**\n * DiurnalPathAtHorizon computes the angle of the path a celestial object\n * relative to the horizon at the time of its rising or setting.\n *\n *  δ is declination of the object.\n *  φ is geographic latitude of observer.\n *\n * All angles in radians.\n */\nfunction diurnalPathAtHorizon (δ, φ) { // (δ, φ float64)  (J float64)\n  const tφ = Math.tan(φ)\n  const b = Math.tan(δ) * tφ\n  const c = Math.sqrt(1 - b * b)\n  return Math.atan(c * Math.cos(δ) / tφ)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  parallacticAngle,\n  parallacticAngleOnHorizon,\n  eclipticAtHorizon,\n  eclipticAtEquator,\n  diurnalPathAtHorizon\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvcGFyYWxsYWN0aWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNDQUFzQztBQUM3QyxtQkFBbUIsdURBQVc7QUFDOUIsbUJBQW1CLHVEQUFXO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRDQUE0QztBQUNuRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1Q0FBdUM7QUFDOUMsbUJBQW1CLHVEQUFXO0FBQzlCLG1CQUFtQix1REFBVztBQUM5QixtQkFBbUIsdURBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9DQUFvQztBQUMzQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHVDQUF1QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvcGFyYWxsYWN0aWMuanM/MjhjYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIHBhcmFsbGFjdGljXG4gKi9cbi8qKlxuICogUGFyYWxsYWN0aWM6IENoYXB0ZXIgMTQsIFRoZSBQYXJhbGxhY3RpYyBBbmdsZSwgYW5kIHRocmVlIG90aGVyIFRvcGljcy5cbiAqL1xuXG5pbXBvcnQgYmFzZSBmcm9tICcuL2Jhc2UuanMnXG5cbi8qKlxuICogUGFyYWxsYWN0aWNBbmdsZSByZXR1cm5zIHBhcmFsbGFjdGljIGFuZ2xlIG9mIGEgY2VsZXN0aWFsIG9iamVjdC5cbiAqXG4gKiAgz4YgaXMgZ2VvZ3JhcGhpYyBsYXRpdHVkZSBvZiBvYnNlcnZlci5cbiAqICDOtCBpcyBkZWNsaW5hdGlvbiBvZiBvYnNlcnZlZCBvYmplY3QuXG4gKiAgSCBpcyBob3VyIGFuZ2xlIG9mIG9ic2VydmVkIG9iamVjdC5cbiAqXG4gKiBBbGwgYW5nbGVzIGluY2x1ZGluZyByZXN1bHQgYXJlIGluIHJhZGlhbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJhbGxhY3RpY0FuZ2xlICjPhiwgzrQsIEgpIHsgLy8gKM+GLCDOtCwgSCBmbG9hdDY0KSAgZmxvYXQ2NFxuICBjb25zdCBbc860LCBjzrRdID0gYmFzZS5zaW5jb3MozrQpXG4gIGNvbnN0IFtzSCwgY0hdID0gYmFzZS5zaW5jb3MoSClcbiAgcmV0dXJuIE1hdGguYXRhbjIoc0gsIE1hdGgudGFuKM+GKSAqIGPOtCAtIHPOtCAqIGNIKSAvLyAoMTQuMSkgcC4gOThcbn1cblxuLyoqXG4gKiBQYXJhbGxhY3RpY0FuZ2xlT25Ib3Jpem9uIGlzIGEgc3BlY2lhbCBjYXNlIG9mIFBhcmFsbGFjdGljQW5nbGUuXG4gKlxuICogVGhlIGhvdXIgYW5nbGUgaXMgbm90IG5lZWRlZCBhcyBhbiBpbnB1dCBhbmQgdGhlIG1hdGggaW5zaWRlIHNpbXBsaWZpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJhbGxhY3RpY0FuZ2xlT25Ib3Jpem9uICjPhiwgzrQpIHsgLy8gKM+GLCDOtCBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gTWF0aC5hY29zKE1hdGguc2luKM+GKSAvIE1hdGguY29zKM60KSlcbn1cblxuLyoqXG4gKiBFY2xpcHRpY0F0SG9yaXpvbiBjb21wdXRlcyBob3cgdGhlIHBsYW5lIG9mIHRoZSBlY2xpcHRpYyBpbnRlcnNlY3RzXG4gKiB0aGUgaG9yaXpvbiBhdCBhIGdpdmVuIGxvY2FsIHNpZGVyZWFsIHRpbWUgYXMgb2JzZXJ2ZWQgZnJvbSBhIGdpdmVuXG4gKiBnZW9ncmFwaGljIGxhdGl0dWRlLlxuICpcbiAqICDOtSBpcyBvYmxpcXVpdHkgb2YgdGhlIGVjbGlwdGljLlxuICogIM+GIGlzIGdlb2dyYXBoaWMgbGF0aXR1ZGUgb2Ygb2JzZXJ2ZXIuXG4gKiAgzrggaXMgbG9jYWwgc2lkZXJlYWwgdGltZSBleHByZXNzZWQgYXMgYW4gaG91ciBhbmdsZS5cbiAqXG4gKiAgzrsxIGFuZCDOuzIgYXJlIGVjbGlwdGljIGxvbmdpdHVkZXMgd2hlcmUgdGhlIGVjbGlwdGljIGludGVyc2VjdHMgdGhlIGhvcml6b24uXG4gKiAgSSBpcyB0aGUgYW5nbGUgYXQgd2hpY2ggdGhlIGVjbGlwdGljIGludGVyc2VjdHMgdGhlIGhvcml6b24uXG4gKlxuICogQWxsIGFuZ2xlcywgYXJndW1lbnRzIGFuZCByZXN1bHRzLCBhcmUgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVjbGlwdGljQXRIb3Jpem9uICjOtSwgz4YsIM64KSB7IC8vICjOtSwgz4YsIM64IGZsb2F0NjQpICAozrsxLCDOuzIsIEkgZmxvYXQ2NClcbiAgY29uc3QgW3POtSwgY861XSA9IGJhc2Uuc2luY29zKM61KVxuICBjb25zdCBbc8+GLCBjz4ZdID0gYmFzZS5zaW5jb3Moz4YpXG4gIGNvbnN0IFtzzrgsIGPOuF0gPSBiYXNlLnNpbmNvcyjOuClcbiAgbGV0IM67ID0gTWF0aC5hdGFuMigtY864LCBzzrUgKiAoc8+GIC8gY8+GKSArIGPOtSAqIHPOuCkgLy8gKDE0LjIpIHAuIDk5XG4gIGlmICjOuyA8IDApIHtcbiAgICDOuyArPSBNYXRoLlBJXG4gIH1cbiAgcmV0dXJuIFvOuywgzrsgKyBNYXRoLlBJLCBNYXRoLmFjb3MoY861ICogc8+GIC0gc861ICogY8+GICogc864KV0gLy8gKDE0LjMpIHAuIDk5XG59XG5cbi8qKlxuICogRWNsaXB0aWNBdEVxdWF0b3IgY29tcHV0ZXMgdGhlIGFuZ2xlIGJldHdlZW4gdGhlIGVjbGlwdGljIGFuZCB0aGUgcGFyYWxsZWxzXG4gKiBvZiBlY2xpcHRpYyBsYXRpdHVkZSBhdCBhIGdpdmVuIGVjbGlwdGljIGxvbmdpdHVkZS5cbiAqXG4gKiAoVGhlIGZ1bmN0aW9uIG5hbWUgRWNsaXB0aWNBdEVxdWF0b3IgaXMgZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIE1lZXVzIHRleHQsXG4gKiBhbmQgd29ya3MgaWYgeW91IGNvbnNpZGVyIHRoZSBlcXVhdG9yIGEgbm9taW5hbCBwYXJhbGxlbCBvZiBsYXRpdHVkZS4pXG4gKlxuICogIM67IGlzIGVjbGlwdGljIGxvbmdpdHVkZS5cbiAqICDOtSBpcyBvYmxpcXVpdHkgb2YgdGhlIGVjbGlwdGljLlxuICpcbiAqIEFsbCBhbmdsZXMgaW4gcmFkaWFucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVjbGlwdGljQXRFcXVhdG9yICjOuywgzrUpIHsgLy8gKM67LCDOtSBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gTWF0aC5hdGFuKC1NYXRoLmNvcyjOuykgKiBNYXRoLnRhbijOtSkpXG59XG5cbi8qKlxuICogRGl1cm5hbFBhdGhBdEhvcml6b24gY29tcHV0ZXMgdGhlIGFuZ2xlIG9mIHRoZSBwYXRoIGEgY2VsZXN0aWFsIG9iamVjdFxuICogcmVsYXRpdmUgdG8gdGhlIGhvcml6b24gYXQgdGhlIHRpbWUgb2YgaXRzIHJpc2luZyBvciBzZXR0aW5nLlxuICpcbiAqICDOtCBpcyBkZWNsaW5hdGlvbiBvZiB0aGUgb2JqZWN0LlxuICogIM+GIGlzIGdlb2dyYXBoaWMgbGF0aXR1ZGUgb2Ygb2JzZXJ2ZXIuXG4gKlxuICogQWxsIGFuZ2xlcyBpbiByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGl1cm5hbFBhdGhBdEhvcml6b24gKM60LCDPhikgeyAvLyAozrQsIM+GIGZsb2F0NjQpICAoSiBmbG9hdDY0KVxuICBjb25zdCB0z4YgPSBNYXRoLnRhbijPhilcbiAgY29uc3QgYiA9IE1hdGgudGFuKM60KSAqIHTPhlxuICBjb25zdCBjID0gTWF0aC5zcXJ0KDEgLSBiICogYilcbiAgcmV0dXJuIE1hdGguYXRhbihjICogTWF0aC5jb3MozrQpIC8gdM+GKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHBhcmFsbGFjdGljQW5nbGUsXG4gIHBhcmFsbGFjdGljQW5nbGVPbkhvcml6b24sXG4gIGVjbGlwdGljQXRIb3Jpem9uLFxuICBlY2xpcHRpY0F0RXF1YXRvcixcbiAgZGl1cm5hbFBhdGhBdEhvcml6b25cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/parallactic.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/parallax.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/parallax.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   horizontal: () => (/* binding */ horizontal),\n/* harmony export */   topocentric: () => (/* binding */ topocentric),\n/* harmony export */   topocentric2: () => (/* binding */ topocentric2),\n/* harmony export */   topocentric3: () => (/* binding */ topocentric3),\n/* harmony export */   topocentricEcliptical: () => (/* binding */ topocentricEcliptical)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _globe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globe.js */ \"./node_modules/astronomia/src/globe.js\");\n/* harmony import */ var _sidereal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sidereal.js */ \"./node_modules/astronomia/src/sidereal.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module parallax\n */\n/**\n * Parallax: Chapter 40, Correction for Parallax.\n */\n\n // eslint-disable-line no-unused-vars\n\n\n\n\nconst horPar = (8.794 / 3600) * Math.PI / 180 // 8\".794 arcseconds in radians\n\n/**\n * Horizontal returns equatorial horizontal parallax of a body.\n *\n * @param {number} Δ - distance in AU.\n * @return {number} parallax in radians.\n */\nfunction horizontal (Δ) {\n  // (40.1) p. 279\n  return Math.asin(Math.sin(horPar) / Δ)\n  // return horPar / Δ // with sufficient accuracy\n}\n\n/**\n * Topocentric returns topocentric positions including parallax.\n *\n * Arguments α, δ are geocentric right ascension and declination in radians.\n * Δ is distance to the observed object in AU. ρsφ, ρcφ are parallax\n * constants (see package globe.) lon is geographic longitude of the observer,\n * jde is time of observation.\n *\n * @param {Coord} c - geocentric right ascension and declination in radians\n * @param {number} ρsφ - parallax constants (see package globe.)\n * @param {number} ρcφ - parallax constants (see package globe.)\n * @param {number} lon - geographic longitude of the observer (measured positively westwards!)\n * @param {number} jde - time of observation\n * @return {Coord} observed topocentric ra and dec in radians.\n */\nfunction topocentric (c, ρsφ, ρcφ, lon, jde) {\n  const [α, δ, Δ] = [c.ra, c.dec, c.range]\n  const π = horizontal(Δ)\n  const θ0 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Time(_sidereal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].apparent(jde)).rad()\n  const H = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(θ0 - lon - α, 2 * Math.PI)\n  const sπ = Math.sin(π)\n  const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const Δα = Math.atan2(-ρcφ * sπ * sH, cδ - ρcφ * sπ * cH) // (40.2) p. 279\n  const α_ = α + Δα\n  const δ_ = Math.atan2((sδ - ρsφ * sπ) * Math.cos(Δα), cδ - ρcφ * sπ * cH) // (40.3) p. 279\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__.Coord(α_, δ_)\n}\n\n/**\n * Topocentric2 returns topocentric corrections including parallax.\n *\n * This function implements the \"non-rigorous\" method descripted in the text.\n *\n * Note that results are corrections, not corrected coordinates.\n *\n * @param {Coord} c - geocentric right ascension and declination in radians\n * @param {number} ρsφ - parallax constants (see package globe.)\n * @param {number} ρcφ - parallax constants (see package globe.)\n * @param {number} lon - geographic longitude of the observer (measured positively westwards!)\n * @param {number} jde - time of observation\n * @return {Coord} observed topocentric ra and dec in radians.\n */\nfunction topocentric2 (c, ρsφ, ρcφ, lon, jde) {\n  const [α, δ, Δ] = [c.ra, c.dec, c.range]\n  const π = horizontal(Δ)\n  const θ0 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Time(_sidereal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].apparent(jde)).rad()\n  const H = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(θ0 - lon - α, 2 * Math.PI)\n  const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const Δα = -π * ρcφ * sH / cδ // (40.4) p. 280\n  const Δδ = -π * (ρsφ * cδ - ρcφ * cH * sδ) // (40.5) p. 280\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(Δα, Δδ)\n}\n\n/**\n * Topocentric3 returns topocentric hour angle and declination including parallax.\n *\n * This function implements the \"alternative\" method described in the text.\n * The method should be similarly rigorous to that of Topocentric() and results\n * should be virtually consistent.\n *\n * @param {Coord} c - geocentric right ascension and declination in radians\n * @param {number} ρsφ - parallax constants (see package globe.)\n * @param {number} ρcφ - parallax constants (see package globe.)\n * @param {number} lon - geographic longitude of the observer (measured positively westwards!)\n * @param {number} jde - time of observation\n * @return {Array}\n *    {number} H_ - topocentric hour angle\n *    {number} δ_ - topocentric declination\n */\nfunction topocentric3 (c, ρsφ, ρcφ, lon, jde) {\n  const [α, δ, Δ] = [c.ra, c.dec, c.range]\n  const π = horizontal(Δ)\n  const θ0 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Time(_sidereal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].apparent(jde)).rad()\n  const H = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(θ0 - lon - α, 2 * Math.PI)\n  const sπ = Math.sin(π)\n  const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n  const A = cδ * sH\n  const B = cδ * cH - ρcφ * sπ\n  const C = sδ - ρsφ * sπ\n  const q = Math.sqrt(A * A + B * B + C * C)\n  const H_ = Math.atan2(A, B)\n  const δ_ = Math.asin(C / q)\n  return [H_, δ_]\n}\n\n/**\n * TopocentricEcliptical returns topocentric ecliptical coordinates including parallax.\n *\n * Arguments `c` are geocentric ecliptical longitude and latitude of a body,\n * s is its geocentric semidiameter. φ, h are the observer's latitude and\n * and height above the ellipsoid in meters.  ε is the obliquity of the\n * ecliptic, θ is local sidereal time, π is equatorial horizontal parallax\n * of the body (see Horizonal()).\n *\n * All angular parameters and results are in radians.\n *\n * @param {Coord} c - geocentric right ascension and declination in radians\n * @param {number} s - geocentric semidiameter of `c`\n * @param {number} φ - observer's latitude\n * @param {number} h - observer's height above the ellipsoid in meters\n * @param {number} ε - is the obliquity of the ecliptic\n * @param {number} θ - local sidereal time\n * @param {number} π - equatorial horizontal parallax of the body\n * @return {Array}\n *    {number} λ_ - observed topocentric longitude\n *    {number} β_ - observed topocentric latitude\n *    {number} s_ - observed topocentric semidiameter\n */\nfunction topocentricEcliptical (c, s, φ, h, ε, θ, π) {\n  const [λ, β] = [c.lon, c.lat]\n  const [S, C] = _globe_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Earth76.parallaxConstants(φ, h)\n  const [sλ, cλ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λ)\n  const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β)\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  const [sθ, cθ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(θ)\n  const sπ = Math.sin(π)\n  const N = cλ * cβ - C * sπ * cθ\n  let λ_ = Math.atan2(sλ * cβ - sπ * (S * sε + C * cε * sθ), N)\n  if (λ_ < 0) {\n    λ_ += 2 * Math.PI\n  }\n  const cλ_ = Math.cos(λ_)\n  const β_ = Math.atan(cλ_ * (sβ - sπ * (S * cε - C * sε * sθ)) / N)\n  const s_ = Math.asin(cλ_ * Math.cos(β_) * Math.sin(s) / N)\n  return [λ_, β_, s_]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  horizontal,\n  topocentric,\n  topocentric2,\n  topocentric3,\n  topocentricEcliptical\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/parallax.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/perihelion.js":
/*!***************************************************!*\
  !*** ./node_modules/astronomia/src/perihelion.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aphelion: () => (/* binding */ aphelion),\n/* harmony export */   aphelion2: () => (/* binding */ aphelion2),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   earth: () => (/* binding */ earth),\n/* harmony export */   embary: () => (/* binding */ embary),\n/* harmony export */   jupiter: () => (/* binding */ jupiter),\n/* harmony export */   mars: () => (/* binding */ mars),\n/* harmony export */   mercury: () => (/* binding */ mercury),\n/* harmony export */   neptune: () => (/* binding */ neptune),\n/* harmony export */   perihelion: () => (/* binding */ perihelion),\n/* harmony export */   perihelion2: () => (/* binding */ perihelion2),\n/* harmony export */   saturn: () => (/* binding */ saturn),\n/* harmony export */   uranus: () => (/* binding */ uranus),\n/* harmony export */   venus: () => (/* binding */ venus)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/* eslint-disable n/no-callback-literal */\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module perihelion\n */\n/**\n * Perihelion: Chapter 38, Planets in Perihelion and Aphelion.\n *\n * Functions Aphelion and Perihelion implement algorithms from the book\n * to return approximate results.\n *\n * For accurate results, Meeus describes the general technique of\n * interpolating from a precise ephemeris but does not give a complete\n * algorithm.  The algorithm implemented here for Aphelion2 and Perihelion2\n * is to start with the approximate result and then crawl along the curve\n * at the specified time resolution until the desired extremum is found.\n * This algorithm slows down as higher accuracy is demanded.  1 day accuracy\n * is generally quick for planets other than Neptune.\n *\n * Meeus doesn't give an algorithm to handle the double extrema of Neptune.\n * The algorithm here is to pick starting points several years either side\n * of the approximate date and follow the slopes inward.  The consequence of\n * starting farther from the extremum is that these functions are particularly\n * slow for Neptune.  They are offered here though as a simple implementation\n * of Meeus's presentation in the book.\n */\n\n\n // eslint-disable-line no-unused-vars\n\n/**\n * Planet constants for first argument of Perihelion and Aphelion functions.\n * @enum {number}\n */\nconst planetsEnum = {\n  mercury: 0,\n  venus: 1,\n  earth: 2,\n  mars: 3,\n  jupiter: 4,\n  saturn: 5,\n  uranus: 6,\n  neptune: 7,\n  embary: 8\n}\nconst mercury = planetsEnum.mercury\nconst venus = planetsEnum.venus\nconst earth = planetsEnum.earth\nconst mars = planetsEnum.mars\nconst jupiter = planetsEnum.jupiter\nconst saturn = planetsEnum.saturn\nconst uranus = planetsEnum.uranus\nconst neptune = planetsEnum.neptune\nconst embary = planetsEnum.embary\n\n/**\n * Perihelion returns an approximate jde of the perihelion event nearest the given time.\n *\n * @param {planetsEnum} p - planet constant from above\n * @param {Number} year - year number indicating a time near the perihelion event.\n * @returns {Number} jde - time of the event\n */\nfunction perihelion (p, year) {\n  return ap(p, year, false, pf)\n}\n\n/**\n * Aphelion returns an approximate jde of the aphelion event nearest the given time.\n *\n * @param {planetsEnum} p - planet constant from above\n * @param {Number} year - year number indicating a time near the aphelion event.\n * @returns {Number} jde - time of the event\n */\nfunction aphelion (p, year) {\n  return ap(p, year, true, af)\n}\n\nconst pf = function (x) { // (x float64)  float64\n  return Math.floor(x + 0.5)\n}\n\nconst af = function (x) { // (x float64)  float64\n  return Math.floor(x) + 0.5\n}\n\nconst ap = function (p, y, a, f) { // (p int, y float64, a bool, f func(float64)  float64) float64\n  let i = p\n  if (i === embary) {\n    i = earth\n  }\n  const k = f(ka[i].a * (y - ka[i].b))\n  let j = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(k, ...c[i])\n  if (p === earth) {\n    let c = ep\n    if (a) {\n      c = ea\n    }\n    for (let i = 0; i < 5; i++) {\n      j += c[i] * Math.sin((ec[i].a + ec[i].b * k) * Math.PI / 180)\n    }\n  }\n  return j\n}\n\nconst ka = [\n  { a: 4.15201, b: 2000.12 }, // mercury\n  { a: 1.62549, b: 2000.53 }, // ...\n  { a: 0.99997, b: 2000.01 },\n  { a: 0.53166, b: 2001.78 },\n  { a: 0.0843, b: 2011.2 },\n  { a: 0.03393, b: 2003.52 },\n  { a: 0.0119, b: 2051.1 },\n  { a: 0.00607, b: 2047.5 } // neptune\n]\n\nconst c = [\n  [2451590.257, 87.96934963], // mercury\n  [2451738.233, 224.7008188, -0.0000000327], // ...\n  [2451547.507, 365.2596358, 0.0000000156],\n  [2452195.026, 686.9957857, -0.0000001187],\n  [2455636.936, 4332.897065, 0.0001367],\n  [2452830.12, 10764.21676, 0.000827],\n  [2470213.5, 30694.8767, -0.00541],\n  [2468895.1, 60190.33, 0.03429] // neptune\n]\n\nconst ec = [\n  { a: 328.41, b: 132.788585 },\n  { a: 316.13, b: 584.903153 },\n  { a: 346.2, b: 450.380738 },\n  { a: 136.95, b: 659.306737 },\n  { a: 249.52, b: 329.653368 }\n]\n\nconst ep = [1.278, -0.055, -0.091, -0.056, -0.045]\nconst ea = [-1.352, 0.061, 0.062, 0.029, 0.031]\n\n/**\n * Perihelion2 returns the perihelion event nearest the given time.\n *\n * @param {Planet} planet - VSOP87 planet (EMBary is not allowed)\n * @param {Number} year - (float) decimal year number near the perihelion event\n * @param {Number} precision - desired precision of the time result, in days\n * @param {Function} [cb] - callback function for asynchronous processing `cb([jde, r])`\n * @returns {Array} [jde, r]\n *   {Number} jde - time of the event\n *   {Number} r - the distance of the planet from the Sun in AU.\n */\nfunction perihelion2 (planet, year, precision, cb) {\n  return ap2(planetsEnum[planet.name], year, precision, planet, false, pf, cb)\n}\n\n/**\n * Aphelion2 returns the aphelion event nearest the given time.\n *\n * @param {Planet} planet - VSOP87 planet (EMBary is not allowed)\n * @param {Number} year - (float) decimal year number near the perihelion event\n * @param {Number} precision - desired precision of the time result, in days\n * @param {Function} [cb] - callback function for asynchronous processing `cb([jde, r])`\n * @returns {Array} [jde, r]\n *   {Number} jde - time of the event\n *   {Number} r - the distance of the planet from the Sun in AU.\n */\nfunction aphelion2 (planet, year, precision, cb) {\n  return ap2(planetsEnum[planet.name], year, precision, planet, true, af, cb)\n}\n\nif (typeof setImmediate !== 'function') {\n  const setImmediate = setTimeout // eslint-disable-line no-unused-vars\n}\n\nconst ap2 = function (p, y, d, v, a, f, cb) {\n  const j1 = ap(p, y, a, f)\n  if (p !== neptune) {\n    return ap2a(j1, d, a, v, cb)\n  }\n  // handle the double extrema of Neptune\n  if (cb) {\n    ap2a(j1 - 5000, d, a, v, ([j0, r0]) => {\n      ap2a(j1 + 5000, d, a, v, ([j2, r2]) => {\n        if ((r0 > r2) === a) {\n          cb([j0, r0])\n          return\n        }\n        cb([j2, r2])\n      })\n    })\n  } else {\n    const [j0, r0] = ap2a(j1 - 5000, d, a, v)\n    const [j2, r2] = ap2a(j1 + 5000, d, a, v)\n    if ((r0 > r2) === a) {\n      return [j0, r0]\n    }\n    return [j2, r2]\n  }\n}\n\nconst ap2a = function (j1, d, a, v, cb) {\n  let j0 = j1 - d\n  let j2 = j1 + d\n  const rr = new Array(3)\n  rr[1] = v.position2000(j1).range\n  rr[0] = v.position2000(j0).range\n  rr[2] = v.position2000(j2).range\n\n  function end () {\n    const l = new _interpolation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Len3(j0, j2, rr)\n    const [jde, r] = l.extremum()\n    return [jde, r]\n  }\n\n  function run () {\n    if (a) {\n      if (rr[1] > rr[0] && rr[1] > rr[2]) {\n        cb && cb(end())\n        return true\n      }\n    } else {\n      if (rr[1] < rr[0] && rr[1] < rr[2]) {\n        cb && cb(end())\n        return true\n      }\n    }\n    if ((rr[0] < rr[2]) === a) {\n      j0 = j1\n      j1 = j2\n      j2 += d\n      rr[0] = rr[1]\n      rr[1] = rr[2]\n      rr[2] = v.position2000(j2).range\n    } else {\n      j2 = j1\n      j1 = j0\n      j0 -= d\n      rr[2] = rr[1]\n      rr[1] = rr[0]\n      rr[0] = v.position2000(j0).range\n    }\n    if (cb) {\n      setImmediate(run, 0)\n    }\n  }\n\n  if (cb) {\n    run()\n  } else {\n    for (;;) {\n      if (run()) {\n        return end()\n      }\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  mercury,\n  venus,\n  earth,\n  mars,\n  jupiter,\n  saturn,\n  uranus,\n  neptune,\n  embary,\n  perihelion,\n  aphelion,\n  perihelion2,\n  aphelion2\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/perihelion.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/planetary.js":
/*!**************************************************!*\
  !*** ./node_modules/astronomia/src/planetary.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   el: () => (/* binding */ el),\n/* harmony export */   jupiterOpp: () => (/* binding */ jupiterOpp),\n/* harmony export */   marsOpp: () => (/* binding */ marsOpp),\n/* harmony export */   marsStation2: () => (/* binding */ marsStation2),\n/* harmony export */   mean: () => (/* binding */ mean),\n/* harmony export */   mercuryEastElongation: () => (/* binding */ mercuryEastElongation),\n/* harmony export */   mercuryInfConj: () => (/* binding */ mercuryInfConj),\n/* harmony export */   mercurySupConj: () => (/* binding */ mercurySupConj),\n/* harmony export */   mercuryWestElongation: () => (/* binding */ mercuryWestElongation),\n/* harmony export */   ms: () => (/* binding */ ms),\n/* harmony export */   msa: () => (/* binding */ msa),\n/* harmony export */   neptuneOpp: () => (/* binding */ neptuneOpp),\n/* harmony export */   saturnConj: () => (/* binding */ saturnConj),\n/* harmony export */   saturnOpp: () => (/* binding */ saturnOpp),\n/* harmony export */   sum: () => (/* binding */ sum),\n/* harmony export */   sumA: () => (/* binding */ sumA),\n/* harmony export */   uranusOpp: () => (/* binding */ uranusOpp),\n/* harmony export */   venusInfConj: () => (/* binding */ venusInfConj)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module planetary\n */\n/**\n * Planetary: Chapter 36, The Calculation of some Planetary Phenomena.\n *\n * Incomplete: Some functions unimplemented for lack of test data.\n */\n\n\n\n/**\n * Mean computes some intermediate values for a mean planetary configuration\n * given a year and a row of coefficients from Table 36.A, p. 250.0\n */\nfunction mean (y, a) { // (y float64, a *ca)  (J, M, T float64)\n  // (36.1) p. 250\n  const k = Math.floor((365.2425 * y + 1721060 - a.A) / a.B + 0.5)\n  const J = a.A + k * a.B\n  const M = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(a.M0 + k * a.M1, 360) * Math.PI / 180\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(J)\n  return [J, M, T]\n}\n\n/**\n * Sum computes a sum of periodic terms.\n */\nfunction sum (T, M, c) { // (T, M float64, c [][]float64)  float64\n  let j = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c[0])\n  let mm = 0.0\n  for (let i = 1; i < c.length; i++) {\n    mm += M\n    const [smm, cmm] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(mm)\n    j += smm * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c[i])\n    i++\n    j += cmm * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c[i])\n  }\n  return j\n}\n\n/**\n * ms returns a mean time corrected by a sum.\n */\nfunction ms (y, a, c) { // (y float64, a *ca, c [][]float64)  float64\n  const [J, M, T] = mean(y, a)\n  return J + sum(T, M, c)\n}\n\n/**\n * MercuryInfConj returns the time of an inferior conjunction of Mercury.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction mercuryInfConj (y) { // (y float64)  (jde float64)\n  return ms(y, micA, micB)\n}\n\n/**\n * MercurySupConj returns the time of a superior conjunction of Mercury.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction mercurySupConj (y) { // (y float64)  (jde float64)\n  return ms(y, mscA, mscB)\n}\n\n/**\n * VenusInfConj returns the time of an inferior conjunction of Venus.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction venusInfConj (y) { // (y float64)  (jde float64)\n  return ms(y, vicA, vicB)\n}\n\n/**\n * MarsOpp returns the time of an opposition of Mars.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction marsOpp (y) { // (y float64)  (jde float64)\n  return ms(y, moA, moB)\n}\n\n/**\n * SumA computes the sum of periodic terms with \"additional angles\"\n */\nfunction sumA (T, M, c, aa) { // (T, M float64, c [][]float64, aa []caa)  float64\n  let i = c.length - 2 * aa.length\n  let j = sum(T, M, c.slice(0, i))\n  for (let k = 0; k < aa.length; k++) {\n    const [saa, caa] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos((aa[k].c + aa[k].f * T) * Math.PI / 180)\n    j += saa * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c[i])\n    i++\n    j += caa * _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c[i])\n    i++\n  }\n  return j\n}\n\n/**\n * Msa returns a mean time corrected by a sum.\n */\nfunction msa (y, a, c, aa) { // (y float64, a *ca, c [][]float64, aa []caa)  float64\n  const [J, M, T] = mean(y, a)\n  return J + sumA(T, M, c, aa)\n}\n\n/**\n * JupiterOpp returns the time of an opposition of Jupiter.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction jupiterOpp (y) { // (y float64)  (jde float64)\n  return msa(y, joA, joB, jaa)\n}\n\n/**\n * SaturnOpp returns the time of an opposition of Saturn.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction saturnOpp (y) { // (y float64)  (jde float64)\n  return msa(y, soA, soB, saa)\n}\n\n/**\n * SaturnConj returns the time of a conjunction of Saturn.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction saturnConj (y) { // (y float64)  (jde float64)\n  return msa(y, scA, scB, saa)\n}\n\n/**\n * UranusOpp returns the time of an opposition of Uranus.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction uranusOpp (y) { // (y float64)  (jde float64)\n  return msa(y, uoA, uoB, uaa)\n}\n\n/**\n * NeptuneOpp returns the time of an opposition of Neptune.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction neptuneOpp (y) { // (y float64)  (jde float64)\n  return msa(y, noA, noB, naa)\n}\n\n/**\n * El computes time and elongation of a greatest elongation event.\n */\nfunction el (y, a, t, e) { // (y float64, a *ca, t, e [][]float64)  (jde, elongation float64)\n  const [J, M, T] = mean(y, micA)\n  return [J + sum(T, M, t), sum(T, M, e) * Math.PI / 180]\n}\n\n/**\n * MercuryEastElongation returns the time and elongation of a greatest eastern elongation of Mercury.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction mercuryEastElongation (y) { // (y float64)  (jde, elongation float64)\n  return el(y, micA, met, mee)\n}\n\n/**\n * MercuryWestElongation returns the time and elongation of a greatest western elongation of Mercury.\n *\n * Result is time (as a jde) of the event nearest the given time (as a\n * decimal year.)\n */\nfunction mercuryWestElongation (y) { // (y float64)  (jde, elongation float64)\n  return el(y, micA, mwt, mwe)\n}\n\nfunction marsStation2 (y) { // (y float64)  (jde float64)\n  const [J, M, T] = mean(y, moA)\n  return J + sum(T, M, ms2)\n}\n\n/**\n * ca holds coefficients from one line of table 36.A, p. 250\n */\nfunction Ca (A, B, M0, M1) {\n  this.A = A\n  this.B = B\n  this.M0 = M0\n  this.M1 = M1\n}\n\n/**\n * Table 36.A, p. 250\n */\nconst micA = new Ca(2451612.023, 115.8774771, 63.5867, 114.2088742)\nconst mscA = new Ca(2451554.084, 115.8774771, 6.4822, 114.2088742)\nconst vicA = new Ca(2451996.706, 583.921361, 82.7311, 215.513058)\nconst moA = new Ca(2452097.382, 779.936104, 181.9573, 48.705244)\nconst joA = new Ca(2451870.628, 398.884046, 318.4681, 33.140229)\nconst soA = new Ca(2451870.17, 378.091904, 318.0172, 12.647487)\nconst scA = new Ca(2451681.124, 378.091904, 131.6934, 12.647487)\nconst uoA = new Ca(2451764.317, 369.656035, 213.6884, 4.333093)\nconst noA = new Ca(2451753.122, 367.486703, 202.6544, 2.194998)\n\n/**\n * caa holds coefficients for \"additional angles\" for outer planets\n * as given on p. 251\n */\nfunction Caa (c, f) {\n  this.c = c\n  this.f = f\n}\n\nconst jaa = [\n  new Caa(82.74, 40.76)\n]\n\nconst saa = [\n  new Caa(82.74, 40.76),\n  new Caa(29.86, 1181.36),\n  new Caa(14.13, 590.68),\n  new Caa(220.02, 1262.87)\n]\n\nconst uaa = [\n  new Caa(207.83, 8.51),\n  new Caa(108.84, 419.96)\n]\n\nconst naa = [\n  new Caa(207.83, 8.51),\n  new Caa(276.74, 209.98)\n]\n\n/**\n * Table 33.B, p. 256\n */\n\n/**\n * Mercury inferior conjunction\n */\nconst micB = [\n  [0.0545, 0.0002],\n  [-6.2008, 0.0074, 0.00003],\n  [-3.275, -0.0197, 0.00001],\n  [0.4737, -0.0052, -0.00001],\n  [0.8111, 0.0033, -0.00002],\n  [0.0037, 0.0018],\n  [-0.1768, 0, 0.00001],\n  [-0.0211, -0.0004],\n  [0.0326, -0.0003],\n  [0.0083, 0.0001],\n  [-0.004, 0.0001]\n]\n\n/**\n * Mercury superior conjunction\n */\nconst mscB = [\n  [-0.0548, -0.0002],\n  [7.3894, -0.01, -0.00003],\n  [3.22, 0.0197, -0.00001],\n  [0.8383, -0.0064, -0.00001],\n  [0.9666, 0.0039, -0.00003],\n  [0.077, -0.0026],\n  [0.2758, 0.0002, -0.00002],\n  [-0.0128, -0.0008],\n  [0.0734, -0.0004, -0.00001],\n  [-0.0122, -0.0002],\n  [0.0173, -0.0002]\n]\n\n/**\n * Venus inferior conjunction\n */\nconst vicB = [\n  [-0.0096, 0.0002, -0.00001],\n  [2.0009, -0.0033, -0.00001],\n  [0.598, -0.0104, 0.00001],\n  [0.0967, -0.0018, -0.00003],\n  [0.0913, 0.0009, -0.00002],\n  [0.0046, -0.0002],\n  [0.0079, 0.0001]\n]\n\n/**\n * Mars opposition\n */\nconst moB = [\n  [-0.3088, 0, 0.00002],\n  [-17.6965, 0.0363, 0.00005],\n  [18.3131, 0.0467, -0.00006],\n  [-0.2162, -0.0198, -0.00001],\n  [-4.5028, -0.0019, 0.00007],\n  [0.8987, 0.0058, -0.00002],\n  [0.7666, -0.005, -0.00003],\n  [-0.3636, -0.0001, 0.00002],\n  [0.0402, 0.0032],\n  [0.0737, -0.0008],\n  [-0.098, -0.0011]\n]\n\n/**\n * Jupiter opposition\n */\nconst joB = [\n  [-0.1029, 0, -0.00009],\n  [-1.9658, -0.0056, 0.00007],\n  [6.1537, 0.021, -0.00006],\n  [-0.2081, -0.0013],\n  [-0.1116, -0.001],\n  [0.0074, 0.0001],\n  [-0.0097, -0.0001],\n  [0, 0.0144, -0.00008],\n  [0.3642, -0.0019, -0.00029]\n]\n\n/**\n * Saturn opposition\n */\nconst soB = [\n  [-0.0209, 0.0006, 0.00023],\n  [4.5795, -0.0312, -0.00017],\n  [1.1462, -0.0351, 0.00011],\n  [0.0985, -0.0015],\n  [0.0733, -0.0031, 0.00001],\n  [0.0025, -0.0001],\n  [0.005, -0.0002],\n  [0, -0.0337, 0.00018],\n  [-0.851, 0.0044, 0.00068],\n  [0, -0.0064, 0.00004],\n  [0.2397, -0.0012, -0.00008],\n  [0, -0.001],\n  [0.1245, 0.0006],\n  [0, 0.0024, -0.00003],\n  [0.0477, -0.0005, -0.00006]\n]\n\n/**\n * Saturn conjunction\n */\nconst scB = [\n  [0.0172, -0.0006, 0.00023],\n  [-8.5885, 0.0411, 0.00020],\n  [-1.147, 0.0352, -0.00011],\n  [0.3331, -0.0034, -0.00001],\n  [0.1145, -0.0045, 0.00002],\n  [-0.0169, 0.0002],\n  [-0.0109, 0.0004],\n  [0, -0.0337, 0.00018],\n  [-0.851, 0.0044, 0.00068],\n  [0, -0.0064, 0.00004],\n  [0.2397, -0.0012, -0.00008],\n  [0, -0.001],\n  [0.1245, 0.0006],\n  [0, 0.0024, -0.00003],\n  [0.0477, -0.0005, -0.00006]\n]\n\n/**\n * Uranus opposition\n */\nconst uoB = [\n  [0.0844, -0.0006],\n  [-0.1048, 0.0246],\n  [-5.1221, 0.0104, 0.00003],\n  [-0.1428, 0.0005],\n  [-0.0148, -0.0013],\n  [0],\n  [0.0055],\n  [0],\n  [0.885],\n  [0],\n  [0.2153]\n]\n\n/**\n * Neptune opposition [\n */\nconst noB = [\n  [-0.014, 0, 0.00001],\n  [-1.3486, 0.001, 0.00001],\n  [0.8597, 0.0037],\n  [-0.0082, -0.0002, 0.00001],\n  [0.0037, -0.0003],\n  [0],\n  [-0.5964],\n  [0],\n  [0.0728]\n]\n\n/**\n * Table 36.C, p. 259\n */\n\n/**\n * Mercury east time correction\n */\nconst met = [\n  [-21.6106, 0.0002],\n  [-1.9803, -0.006, 0.00001],\n  [1.4151, -0.0072, -0.00001],\n  [0.5528, -0.0005, -0.00001],\n  [0.2905, 0.0034, 0.00001],\n  [-0.1121, -0.0001, 0.00001],\n  [-0.0098, -0.0015],\n  [0.0192],\n  [0.0111, 0.0004],\n  [-0.0061],\n  [-0.0032, -0.0001]\n]\n\n/**\n * Mercury east elongation\n */\nconst mee = [\n  [22.4697],\n  [-4.2666, 0.0054, 0.00002],\n  [-1.8537, -0.0137],\n  [0.3598, 0.0008, -0.00001],\n  [-0.068, 0.0026],\n  [-0.0524, -0.0003],\n  [0.0052, -0.0006],\n  [0.0107, 0.0001],\n  [-0.0013, 0.0001],\n  [-0.0021],\n  [0.0003]\n]\n\n/**\n * Mercury west time correction\n */\nconst mwt = [\n  [21.6249, -0.0002],\n  [0.1306, 0.0065],\n  [-2.7661, -0.0011, 0.00001],\n  [0.2438, -0.0024, -0.00001],\n  [0.5767, 0.0023],\n  [0.1041],\n  [-0.0184, 0.0007],\n  [-0.0051, -0.0001],\n  [0.0048, 0.0001],\n  [0.0026],\n  [0.0037]\n]\n\n/**\n * Mercury west elongation\n */\nconst mwe = [\n  [22.4143, -0.0001],\n  [4.3651, -0.0048, -0.00002],\n  [2.3787, 0.0121, -0.00001],\n  [0.2674, 0.0022],\n  [-0.3873, 0.0008, 0.00001],\n  [-0.0369, -0.0001],\n  [0.0017, -0.0001],\n  [0.0059],\n  [0.0061, 0.0001],\n  [0.0007],\n  [-0.0011]\n]\n\n/**\n * Table 36.D, p. 261\n */\n\n/**\n * Mars Station 2\n */\nconst ms2 = [\n  [36.7191, 0.0016, 0.00003],\n  [-12.6163, 0.0417, -0.00001],\n  [20.1218, 0.0379, -0.00006],\n  [-1.636, -0.019],\n  [-3.9657, 0.0045, 0.00007],\n  [1.1546, 0.0029, -0.00003],\n  [0.2888, -0.0073, -0.00002],\n  [-0.3128, 0.0017, 0.00002],\n  [0.2513, 0.0026, -0.00002],\n  [-0.0021, -0.0016],\n  [-0.1497, -0.0006]\n]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  mean,\n  sum,\n  ms,\n  mercuryInfConj,\n  mercurySupConj,\n  venusInfConj,\n  marsOpp,\n  sumA,\n  msa,\n  jupiterOpp,\n  saturnOpp,\n  saturnConj,\n  uranusOpp,\n  neptuneOpp,\n  el,\n  mercuryEastElongation,\n  mercuryWestElongation,\n  marsStation2\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/planetary.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/planetelements.js":
/*!*******************************************************!*\
  !*** ./node_modules/astronomia/src/planetelements.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Elements: () => (/* binding */ Elements),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   earth: () => (/* binding */ earth),\n/* harmony export */   inc: () => (/* binding */ inc),\n/* harmony export */   jupiter: () => (/* binding */ jupiter),\n/* harmony export */   mars: () => (/* binding */ mars),\n/* harmony export */   mean: () => (/* binding */ mean),\n/* harmony export */   mercury: () => (/* binding */ mercury),\n/* harmony export */   neptune: () => (/* binding */ neptune),\n/* harmony export */   node: () => (/* binding */ node),\n/* harmony export */   saturn: () => (/* binding */ saturn),\n/* harmony export */   uranus: () => (/* binding */ uranus),\n/* harmony export */   venus: () => (/* binding */ venus)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module planetelements\n */\n/**\n * Planetelements: Chapter 31, Elements of Planetary Orbits.\n *\n * Partial:  Only implemented for mean equinox of date.\n */\n\n\n\n// planet names used in cMean\nconst mercury = 'mercury'\nconst venus = 'venus'\nconst earth = 'earth'\nconst mars = 'mars'\nconst jupiter = 'jupiter'\nconst saturn = 'saturn'\nconst uranus = 'uranus'\nconst neptune = 'neptune'\n\n/**\n * Elements contains orbital elements as returned by functions in this package.\n *\n * Some other elements easily derived from these are\n *\n *  Mean Anomolay, M = Lon - Peri\n *  Argument of Perihelion, ω = Peri - Node\n *\n * @param {Number|Object} [lon]  - mean longitude, L\n * @param {Number} [axis] - semimajor axis, a\n * @param {Number} [ecc]  - eccentricity, e\n * @param {Number} [inc]  - inclination, i\n * @param {Number} [node] - longitude of ascending node, Ω\n * @param {Number} [peri] - longitude of perihelion, ϖ (Meeus likes π better)\n */\nfunction Elements (lon, axis, ecc, inc, node, peri) {\n  const o = (typeof lon === 'object' ? lon : {})\n  this.lon = o.lon || lon\n  this.axis = o.axis || axis\n  this.ecc = o.ecc || ecc\n  this.inc = o.inc || inc\n  this.node = o.node || node\n  this.peri = o.peri || peri\n}\n\n/**\n * Table 31.A, p. 212\n */\nconst cMean = {\n  mercury: { // Mercury\n    L: [252.250906, 149474.0722491, 0.0003035, 0.000000018],\n    a: [0.38709831],\n    e: [0.20563175, 0.000020407, -0.0000000283, -0.00000000018],\n    i: [7.004986, 0.0018215, -0.0000181, 0.000000056],\n    Ω: [48.330893, 1.1861883, 0.00017542, 0.000000215],\n    ϖ: [77.456119, 1.5564776, 0.00029544, 0.000000009]\n  },\n  venus: { // Venus\n    L: [181.979801, 58519.2130302, 0.00031014, 0.000000015],\n    a: [0.72332982],\n    e: [0.00677192, -0.000047765, 0.0000000981, 0.00000000046],\n    i: [3.394662, 0.0010037, -0.00000088, -0.000000007],\n    Ω: [76.67992, 0.9011206, 0.00040618, -0.000000093],\n    ϖ: [131.563703, 1.4022288, -0.00107618, -0.000005678]\n  },\n  earth: { // Earth\n    L: [100.466457, 36000.7698278, 0.00030322, 0.00000002],\n    a: [1.000001018],\n    e: [0.01670863, -0.000042037, -0.0000001267, 0.00000000014],\n    i: [0],\n    Ω: undefined,\n    ϖ: [102.937348, 1.7195366, 0.00045688, -0.000000018]\n  },\n  mars: { // Mars\n    L: [355.433, 19141.6964471, 0.00031052, 0.000000016],\n    a: [1.523679342],\n    e: [0.09340065, 0.000090484, -0.0000000806, -0.00000000025],\n    i: [1.849726, -0.0006011, 0.00001276, -0.000000007],\n    Ω: [49.558093, 0.7720959, 0.00001557, 0.000002267],\n    ϖ: [336.060234, 1.8410449, 0.00013477, 0.000000536]\n  },\n  jupiter: { // Jupiter\n    L: [34.351519, 3036.3027748, 0.0002233, 0.000000037],\n    a: [5.202603209, 0.0000001913],\n    e: [0.04849793, 0.000163225, -0.0000004714, -0.00000000201],\n    i: [1.303267, -0.0054965, 0.00000466, -0.000000002],\n    Ω: [100.464407, 1.0209774, 0.00040315, 0.000000404],\n    ϖ: [14.331207, 1.6126352, 0.00103042, -0.000004464]\n  },\n  saturn: { // Saturn\n    L: [50.077444, 1223.5110686, 0.00051908, -0.00000003],\n    a: [9.554909192, -0.0000021390, 0.000000004],\n    e: [0.05554814, -0.000346641, -0.0000006436, 0.0000000034],\n    i: [2.488879, -0.0037362, -0.00001519, 0.000000087],\n    Ω: [113.665503, 0.877088, -0.00012176, -0.000002249],\n    ϖ: [93.057237, 1.9637613, 0.00083753, 0.000004928]\n  },\n  uranus: { // Uranus\n    L: [314.055005, 429.8640561, 0.0003039, 0.000000026],\n    a: [19.218446062, -0.0000000372, 0.00000000098],\n    e: [0.04638122, -0.000027293, 0.0000000789, 0.00000000024],\n    i: [0.773197, 0.0007744, 0.00003749, -0.000000092],\n    Ω: [74.005957, 0.5211278, 0.00133947, 0.000018484],\n    ϖ: [173.005291, 1.486379, 0.00021406, 0.000000434]\n  },\n  neptune: { // Neptune\n    L: [304.348665, 219.8833092, 0.00030882, 0.000000018],\n    a: [30.110386869, -0.0000001663, 0.00000000069],\n    e: [0.00945575, 0.000006033, 0, -0.00000000005],\n    i: [1.769953, -0.0093082, -0.00000708, 0.000000027],\n    Ω: [131.784057, 1.1022039, 0.00025952, -0.000000637],\n    ϖ: [48.120276, 1.4262957, 0.00038434, 0.00000002]\n  }\n}\n\n/**\n * Mean returns mean orbital elements for a planet\n *\n * Argument p must be a planet const as defined above, argument e is\n * a result parameter.  A valid non-undefined pointer to an Elements struct\n * must be passed in.\n *\n * Results are referenced to mean dynamical ecliptic and equinox of date.\n *\n * Semimajor axis is in AU, angular elements are in radians.\n */\nfunction mean (p, jde, e) {\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const c = cMean[p]\n  e = e || new Elements()\n  e.lon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.L) * Math.PI / 180, 2 * Math.PI)\n  e.axis = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.a)\n  e.ecc = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.e)\n  e.inc = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.i) * Math.PI / 180\n  e.node = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.Ω) * Math.PI / 180\n  e.peri = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, c.ϖ) * Math.PI / 180\n  return e\n}\n\n/**\n * Inc returns mean inclination for a planet at a date.\n *\n * Result is the same as the Inc field returned by function Mean.  That is,\n * radians, referenced to mean dynamical ecliptic and equinox of date.\n */\nfunction inc (p, jde) { // (p int, jde float64)  float64\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde), cMean[p].i) * Math.PI / 180\n}\n\n/**\n * Node returns mean longitude of ascending node for a planet at a date.\n *\n * Result is the same as the Node field returned by function Mean.  That is,\n * radians, referenced to mean dynamical ecliptic and equinox of date.\n */\nfunction node (p, jde) { // (p int, jde float64)  float64\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde), cMean[p].Ω) * Math.PI / 180\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  mercury,\n  venus,\n  earth,\n  mars,\n  jupiter,\n  saturn,\n  uranus,\n  neptune,\n  Elements,\n  mean,\n  inc,\n  node\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/planetelements.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/planetposition.js":
/*!*******************************************************!*\
  !*** ./node_modules/astronomia/src/planetposition.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Planet: () => (/* binding */ Planet),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   toFK5: () => (/* binding */ toFK5)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _precess_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precess.js */ \"./node_modules/astronomia/src/precess.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module planetposition\n */\n/**\n * Planetposition: Chapter 32, Positions of the Planets.\n *\n * Incomplete:\n *\n * 1. The package does not implement algorithms that use appendix III,\n * but instead implements a full VSOP87 solution.  I do not have a copy\n * of the supplimentary disk with appendix III in machine readable form\n * and as the appendix is rather large, retyping it by hand is problematic.\n * The full VSOP87 data set on the other hand is freely downloadable from\n * the internet, so I implement here code that can use that data directly.\n *\n * 2. The formula for accuracy of results is not implemented.  It is\n * not needed for full VSOP87 solutions.\n *\n * 3. Polynomial expressions are not implemented.  Again, implementation\n * would involve typing rather large tables of numbers with associated\n * risk of typographical errors.\n */\n\n // eslint-disable-line no-unused-vars\n\n\n\n\nfunction sum (t, series) {\n  const coeffs = []\n  Object.keys(series).forEach((x) => {\n    coeffs[x] = 0\n    let y = series[x].length - 1\n    for (y; y >= 0; y--) {\n      const term = {\n        a: series[x][y][0],\n        b: series[x][y][1],\n        c: series[x][y][2]\n      }\n      coeffs[x] += term.a * Math.cos(term.b + term.c * t)\n    }\n  })\n  const res = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...coeffs)\n  return res\n}\n\nclass Planet {\n  /**\n   * VSOP87 representation of a Planet\n   * @constructs Planet\n   * @param {object} planet - planet data series\n   * @example\n   * ```js\n   * // for use in browser\n   * import {data} from 'astronomia'\n   * const earth = new planetposition.Planet(data.vsop87Bearth)\n   * ```\n   */\n  constructor (planet) {\n    if (typeof planet !== 'object') throw new TypeError('need planet vsop87 data')\n    this.name = planet.name\n    this.type = planet.type || 'B'\n    this.series = planet\n  }\n\n  /**\n   * Position2000 returns ecliptic position of planets by full VSOP87 theory.\n   *\n   * @param {Number} jde - the date for which positions are desired.\n   * @returns {Coord} Results are for the dynamical equinox and ecliptic J2000.\n   *  {Number} lon - heliocentric longitude in radians.\n   *  {Number} lat - heliocentric latitude in radians.\n   *  {Number} range - heliocentric range in AU.\n   */\n  position2000 (jde) {\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    const τ = T * 0.1\n    const lon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(sum(τ, this.series.L), 2 * Math.PI)\n    const lat = sum(τ, this.series.B)\n    const range = sum(τ, this.series.R)\n\n    switch (this.type) {\n      case 'B':\n        return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(lon, lat, range)\n      case 'D': {\n        const eclFrom = new _coord_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Ecliptic(lon, lat)\n        const epochFrom = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JDEToJulianYear(jde)\n        const epochTo = 2000.0\n        const eclTo = _precess_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eclipticPosition(eclFrom, epochFrom, epochTo)\n        return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(eclTo.lon, eclTo.lat, range)\n      }\n    }\n  }\n\n  /**\n   * Position returns ecliptic position of planets at equinox and ecliptic of date.\n   *\n   * @param {Number} jde - the date for which positions are desired.\n   * @returns {Coord} Results are positions consistent with those from Meeus's\n   * Apendix III, that is, at equinox and ecliptic of date.\n   *  {Number} lon - heliocentric longitude in radians.\n   *  {Number} lat - heliocentric latitude in radians.\n   *  {Number} range - heliocentric range in AU.\n   */\n  position (jde) {\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    const τ = T * 0.1\n    const lon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(sum(τ, this.series.L), 2 * Math.PI)\n    const lat = sum(τ, this.series.B)\n    const range = sum(τ, this.series.R)\n\n    switch (this.type) {\n      case 'B': {\n        const eclFrom = new _coord_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Ecliptic(lon, lat)\n        const epochFrom = 2000.0\n        const epochTo = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JDEToJulianYear(jde)\n        const eclTo = _precess_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eclipticPosition(eclFrom, epochFrom, epochTo)\n        return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(eclTo.lon, eclTo.lat, range)\n      }\n      case 'D':\n        return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(lon, lat, range)\n    }\n  }\n}\n\n/**\n * ToFK5 converts ecliptic longitude and latitude from dynamical frame to FK5.\n *\n * @param {Number} lon - ecliptic longitude in radians\n * @param {Number} lat - ecliptic latitude in radians\n * @param {Number} jde - Julian ephemeris day\n * @return {Coord}\n *    {Number} lon - FK5 longitude\n *    {Number} lat - FK5 latitude\n */\nfunction toFK5 (lon, lat, jde) {\n  // formula 32.3, p. 219.\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  // const Lp = lon - 1.397 * Math.PI / 180 * T - 0.00031 * Math.PI / 180 * T * T\n  const Lp = lon - _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].angleFromDeg((1.397 + 0.00031 * T) * T)\n  const [sLp, cLp] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(Lp)\n  // (32.3) p. 219\n  const L5 = lon + _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].angleFromSec(-0.09033 + 0.03916 * (cLp + sLp) * Math.tan(lat))\n  const B5 = lat + _sexagesimal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].angleFromSec(0.03916 * (cLp - sLp))\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(L5, B5)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Planet,\n  toFK5\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/planetposition.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/pluto.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/pluto.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astrometric: () => (/* binding */ astrometric),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   heliocentric: () => (/* binding */ heliocentric)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _elliptic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elliptic.js */ \"./node_modules/astronomia/src/elliptic.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module pluto\n */\n/**\n * Pluto: Chapter 37, Pluto.\n */\n\n\n\n\n/**\n * Heliocentric returns J2000 heliocentric coordinates of Pluto.\n *\n * Results l, b are solar longitude and latitude in radians.\n * Result r is distance in AU.\n */\nfunction heliocentric (jde) {\n  let l = 0\n  let b = 0\n  let r = 0\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const J = 34.35 + 3034.9057 * T\n  const S = 50.08 + 1222.1138 * T\n  const P = 238.96 + 144.96 * T\n  for (const i in t37) {\n    const t = t37[i]\n    const [sα, cα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos((t.i * J + t.j * S + t.k * P) * Math.PI / 180)\n    l += t.lA * sα + t.lB * cα\n    b += t.bA * sα + t.bB * cα\n    r += t.rA * sα + t.rB * cα\n  }\n  l = (l + 238.958116 + 144.96 * T) * Math.PI / 180\n  b = (b - 3.908239) * Math.PI / 180\n  r += 40.7241346\n  return { lon: l, lat: b, range: r }\n}\n\n/**\n * Astrometric returns J2000 astrometric coordinates of Pluto.\n */\nfunction astrometric (jde, earth) {\n  const sε = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SOblJ2000\n  const cε = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].COblJ2000\n  const f = function (jde) {\n    const { lon, lat, range } = heliocentric(jde)\n    const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lon)\n    const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lat)\n    // (37.1) p. 264\n    const x = range * cl * cb\n    const y = range * (sl * cb * cε - sb * sε)\n    const z = range * (sl * cb * sε + sb * cε)\n    return { x, y, z }\n  }\n  const c = _elliptic_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].astrometricJ2000(f, jde, earth) // eslint-disable-line no-unused-vars\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(c.ra, c.dec)\n}\n\nfunction Pt (i, j, k, lA, lB, bA, bB, rA, rB) {\n  this.i = i\n  this.j = j\n  this.k = k\n  this.lA = lA\n  this.lB = lB\n  this.bA = bA\n  this.bB = bB\n  this.rA = rA\n  this.rB = rB\n}\n\nconst t37 = [\n  new Pt(0, 0, 1, -19.799805, 19.850055, -5.452852, -14.974862, 6.6865439, 6.8951812),\n  new Pt(0, 0, 2, 0.897144, -4.954829, 3.527812, 1.67279, -1.1827535, -0.0332538),\n  new Pt(0, 0, 3, 0.611149, 1.211027, -1.050748, 0.327647, 0.1593179, -0.143889),\n  new Pt(0, 0, 4, -0.341243, -0.189585, 0.17869, -0.292153, -0.0018444, 0.048322),\n  new Pt(0, 0, 5, 0.129287, -0.034992, 0.01865, 0.10034, -0.0065977, -0.0085431),\n  new Pt(0, 0, 6, -0.038164, 0.030893, -0.030697, -0.025823, 0.0031174, -0.0006032),\n  new Pt(0, 1, -1, 0.020442, -0.009987, 0.004878, 0.011248, -0.0005794, 0.0022161),\n  new Pt(0, 1, 0, -0.004063, -0.005071, 0.000226, -0.000064, 0.0004601, 0.0004032),\n  new Pt(0, 1, 1, -0.006016, -0.003336, 0.00203, -0.000836, -0.0001729, 0.0000234),\n  new Pt(0, 1, 2, -0.003956, 0.003039, 0.000069, -0.000604, -0.0000415, 0.0000702),\n  new Pt(0, 1, 3, -0.000667, 0.003572, -0.000247, -0.000567, 0.0000239, 0.0000723),\n  new Pt(0, 2, -2, 0.001276, 0.000501, -0.000057, 0.000001, 0.0000067, -0.0000067),\n  new Pt(0, 2, -1, 0.001152, -0.000917, -0.000122, 0.000175, 0.0001034, -0.0000451),\n  new Pt(0, 2, 0, 0.00063, -0.001277, -0.000049, -0.000164, -0.0000129, 0.0000504),\n  new Pt(1, -1, 0, 0.002571, -0.000459, -0.000197, 0.000199, 0.000048, -0.0000231),\n  new Pt(1, -1, 1, 0.000899, -0.001449, -0.000025, 0.000217, 0.0000002, -0.0000441),\n  new Pt(1, 0, -3, -0.001016, 0.001043, 0.000589, -0.000248, -0.0003359, 0.0000265),\n  new Pt(1, 0, -2, -0.002343, -0.001012, -0.000269, 0.000711, 0.0007856, -0.0007832),\n  new Pt(1, 0, -1, 0.007042, 0.000788, 0.000185, 0.000193, 0.0000036, 0.0045763),\n  new Pt(1, 0, 0, 0.001199, -0.000338, 0.000315, 0.000807, 0.0008663, 0.0008547),\n  new Pt(1, 0, 1, 0.000418, -0.000067, -0.00013, -0.000043, -0.0000809, -0.0000769),\n  new Pt(1, 0, 2, 0.00012, -0.000274, 0.000005, 0.000003, 0.0000263, -0.0000144),\n  new Pt(1, 0, 3, -0.00006, -0.000159, 0.000002, 0.000017, -0.0000126, 0.0000032),\n  new Pt(1, 0, 4, -0.000082, -0.000029, 0.000002, 0.000005, -0.0000035, -0.0000016),\n  new Pt(1, 1, -3, -0.000036, -0.000029, 0.000002, 0.000003, -0.0000019, -0.0000004),\n  new Pt(1, 1, -2, -0.00004, 0.000007, 0.000003, 0.000001, -0.0000015, 0.0000008),\n  new Pt(1, 1, -1, -0.000014, 0.000022, 0.000002, -0.000001, -0.0000004, 0.0000012),\n  new Pt(1, 1, 0, 0.000004, 0.000013, 0.000001, -0.000001, 0.0000005, 0.0000006),\n  new Pt(1, 1, 1, 0.000005, 0.000002, 0, -0.000001, 0.0000003, 0.0000001),\n  new Pt(1, 1, 3, -0.000001, 0, 0, 0, 0.0000006, -0.0000002),\n  new Pt(2, 0, -6, 0.000002, 0, 0, -0.000002, 0.0000002, 0.0000002),\n  new Pt(2, 0, -5, -0.000004, 0.000005, 0.000002, 0.000002, -0.0000002, -0.0000002),\n  new Pt(2, 0, -4, 0.000004, -0.000007, -0.000007, 0, 0.0000014, 0.0000013),\n  new Pt(2, 0, -3, 0.000014, 0.000024, 0.00001, -0.000008, -0.0000063, 0.0000013),\n  new Pt(2, 0, -2, -0.000049, -0.000034, -0.000003, 0.00002, 0.0000136, -0.0000236),\n  new Pt(2, 0, -1, 0.000163, -0.000048, 0.000006, 0.000005, 0.0000273, 0.0001065),\n  new Pt(2, 0, 0, 0.000009, -0.000024, 0.000014, 0.000017, 0.0000251, 0.0000149),\n  new Pt(2, 0, 1, -0.000004, 0.000001, -0.000002, 0, -0.0000025, -0.0000009),\n  new Pt(2, 0, 2, -0.000003, 0.000001, 0, 0, 0.0000009, -0.0000002),\n  new Pt(2, 0, 3, 0.000001, 0.000003, 0, 0, -0.0000008, 0.0000007),\n  new Pt(3, 0, -2, -0.000003, -0.000001, 0, 0.000001, 0.0000002, -0.000001),\n  new Pt(3, 0, -1, 0.000005, -0.000003, 0, 0, 0.0000019, 0.0000035),\n  new Pt(3, 0, 0, 0, 0, 0.000001, 0, 0.000001, 0.0000003)\n]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  heliocentric,\n  astrometric\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/pluto.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/precess.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/precess.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EclipticPrecessor: () => (/* binding */ EclipticPrecessor),\n/* harmony export */   Precessor: () => (/* binding */ Precessor),\n/* harmony export */   approxAnnualPrecession: () => (/* binding */ approxAnnualPrecession),\n/* harmony export */   approxPosition: () => (/* binding */ approxPosition),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   eclipticPosition: () => (/* binding */ eclipticPosition),\n/* harmony export */   mn: () => (/* binding */ mn),\n/* harmony export */   position: () => (/* binding */ position),\n/* harmony export */   properMotion: () => (/* binding */ properMotion),\n/* harmony export */   properMotion3D: () => (/* binding */ properMotion3D)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _elementequinox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./elementequinox.js */ \"./node_modules/astronomia/src/elementequinox.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module precess\n */\n/**\n * Precession: Chapter 21, Precession.\n *\n * Functions in this package take Julian epoch argurments rather than Julian\n * days.  Use base.JDEToJulianYear() to convert.\n *\n * Also in package base are some definitions related to the Besselian and\n * Julian Year.\n *\n * Partial:  Precession from FK4 not implemented.  Meeus gives no test cases.\n * It's a fair amount of code and data, representing significant chances for\n * errors.  And precession from FK4 would seem to be of little interest today.\n *\n * Proper motion units\n *\n * Meeus gives some example annual proper motions in units of seconds of\n * right ascension and seconds of declination.  To make units clear,\n * functions in this package take proper motions with argument types of\n * sexa.HourAngle and sexa.Angle respectively.  Error-prone conversions\n * can be avoided by using the constructors for these base types.\n *\n * For example, given an annual proper motion in right ascension of -0ˢ.03847,\n * rather than\n *\n * mra = -0.03847 / 13751 // as Meeus suggests\n *\n * or\n *\n * mra = -0.03847 * (15/3600) * (pi/180) // less magic\n *\n * use\n *\n * mra = new sexa.HourAngle(false, 0, 0, -0.03847)\n *\n * Unless otherwise indicated, functions in this library expect proper motions\n * to be annual proper motions, so the unit denominator is years.\n * (The code, following Meeus's example, technically treats it as Julian years.)\n */\n\n\n\n\n\n\n\n/**\n * approxAnnualPrecession returns approximate annual precision in right\n * ascension and declination.\n *\n * The two epochs should be within a few hundred years.\n * The declinations should not be too close to the poles.\n *\n * @param {Equatorial} eqFrom\n * @param {Number} epochFrom - use `base.JDEToJulianYear(year)` to get epoch\n * @param {Number} epochTo - use `base.JDEToJulianYear(year)` to get epoch\n * @returns {Object}\n *  {sexa.HourAngle} seconds of right ascension\n *  {sexa.Angle} seconds of Declination\n */\nfunction approxAnnualPrecession (eqFrom, epochFrom, epochTo) {\n  const [m, na, nd] = mn(epochFrom, epochTo)\n  const [sa, ca] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eqFrom.ra)\n  // (21.1) p. 132\n  const Δαs = m + na * sa * Math.tan(eqFrom.dec) // seconds of RA\n  const Δδs = nd * ca // seconds of Dec\n  const ra = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_4__.HourAngle(false, 0, 0, Δαs).rad()\n  const dec = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_4__.Angle(false, 0, 0, Δδs).rad()\n  return { ra, dec }\n}\n\n/**\n * @param {Number} epochFrom - use `base.JDEToJulianYear(year)` to get epoch\n * @param {Number} epochTo - use `base.JDEToJulianYear(year)` to get epoch\n * @returns {Number[]}\n */\nfunction mn (epochFrom, epochTo) {\n  const T = (epochTo - epochFrom) * 0.01\n  const m = 3.07496 + 0.00186 * T\n  const na = 1.33621 - 0.00057 * T\n  const nd = 20.0431 - 0.0085 * T\n  return [m, na, nd]\n}\n\n/**\n * ApproxPosition uses ApproxAnnualPrecession to compute a simple and quick\n * precession while still considering proper motion.\n *\n * @param {Equatorial} eqFrom\n * @param {Number} epochFrom\n * @param {Number} epochTo\n * @param {Number} mα - in radians\n * @param {Number} mδ - in radians\n * @returns {Equatorial} eqTo\n */\nfunction approxPosition (eqFrom, epochFrom, epochTo, mα, mδ) {\n  const { ra, dec } = approxAnnualPrecession(eqFrom, epochFrom, epochTo)\n  const dy = epochTo - epochFrom\n  const eqTo = new _coord_js__WEBPACK_IMPORTED_MODULE_1__.Equatorial()\n  eqTo.ra = eqFrom.ra + (ra + mα) * dy\n  eqTo.dec = eqFrom.dec + (dec + mδ) * dy\n  return eqTo\n}\n\n// constants\nconst d = Math.PI / 180\nconst s = d / 3600\n\n// coefficients from (21.2) p. 134\nconst ζT = [2306.2181 * s, 1.39656 * s, -0.000139 * s]\nconst zT = [2306.2181 * s, 1.39656 * s, -0.000139 * s]\nconst θT = [2004.3109 * s, -0.8533 * s, -0.000217 * s]\n// coefficients from (21.3) p. 134\nconst ζt = [2306.2181 * s, 0.30188 * s, 0.017998 * s]\nconst zt = [2306.2181 * s, 1.09468 * s, 0.018203 * s]\nconst θt = [2004.3109 * s, -0.42665 * s, -0.041833 * s]\n\n/**\n * Precessor represents precession from one epoch to another.\n *\n * Construct with NewPrecessor, then call method Precess.\n * After construction, Precess may be called multiple times to precess\n * different coordinates with the same initial and final epochs.\n */\nclass Precessor {\n  /**\n   * constructs a Precessor object and initializes it to precess\n   * coordinates from epochFrom to epochTo.\n   * @param {Number} epochFrom\n   * @param {Number} epochTo\n   */\n  constructor (epochFrom, epochTo) {\n    // (21.2) p. 134\n    let ζCoeff = ζt\n    let zCoeff = zt\n    let θCoeff = θt\n    if (epochFrom !== 2000) {\n      const T = (epochFrom - 2000) * 0.01\n      ζCoeff = [\n        _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...ζT),\n        0.30188 * s - 0.000344 * s * T,\n        0.017998 * s\n      ]\n      zCoeff = [\n        _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...zT),\n        1.09468 * s + 0.000066 * s * T,\n        0.018203 * s\n      ]\n      θCoeff = [\n        _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...θT),\n        -0.42665 * s - 0.000217 * s * T,\n        -0.041833 * s\n      ]\n    }\n    const t = (epochTo - epochFrom) * 0.01\n    this.ζ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...ζCoeff) * t\n    this.z = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...zCoeff) * t\n    const θ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...θCoeff) * t\n    this.sθ = Math.sin(θ)\n    this.cθ = Math.cos(θ)\n  }\n\n  /**\n   * Precess precesses coordinates eqFrom, leaving result in eqTo.\n   *\n   * @param {Equatorial} eqFrom\n   * @returns {Equatorial} eqTo\n   */\n  precess (eqFrom) {\n    // (21.4) p. 134\n    const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eqFrom.dec)\n    const [sαζ, cαζ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eqFrom.ra + this.ζ)\n    const A = cδ * sαζ\n    const B = this.cθ * cδ * cαζ - this.sθ * sδ\n    const C = this.sθ * cδ * cαζ + this.cθ * sδ\n    const eqTo = new _coord_js__WEBPACK_IMPORTED_MODULE_1__.Equatorial()\n    eqTo.ra = Math.atan2(A, B) + this.z\n    if (C < _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CosSmallAngle) {\n      eqTo.dec = Math.asin(C)\n    } else {\n      eqTo.dec = Math.acos(Math.hypot(A, B)) // near pole\n    }\n    return eqTo\n  }\n}\n\n/**\n * Position precesses equatorial coordinates from one epoch to another,\n * including proper motions.\n *\n * If proper motions are not to be considered or are not applicable, pass 0, 0\n * for mα, mδ\n *\n * Both eqFrom and eqTo must be non-nil, although they may point to the same\n * struct.  EqTo is returned for convenience.\n * @param {Equatorial} eqFrom\n * @param {Number} epochFrom\n * @param {Number} epochTo\n * @param {Number} mα - in radians\n * @param {Number} mδ - in radians\n * @returns {Equatorial} [eqTo]\n */\nfunction position (eqFrom, epochFrom, epochTo, mα, mδ) {\n  const p = new Precessor(epochFrom, epochTo)\n  const t = epochTo - epochFrom\n  const eqTo = new _coord_js__WEBPACK_IMPORTED_MODULE_1__.Equatorial()\n  eqTo.ra = eqFrom.ra + mα * t\n  eqTo.dec = eqFrom.dec + mδ * t\n  return p.precess(eqTo)\n}\n\n// coefficients from (21.5) p. 136\nconst ηT = [47.0029 * s, -0.06603 * s, 0.000598 * s]\nconst πT = [174.876384 * d, 3289.4789 * s, 0.60622 * s]\nconst pT = [5029.0966 * s, 2.22226 * s, -0.000042 * s]\nconst ηt = [47.0029 * s, -0.03302 * s, 0.000060 * s]\nconst πt = [174.876384 * d, -869.8089 * s, 0.03536 * s]\nconst pt = [5029.0966 * s, 1.11113 * s, -0.000006 * s]\n\n/**\n * EclipticPrecessor represents precession from one epoch to another.\n *\n * Construct with NewEclipticPrecessor, then call method Precess.\n * After construction, Precess may be called multiple times to precess\n * different coordinates with the same initial and final epochs.\n */\nclass EclipticPrecessor {\n  /**\n   * constructs an EclipticPrecessor object and initializes\n   * it to precess coordinates from epochFrom to epochTo.\n   * @param {Number} epochFrom\n   * @param {Number} epochTo\n   */\n  constructor (epochFrom, epochTo) {\n    // (21.5) p. 136\n    let ηCoeff = ηt\n    let πCoeff = πt\n    let pCoeff = pt\n    if (epochFrom !== 2000) {\n      const T = (epochFrom - 2000) * 0.01\n      ηCoeff = [\n        _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...ηT),\n        -0.03302 * s + 0.000598 * s * T,\n        0.000060 * s\n      ]\n      πCoeff = [\n        _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...πT),\n        -869.8089 * s - 0.50491 * s * T,\n        0.03536 * s\n      ]\n      pCoeff = [\n        _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, ...pT),\n        1.11113 * s - 0.000042 * s * T,\n        -0.000006 * s\n      ]\n    }\n    const t = (epochTo - epochFrom) * 0.01\n    this.π = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...πCoeff)\n    this.p = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...pCoeff) * t\n    const η = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ...ηCoeff) * t\n    this.sη = Math.sin(η)\n    this.cη = Math.cos(η)\n  }\n\n  /**\n   * EclipticPrecess precesses coordinates eclFrom, leaving result in eclTo.\n   *\n   * The same struct may be used for eclFrom and eclTo.\n   * EclTo is returned for convenience.\n   * @param {Ecliptic} eclFrom\n   * @returns {Ecliptic} [eclTo]\n   */\n  precess (eclFrom) {\n    // (21.7) p. 137\n    const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eclFrom.lat)\n    const [sd, cd] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(this.π - eclFrom.lon)\n    const A = this.cη * cβ * sd - this.sη * sβ\n    const B = cβ * cd\n    const C = this.cη * sβ + this.sη * cβ * sd\n    const eclTo = new _coord_js__WEBPACK_IMPORTED_MODULE_1__.Ecliptic(this.p + this.π - Math.atan2(A, B))\n    if (C < _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CosSmallAngle) {\n      eclTo.lat = Math.asin(C)\n    } else {\n      eclTo.lat = Math.acos(Math.hypot(A, B)) // near pole\n    }\n    return eclTo\n  }\n\n  /**\n   * ReduceElements reduces orbital elements of a solar system body from one\n   * equinox to another.\n   *\n   * This function is described in chapter 24, but is located in this\n   * package so it can be a method of EclipticPrecessor.\n   *\n   * @param {Elements} eFrom\n   * @returns {Elements} eTo\n   */\n  reduceElements (eFrom) {\n    const ψ = this.π + this.p\n    const [si, ci] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eFrom.inc)\n    const [snp, cnp] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eFrom.node - this.π)\n    const eTo = new _elementequinox_js__WEBPACK_IMPORTED_MODULE_2__.Elements()\n    // (24.1) p. 159\n    eTo.inc = Math.acos(ci * this.cη + si * this.sη * cnp)\n    // (24.2) p. 159\n    eTo.node = Math.atan2(si * snp, this.cη * si * cnp - this.sη * ci) + ψ\n    // (24.3) p. 159\n    eTo.peri = Math.atan2(-this.sη * snp, si * this.cη - ci * this.sη * cnp) + eFrom.peri\n    return eTo\n  }\n}\n\n/**\n * eclipticPosition precesses ecliptic coordinates from one epoch to another,\n * including proper motions.\n * While eclFrom is given as ecliptic coordinates, proper motions mα, mδ are\n * still expected to be equatorial.  If proper motions are not to be considered\n * or are not applicable, pass 0, 0.\n * Both eclFrom and eclTo must be non-nil, although they may point to the same\n * struct.  EclTo is returned for convenience.\n *\n * @param {Ecliptic} eclFrom,\n * @param {Number} epochFrom\n * @param {HourAngle} [mα]\n * @param {Angle} [mδ]\n * @returns {Ecliptic} eclTo\n */\nfunction eclipticPosition (eclFrom, epochFrom, epochTo, mα, mδ) {\n  const p = new EclipticPrecessor(epochFrom, epochTo)\n\n  if (mα && mδ && (mα.rad() !== 0 || mδ.rad() !== 0)) {\n    const { lon, lat } = properMotion(mα.rad(), mδ.rad(), epochFrom, eclFrom)\n    const t = epochTo - epochFrom\n    eclFrom.lon += lon * t\n    eclFrom.lat += lat * t\n  }\n  return p.precess(eclFrom)\n}\n\n/**\n * @param {Number} mα - anual proper motion (ra)\n * @param {Number} mδ - anual proper motion (dec)\n * @param {Number} epoch\n * @param {Ecliptic} ecl\n * @returns {Ecliptic} {lon, lat}\n */\nfunction properMotion (mα, mδ, epoch, ecl) {\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanObliquity(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianYearToJDE(epoch))\n  const [εsin, εcos] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  const { ra, dec } = ecl.toEquatorial(ε)\n  const [sα, cα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ra)\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(dec)\n  const cβ = Math.cos(ecl.lat)\n  const lon = (mδ * εsin * cα + mα * cδ * (εcos * cδ + εsin * sδ * sα)) / (cβ * cβ)\n  const lat = (mδ * (εcos * cδ + εsin * sδ * sα) - mα * εsin * cα * cδ) / cβ\n  return new _coord_js__WEBPACK_IMPORTED_MODULE_1__.Ecliptic(lon, lat)\n}\n\n/**\n * ProperMotion3D takes the 3D equatorial coordinates of an object\n * at one epoch and computes its coordinates at a new epoch, considering\n * proper motion and radial velocity.\n *\n * Radial distance (r) must be in parsecs, radial velocitiy (mr) in\n * parsecs per year.\n *\n * Both eqFrom and eqTo must be non-nil, although they may point to the same\n * struct.  EqTo is returned for convenience.\n *\n * @param {Equatorial} eqFrom,\n * @param {Number} epochFrom\n * @param {Number} r\n * @param {Number} mr\n * @param {HourAngle} mα\n * @param {Angle} mδ\n * @returns {Equatorial} eqTo\n */\nfunction properMotion3D (eqFrom, epochFrom, epochTo, r, mr, mα, mδ) {\n  const [sα, cα] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eqFrom.ra)\n  const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(eqFrom.dec)\n  const x = r * cδ * cα\n  const y = r * cδ * sα\n  const z = r * sδ\n  const mrr = mr / r\n  const zmδ = z * mδ.rad()\n  const mx = x * mrr - zmδ * cα - y * mα.rad()\n  const my = y * mrr - zmδ * sα + x * mα.rad()\n  const mz = z * mrr + r * mδ.rad() * cδ\n  const t = epochTo - epochFrom\n  const xp = x + t * mx\n  const yp = y + t * my\n  const zp = z + t * mz\n  const eqTo = new _coord_js__WEBPACK_IMPORTED_MODULE_1__.Equatorial()\n  eqTo.ra = Math.atan2(yp, xp)\n  eqTo.dec = Math.atan2(zp, Math.hypot(xp, yp))\n  return eqTo\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  approxAnnualPrecession,\n  mn,\n  approxPosition,\n  Precessor,\n  position,\n  EclipticPrecessor,\n  eclipticPosition,\n  properMotion,\n  properMotion3D\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/precess.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/refraction.js":
/*!***************************************************!*\
  !*** ./node_modules/astronomia/src/refraction.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bennett: () => (/* binding */ bennett),\n/* harmony export */   bennett2: () => (/* binding */ bennett2),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   gt15Apparent: () => (/* binding */ gt15Apparent),\n/* harmony export */   gt15True: () => (/* binding */ gt15True),\n/* harmony export */   saemundsson: () => (/* binding */ saemundsson)\n/* harmony export */ });\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module refraction\n */\n/**\n * Refraction: Chapter 16: Atmospheric Refraction.\n *\n * Functions here assume atmospheric pressure of 1010 mb, temperature of\n * 10°C, and yellow light.\n */\n\nconst { sin, tan } = Math\nconst D2R = Math.PI / 180\n\nconst gt15true1 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Angle(false, 0, 0, 58.294).rad()\nconst gt15true2 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Angle(false, 0, 0, 0.0668).rad()\nconst gt15app1 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Angle(false, 0, 0, 58.276).rad()\nconst gt15app2 = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Angle(false, 0, 0, 0.0824).rad()\n\n/**\n * gt15True returns refraction for obtaining true altitude when altitude\n * is greater than 15 degrees (about 0.26 radians.)\n *\n * h0 must be a measured apparent altitude of a celestial body in radians.\n *\n * Result is refraction to be subtracted from h0 to obtain the true altitude\n * of the body.  Unit is radians.\n */\nfunction gt15True (h0) { // (h0 float64)  float64\n  // (16.1) p. 105\n  const t = tan(Math.PI / 2 - h0)\n  return gt15true1 * t - gt15true2 * t * t * t\n}\n\n/**\n * gt15Apparent returns refraction for obtaining apparent altitude when\n * altitude is greater than 15 degrees (about 0.26 radians.)\n *\n * h must be a computed true \"airless\" altitude of a celestial body in radians.\n *\n * Result is refraction to be added to h to obtain the apparent altitude\n * of the body.  Unit is radians.\n */\nfunction gt15Apparent (h) { // (h float64)  float64\n  // (16.2) p. 105\n  const t = tan(Math.PI / 2 - h)\n  return gt15app1 * t - gt15app2 * t * t * t\n}\n\n/**\n * Bennett returns refraction for obtaining true altitude.\n *\n * h0 must be a measured apparent altitude of a celestial body in radians.\n *\n * Results are accurate to 0.07 arc min from horizon to zenith.\n *\n * Result is refraction to be subtracted from h0 to obtain the true altitude\n * of the body.  Unit is radians.\n */\nfunction bennett (h0) { // (h0 float64)  float64\n  // (16.3) p. 106\n  const c1 = D2R / 60\n  const c731 = 7.31 * D2R * D2R\n  const c44 = 4.4 * D2R\n  return c1 / tan(h0 + c731 / (h0 + c44))\n}\n\n/**\n * Bennett2 returns refraction for obtaining true altitude.\n *\n * Similar to Bennett, but a correction is applied to give a more accurate\n * result.\n *\n * Results are accurate to 0.015 arc min.  Result unit is radians.\n */\nfunction bennett2 (h0) { // (h0 float64)  float64\n  const cMin = 60 / D2R\n  const c06 = 0.06 / cMin\n  const c147 = 14.7 * cMin * D2R\n  const c13 = 13 * D2R\n  const R = bennett(h0)\n  return R - c06 * sin(c147 * R + c13)\n}\n\n/**\n * Saemundsson returns refraction for obtaining apparent altitude.\n *\n * h must be a computed true \"airless\" altitude of a celestial body in radians.\n *\n * Result is refraction to be added to h to obtain the apparent altitude\n * of the body.\n *\n * Results are consistent with Bennett to within 4 arc sec.\n * Result unit is radians.\n */\nfunction saemundsson (h) { // (h float64)  float64\n  // (16.4) p. 106\n  const c102 = 1.02 * D2R / 60\n  const c103 = 10.3 * D2R * D2R\n  const c511 = 5.11 * D2R\n  return c102 / tan(h + c103 / (h + c511))\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  gt15True,\n  gt15Apparent,\n  bennett,\n  bennett2,\n  saemundsson\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvcmVmcmFjdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ21DO0FBQ25DLFFBQVEsV0FBVztBQUNuQjs7QUFFQSxzQkFBc0IsNkRBQVU7QUFDaEMsc0JBQXNCLDZEQUFVO0FBQ2hDLHFCQUFxQiw2REFBVTtBQUMvQixxQkFBcUIsNkRBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QjtBQUNoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0QkFBNEI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3QkFBd0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5QkFBeUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9yZWZyYWN0aW9uLmpzP2E5YzMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMTMgU29uaWEgS2V5c1xuICogQGNvcHlyaWdodCAyMDE2IGNvbW1lbnRob2xcbiAqIEBsaWNlbnNlIE1JVFxuICogQG1vZHVsZSByZWZyYWN0aW9uXG4gKi9cbi8qKlxuICogUmVmcmFjdGlvbjogQ2hhcHRlciAxNjogQXRtb3NwaGVyaWMgUmVmcmFjdGlvbi5cbiAqXG4gKiBGdW5jdGlvbnMgaGVyZSBhc3N1bWUgYXRtb3NwaGVyaWMgcHJlc3N1cmUgb2YgMTAxMCBtYiwgdGVtcGVyYXR1cmUgb2ZcbiAqIDEwwrBDLCBhbmQgeWVsbG93IGxpZ2h0LlxuICovXG5pbXBvcnQgc2V4YSBmcm9tICcuL3NleGFnZXNpbWFsLmpzJ1xuY29uc3QgeyBzaW4sIHRhbiB9ID0gTWF0aFxuY29uc3QgRDJSID0gTWF0aC5QSSAvIDE4MFxuXG5jb25zdCBndDE1dHJ1ZTEgPSBuZXcgc2V4YS5BbmdsZShmYWxzZSwgMCwgMCwgNTguMjk0KS5yYWQoKVxuY29uc3QgZ3QxNXRydWUyID0gbmV3IHNleGEuQW5nbGUoZmFsc2UsIDAsIDAsIDAuMDY2OCkucmFkKClcbmNvbnN0IGd0MTVhcHAxID0gbmV3IHNleGEuQW5nbGUoZmFsc2UsIDAsIDAsIDU4LjI3NikucmFkKClcbmNvbnN0IGd0MTVhcHAyID0gbmV3IHNleGEuQW5nbGUoZmFsc2UsIDAsIDAsIDAuMDgyNCkucmFkKClcblxuLyoqXG4gKiBndDE1VHJ1ZSByZXR1cm5zIHJlZnJhY3Rpb24gZm9yIG9idGFpbmluZyB0cnVlIGFsdGl0dWRlIHdoZW4gYWx0aXR1ZGVcbiAqIGlzIGdyZWF0ZXIgdGhhbiAxNSBkZWdyZWVzIChhYm91dCAwLjI2IHJhZGlhbnMuKVxuICpcbiAqIGgwIG11c3QgYmUgYSBtZWFzdXJlZCBhcHBhcmVudCBhbHRpdHVkZSBvZiBhIGNlbGVzdGlhbCBib2R5IGluIHJhZGlhbnMuXG4gKlxuICogUmVzdWx0IGlzIHJlZnJhY3Rpb24gdG8gYmUgc3VidHJhY3RlZCBmcm9tIGgwIHRvIG9idGFpbiB0aGUgdHJ1ZSBhbHRpdHVkZVxuICogb2YgdGhlIGJvZHkuICBVbml0IGlzIHJhZGlhbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBndDE1VHJ1ZSAoaDApIHsgLy8gKGgwIGZsb2F0NjQpICBmbG9hdDY0XG4gIC8vICgxNi4xKSBwLiAxMDVcbiAgY29uc3QgdCA9IHRhbihNYXRoLlBJIC8gMiAtIGgwKVxuICByZXR1cm4gZ3QxNXRydWUxICogdCAtIGd0MTV0cnVlMiAqIHQgKiB0ICogdFxufVxuXG4vKipcbiAqIGd0MTVBcHBhcmVudCByZXR1cm5zIHJlZnJhY3Rpb24gZm9yIG9idGFpbmluZyBhcHBhcmVudCBhbHRpdHVkZSB3aGVuXG4gKiBhbHRpdHVkZSBpcyBncmVhdGVyIHRoYW4gMTUgZGVncmVlcyAoYWJvdXQgMC4yNiByYWRpYW5zLilcbiAqXG4gKiBoIG11c3QgYmUgYSBjb21wdXRlZCB0cnVlIFwiYWlybGVzc1wiIGFsdGl0dWRlIG9mIGEgY2VsZXN0aWFsIGJvZHkgaW4gcmFkaWFucy5cbiAqXG4gKiBSZXN1bHQgaXMgcmVmcmFjdGlvbiB0byBiZSBhZGRlZCB0byBoIHRvIG9idGFpbiB0aGUgYXBwYXJlbnQgYWx0aXR1ZGVcbiAqIG9mIHRoZSBib2R5LiAgVW5pdCBpcyByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3QxNUFwcGFyZW50IChoKSB7IC8vIChoIGZsb2F0NjQpICBmbG9hdDY0XG4gIC8vICgxNi4yKSBwLiAxMDVcbiAgY29uc3QgdCA9IHRhbihNYXRoLlBJIC8gMiAtIGgpXG4gIHJldHVybiBndDE1YXBwMSAqIHQgLSBndDE1YXBwMiAqIHQgKiB0ICogdFxufVxuXG4vKipcbiAqIEJlbm5ldHQgcmV0dXJucyByZWZyYWN0aW9uIGZvciBvYnRhaW5pbmcgdHJ1ZSBhbHRpdHVkZS5cbiAqXG4gKiBoMCBtdXN0IGJlIGEgbWVhc3VyZWQgYXBwYXJlbnQgYWx0aXR1ZGUgb2YgYSBjZWxlc3RpYWwgYm9keSBpbiByYWRpYW5zLlxuICpcbiAqIFJlc3VsdHMgYXJlIGFjY3VyYXRlIHRvIDAuMDcgYXJjIG1pbiBmcm9tIGhvcml6b24gdG8gemVuaXRoLlxuICpcbiAqIFJlc3VsdCBpcyByZWZyYWN0aW9uIHRvIGJlIHN1YnRyYWN0ZWQgZnJvbSBoMCB0byBvYnRhaW4gdGhlIHRydWUgYWx0aXR1ZGVcbiAqIG9mIHRoZSBib2R5LiAgVW5pdCBpcyByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYmVubmV0dCAoaDApIHsgLy8gKGgwIGZsb2F0NjQpICBmbG9hdDY0XG4gIC8vICgxNi4zKSBwLiAxMDZcbiAgY29uc3QgYzEgPSBEMlIgLyA2MFxuICBjb25zdCBjNzMxID0gNy4zMSAqIEQyUiAqIEQyUlxuICBjb25zdCBjNDQgPSA0LjQgKiBEMlJcbiAgcmV0dXJuIGMxIC8gdGFuKGgwICsgYzczMSAvIChoMCArIGM0NCkpXG59XG5cbi8qKlxuICogQmVubmV0dDIgcmV0dXJucyByZWZyYWN0aW9uIGZvciBvYnRhaW5pbmcgdHJ1ZSBhbHRpdHVkZS5cbiAqXG4gKiBTaW1pbGFyIHRvIEJlbm5ldHQsIGJ1dCBhIGNvcnJlY3Rpb24gaXMgYXBwbGllZCB0byBnaXZlIGEgbW9yZSBhY2N1cmF0ZVxuICogcmVzdWx0LlxuICpcbiAqIFJlc3VsdHMgYXJlIGFjY3VyYXRlIHRvIDAuMDE1IGFyYyBtaW4uICBSZXN1bHQgdW5pdCBpcyByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYmVubmV0dDIgKGgwKSB7IC8vIChoMCBmbG9hdDY0KSAgZmxvYXQ2NFxuICBjb25zdCBjTWluID0gNjAgLyBEMlJcbiAgY29uc3QgYzA2ID0gMC4wNiAvIGNNaW5cbiAgY29uc3QgYzE0NyA9IDE0LjcgKiBjTWluICogRDJSXG4gIGNvbnN0IGMxMyA9IDEzICogRDJSXG4gIGNvbnN0IFIgPSBiZW5uZXR0KGgwKVxuICByZXR1cm4gUiAtIGMwNiAqIHNpbihjMTQ3ICogUiArIGMxMylcbn1cblxuLyoqXG4gKiBTYWVtdW5kc3NvbiByZXR1cm5zIHJlZnJhY3Rpb24gZm9yIG9idGFpbmluZyBhcHBhcmVudCBhbHRpdHVkZS5cbiAqXG4gKiBoIG11c3QgYmUgYSBjb21wdXRlZCB0cnVlIFwiYWlybGVzc1wiIGFsdGl0dWRlIG9mIGEgY2VsZXN0aWFsIGJvZHkgaW4gcmFkaWFucy5cbiAqXG4gKiBSZXN1bHQgaXMgcmVmcmFjdGlvbiB0byBiZSBhZGRlZCB0byBoIHRvIG9idGFpbiB0aGUgYXBwYXJlbnQgYWx0aXR1ZGVcbiAqIG9mIHRoZSBib2R5LlxuICpcbiAqIFJlc3VsdHMgYXJlIGNvbnNpc3RlbnQgd2l0aCBCZW5uZXR0IHRvIHdpdGhpbiA0IGFyYyBzZWMuXG4gKiBSZXN1bHQgdW5pdCBpcyByYWRpYW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2FlbXVuZHNzb24gKGgpIHsgLy8gKGggZmxvYXQ2NCkgIGZsb2F0NjRcbiAgLy8gKDE2LjQpIHAuIDEwNlxuICBjb25zdCBjMTAyID0gMS4wMiAqIEQyUiAvIDYwXG4gIGNvbnN0IGMxMDMgPSAxMC4zICogRDJSICogRDJSXG4gIGNvbnN0IGM1MTEgPSA1LjExICogRDJSXG4gIHJldHVybiBjMTAyIC8gdGFuKGggKyBjMTAzIC8gKGggKyBjNTExKSlcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBndDE1VHJ1ZSxcbiAgZ3QxNUFwcGFyZW50LFxuICBiZW5uZXR0LFxuICBiZW5uZXR0MixcbiAgc2FlbXVuZHNzb25cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/refraction.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/rise.js":
/*!*********************************************!*\
  !*** ./node_modules/astronomia/src/rise.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PlanetRise: () => (/* binding */ PlanetRise),\n/* harmony export */   Stdh0Lunar: () => (/* binding */ Stdh0Lunar),\n/* harmony export */   Stdh0LunarMean: () => (/* binding */ Stdh0LunarMean),\n/* harmony export */   Stdh0Solar: () => (/* binding */ Stdh0Solar),\n/* harmony export */   Stdh0Stellar: () => (/* binding */ Stdh0Stellar),\n/* harmony export */   approxTimes: () => (/* binding */ approxTimes),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   errorAboveHorizon: () => (/* binding */ errorAboveHorizon),\n/* harmony export */   errorBelowHorizon: () => (/* binding */ errorBelowHorizon),\n/* harmony export */   hourAngle: () => (/* binding */ hourAngle),\n/* harmony export */   meanRefraction: () => (/* binding */ meanRefraction),\n/* harmony export */   refraction: () => (/* binding */ refraction),\n/* harmony export */   stdh0: () => (/* binding */ stdh0),\n/* harmony export */   stdh0Lunar: () => (/* binding */ stdh0Lunar),\n/* harmony export */   stdh0LunarMean: () => (/* binding */ stdh0LunarMean),\n/* harmony export */   stdh0Solar: () => (/* binding */ stdh0Solar),\n/* harmony export */   stdh0Stellar: () => (/* binding */ stdh0Stellar),\n/* harmony export */   times: () => (/* binding */ times)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _deltat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./deltat.js */ \"./node_modules/astronomia/src/deltat.js\");\n/* harmony import */ var _elliptic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./elliptic.js */ \"./node_modules/astronomia/src/elliptic.js\");\n/* harmony import */ var _interpolation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interpolation.js */ \"./node_modules/astronomia/src/interpolation.js\");\n/* harmony import */ var _julian_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./julian.js */ \"./node_modules/astronomia/src/julian.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/* harmony import */ var _sidereal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sidereal.js */ \"./node_modules/astronomia/src/sidereal.js\");\n/* harmony import */ var _globe_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./globe.js */ \"./node_modules/astronomia/src/globe.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/* eslint key-spacing: 1 */\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module rise\n */\n/**\n * Rise: Chapter 15, Rising, Transit, and Setting.\n */\n\n\n\n\n\n\n\n\n // eslint-disable-line no-unused-vars\n // eslint-disable-line no-unused-vars\nconst { acos, asin, cos, sin } = Math\n\n/**\n * @typedef {object} RiseObj\n * @property {number} rise - in seconds\n * @property {number} transit - in seconds\n * @property {number} set - in seconds\n */\n\nconst SECS_PER_DEGREE = 240 // = 86400 / 360\nconst SECS_PER_DAY = 86400\nconst D2R = Math.PI / 180\n\nconst errorAboveHorizon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].errorCode('always above horizon', -1)\nconst errorBelowHorizon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].errorCode('always below horizon', 1)\n\n/**\n * mean refraction of the atmosphere\n */\nconst meanRefraction = new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Angle(false, 0, 34, 0).rad()\n\n/**\n * \"Standard altitudes\" for various bodies already including `meanRefraction` of 0°34'\n *\n * The standard altitude is the geometric altitude of the center of body\n * at the time of apparent rising or seting.\n */\nconst stdh0 = {\n  stellar: -meanRefraction,\n  solar: new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Angle(true, 0, 50, 0).rad(),\n  // not containing meanRefraction\n  lunar: _sexagesimal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].angleFromDeg(0.7275),\n  lunarMean: _sexagesimal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].angleFromDeg(0.125)\n}\n\n/**\n * Helper function to obtain corrected refraction\n * @param {number} h0 - altitude of the body in radians containing `meanRefraction` of 0°34'\n * @param {number} [corr] - the calcluated refraction e.g. from package `refraction` in radians\n * @return {number} refraction value in radians\n */\nfunction refraction (h0, corr) {\n  if (!corr) {\n    return h0\n  } else {\n    return h0 - meanRefraction - corr\n  }\n}\n\n/**\n * standard altitude for stars, planets at apparent rising, seting\n */\nconst stdh0Stellar = (_refraction) => refraction(stdh0.stellar, _refraction)\nconst Stdh0Stellar = stdh0Stellar() // for backward-compatibility\n/**\n * standard altitude for sun for upper limb of the disk\n */\nconst stdh0Solar = (_refraction) => refraction(stdh0.solar, _refraction)\nconst Stdh0Solar = stdh0Solar() // for backward-compatibility\n\n/**\n * standard altitude for moon (low accuracy)\n */\nconst stdh0LunarMean = (_refraction) => {\n  return stdh0.lunarMean - refraction(_refraction)\n}\nconst Stdh0LunarMean = stdh0LunarMean() // for backward-compatibility\n/**\n * Stdh0Lunar is the standard altitude of the Moon considering π, the\n * Moon's horizontal parallax.\n * @param {number} π - the Moon's horizontal parallax\n * @param {number} [refraction] - optional value for refraction in radians if\n *        omitted than meanRefraction is used\n * @return {number} altitude of Moon in radians\n */\nconst stdh0Lunar = (π, refraction) => {\n  return stdh0.lunar * π - (refraction || meanRefraction)\n}\nconst Stdh0Lunar = stdh0Lunar // for backward-compatibility\n\n/**\n * @return {number} local angle in radians\n */\nfunction hourAngle (lat, h0, δ) {\n  // approximate local hour angle\n  const cosH = (sin(h0) - sin(lat) * sin(δ)) / (cos(lat) * cos(δ)) // (15.1) p. 102\n  if (cosH < -1) {\n    throw errorAboveHorizon\n  } else if (cosH > 1) {\n    throw errorBelowHorizon\n  }\n  const H = acos(cosH)\n  return H\n}\n\n/**\n * @param {number} lon - longitude in radians\n * @param {number} α - right ascension in radians\n * @param {number} th0 - sidereal.apparent0UT in seconds of day `[0...86400[`\n * @return {number} time of transit in seconds of day `[0, 86400[`\n */\nfunction _mt (lon, α, th0) {\n  // const mt = (((lon + α) * 180 / Math.PI - (th0 * 360 / 86400)) * 86400 / 360)\n  const mt = (lon + α) * SECS_PER_DEGREE * 180 / Math.PI - th0\n  return mt\n}\n\n/**\n * @param {number} Th0 - sidereal.apparent0UT in seconds of day `[0...86400[`\n * @param {number} m - motion in seconds of day `[0...86400[`\n * @return {number} new siderial time seconds of day `[0...86400[`\n */\nfunction _th0 (Th0, m) {\n  // in original formula Th0 = 0...360 and m = 0...1 -> return value would be in 0...360 degrees\n  // Th0 /= 240\n  // m /= 86400\n  const th0 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(Th0 + m * 360.985647 / 360, SECS_PER_DAY) // p103\n  return th0 // 0...86400 in seconds angle\n}\n\n/**\n * maintain backward compatibility - will be removed in v2\n * return value in future will be an object not an array\n * @private\n * @param {RiseObj} rs\n * @return {RiseObj}\n */\nfunction _compatibility (rs) {\n  const _rs = [rs.rise, rs.transit, rs.set]\n  _rs.rise = rs.rise\n  _rs.transit = rs.transit\n  _rs.set = rs.set\n  return _rs\n}\n\n/**\n * ApproxTimes computes approximate UT rise, transit and set times for\n * a celestial object on a day of interest.\n *\n * The function argurments do not actually include the day, but do include\n * values computed from the day.\n *\n * @param {GlobeCoord} p - is geographic coordinates of observer.\n * @param {number} h0 - is \"standard altitude\" of the body in radians\n * @param {number} Th0 - is apparent sidereal time at 0h UT at Greenwich in seconds\n *        (range 0...86400) must be the time on the day of interest, in seconds.\n *        See sidereal.apparent0UT\n * @param {number} α - right ascension (radians)\n * @param {number} δ - declination (radians)\n * @return {RiseObj} Result units are seconds and are in the range [0,86400)\n * @throws Error\n */\nfunction approxTimes (p, h0, Th0, α, δ) {\n  const H0 = hourAngle(p.lat, h0, δ) * SECS_PER_DEGREE * 180 / Math.PI // in degrees per day === seconds\n  // approximate transit, rise, set times.\n  // (15.2) p. 102.0\n  const mt = _mt(p.lon, α, Th0)\n  const rs = {}\n  rs.transit = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(mt, SECS_PER_DAY)\n  rs.rise = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(mt - H0, SECS_PER_DAY)\n  rs.set = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(mt + H0, SECS_PER_DAY)\n  return _compatibility(rs)\n}\n\n/**\n * Times computes UT rise, transit and set times for a celestial object on\n * a day of interest.\n *\n * The function argurments do not actually include the day, but do include\n * a number of values computed from the day.\n *\n * @param {GlobeCoord} p - is geographic coordinates of observer.\n * @param {number} ΔT - is delta T in seconds\n * @param {number} h0 - is \"standard altitude\" of the body in radians\n * @param {number} Th0 - is apparent sidereal time at 0h UT at Greenwich in seconds\n *        (range 0...86400) must be the time on the day of interest, in seconds.\n *        See sidereal.apparent0UT\n * @param {Array<number>} α3 - slices of three right ascensions\n * @param {Array<number>} δ3 - slices of three declinations.\n *        α3, δ3 must be values at 0h dynamical time for the day before, the day of,\n *        and the day after the day of interest.  Units are radians.\n *\n * @return {RiseObj} Result units are seconds and are in the range [0,86400)\n * @throws Error\n */\nfunction times (p, ΔT, h0, Th0, α3, δ3) { // (p globe.Coord, ΔT, h0, Th0 float64, α3, δ3 []float64)  (mRise, mTransit, mSet float64, err error)\n  const rs = approxTimes(p, h0, Th0, α3[1], δ3[1])\n  const d3α = new _interpolation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Len3(-SECS_PER_DAY, SECS_PER_DAY, α3)\n  const d3δ = new _interpolation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Len3(-SECS_PER_DAY, SECS_PER_DAY, δ3)\n\n  // adjust mTransit\n  const ut = rs.transit + ΔT\n  const α = d3α.interpolateX(ut)\n  const th0 = _th0(Th0, rs.transit)\n  const H = -1 * _mt(p.lon, α, th0) // in secs // Hmeus = 0...360\n  rs.transit -= H\n\n  // adjust mRise, mSet\n  const [sLat, cLat] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(p.lat)\n\n  const adjustRS = function (m) {\n    const ut = m + ΔT\n    const α = d3α.interpolateX(ut)\n    const δ = d3δ.interpolateX(ut)\n    const th0 = _th0(Th0, m)\n    const H = -1 * _mt(p.lon, α, th0)\n    const Hrad = (H / SECS_PER_DEGREE) * D2R\n    const h = asin(((sLat * sin(δ)) + (cLat * cos(δ) * cos(Hrad)))) // formula 13.6\n    const Δm = (SECS_PER_DAY * (h - h0) / (cos(δ) * cLat * sin(Hrad) * 2 * Math.PI)) // formula p103 3\n    return m + Δm\n  }\n\n  rs.rise = adjustRS(rs.rise)\n  rs.set = adjustRS(rs.set)\n\n  return _compatibility(rs)\n}\n\n/**\n * RisePlanet computes rise, transit and set times for a planet on a day of interest.\n */\nclass PlanetRise {\n  /**\n   * @param {number|Date} jd - Julian Day starting at midnight or Date object\n   * @param {number} lat - geographic latitude of the observerin degrees\n   * @param {number} lon - geographic longitude of the observer in degrees (measured positively westward)\n   * @param {Planet} earth - VSOP87 Planet object for Earth\n   * @param {Planet} planet - VSOP87 Planet object of observed body\n   * @param {object} [opts]\n   * @param {boolean} [opts.date] - return times as Date objects\n   * @param {number} [opts.refraction] - use different refraction than `stdh0Stellar`\n   */\n  constructor (jd, lat, lon, earth, planet, opts) {\n    this.opts = opts || {}\n    this.refraction = this.opts.refraction || stdh0Stellar()\n    if (jd instanceof Date) {\n      jd = new _julian_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Calendar().fromDate(jd).toJD()\n    }\n    this.jd = Math.floor(jd - 0.5) + 0.5 // start at midnight\n    this.lat = lat * D2R // convert to radians\n    this.lon = lon * D2R\n    const cal = new _julian_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Calendar().fromJD(this.jd)\n    this.jde = cal.toJDE()\n    this.ΔT = _deltat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].deltaT(cal.toYear())\n    this.earth = earth\n    this.planet = planet\n  }\n\n  approxTimes () {\n    const body = _elliptic_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].position(this.planet, this.earth, this.jde)\n    const Th0 = _sidereal_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].apparent0UT(this.jd)\n    const rs = approxTimes(\n      { lat: this.lat, lon: this.lon }, this.refraction,\n      Th0, body.ra, body.dec\n    )\n    return this._rsToJD(rs)\n  }\n\n  times () {\n    const body = [\n      _elliptic_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].position(this.planet, this.earth, this.jde - 1),\n      _elliptic_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].position(this.planet, this.earth, this.jde),\n      _elliptic_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].position(this.planet, this.earth, this.jde + 1)\n    ]\n    const Th0 = _sidereal_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].apparent0UT(this.jd)\n    const rs = times(\n      { lat: this.lat, lon: this.lon }, this.ΔT, this.refraction,\n      Th0, this._toArr(body, 'ra'), this._toArr(body, 'dec')\n    )\n    return this._rsToJD(rs)\n  }\n\n  /** @private */\n  _toArr (body, p) {\n    return body.map((item) => {\n      return item[p]\n    })\n  }\n\n  /** @private */\n  _rsToJD (rs) {\n    return {\n      rise: this._toJD(rs.rise),\n      transit: this._toJD(rs.transit),\n      set: this._toJD(rs.set)\n    }\n  }\n\n  /** @private */\n  _toJD (secs) {\n    const jd = this.jd + secs / 86400\n    if (this.opts.date) {\n      return new _julian_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Calendar().fromJD(jd).toDate()\n    } else {\n      return jd\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  errorAboveHorizon,\n  errorBelowHorizon,\n  meanRefraction,\n  stdh0,\n  refraction,\n  stdh0Stellar,\n  Stdh0Stellar,\n  stdh0Solar,\n  Stdh0Solar,\n  stdh0LunarMean,\n  Stdh0LunarMean,\n  stdh0Lunar,\n  Stdh0Lunar,\n  hourAngle,\n  approxTimes,\n  times,\n  PlanetRise\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/rise.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/saturnmoons.js":
/*!****************************************************!*\
  !*** ./node_modules/astronomia/src/saturnmoons.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Qs: () => (/* binding */ Qs),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   dione: () => (/* binding */ dione),\n/* harmony export */   enceladus: () => (/* binding */ enceladus),\n/* harmony export */   hyperion: () => (/* binding */ hyperion),\n/* harmony export */   iapetus: () => (/* binding */ iapetus),\n/* harmony export */   mimas: () => (/* binding */ mimas),\n/* harmony export */   positions: () => (/* binding */ positions),\n/* harmony export */   rhea: () => (/* binding */ rhea),\n/* harmony export */   tethys: () => (/* binding */ tethys),\n/* harmony export */   titan: () => (/* binding */ titan)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/* harmony import */ var _precess_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precess.js */ \"./node_modules/astronomia/src/precess.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module saturnmoons\n */\n/**\n * Saturnmoons: Chapter 46, Positions of the Satellites of Saturn\n */\n\n\n\n // eslint-disable-line no-unused-vars\n\n\n\n// array positions of Saturnmoons returned from positions().\nconst mimas = 0\nconst enceladus = 1\nconst tethys = 2\nconst dione = 3\nconst rhea = 4\nconst titan = 5\nconst hyperion = 6\nconst iapetus = 7\n\n/**\n * XY holds coordinates returned from positions().\n */\nfunction XY (x, y) {\n  this.x = x\n  this.y = y\n}\n\nconst d = Math.PI / 180\n\n/**\n * Positions returns positions of the eight major moons of Saturn.\n *\n * Results returned in argument pos, which must not be undefined.\n *\n * Result units are Saturn radii.\n *\n * @param {number} jde - Julian ephemeris day\n * @param {Planet} earth - VSOP87 planet Earth // eslint-disable-line no-unused-vars\n * @param {Planet} saturn - VSOP87 planet Saturn // eslint-disable-line no-unused-vars\n * @return {XY[]} Array of Moon Positions in `XY`\n *   Use `M.mimas ... M.iapetus` to resolve to Moon and its position at `jde`\n */\nfunction positions (jde, earth, saturn) {\n  const sol = _solar_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].trueVSOP87(earth, jde)\n  const [s, β, R] = [sol.lon, sol.lat, sol.range]\n  const [ss, cs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(s)\n  const sβ = Math.sin(β)\n  let Δ = 9.0\n  let x\n  let y\n  let z = 0\n  let _jde\n\n  const f = function () {\n    const τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n    _jde = jde - τ\n    const { lon, lat, range } = saturn.position(_jde)\n    const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].toFK5(lon, lat, _jde) // eslint-disable-line no-unused-vars\n    const [l, b] = [fk5.lon, fk5.lat]\n    const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l)\n    const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(b)\n    x = range * cb * cl + R * cs\n    y = range * cb * sl + R * ss\n    z = range * sb + R * sβ\n    Δ = Math.sqrt(x * x + y * y + z * z)\n  }\n  f()\n  f()\n\n  let λ0 = Math.atan2(y, x)\n  let β0 = Math.atan(z / Math.hypot(x, y))\n  let ecl = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ0, β0)\n  ecl = _precess_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eclipticPosition(ecl, _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JDEToJulianYear(jde), _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JDEToJulianYear(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].B1950))\n  λ0 = ecl.lon\n  β0 = ecl.lat\n  const q = new Qs(_jde)\n  const s4 = [\n    new R4(), // 0 unused\n    q.mimas(),\n    q.enceladus(),\n    q.tethys(),\n    q.dione(),\n    q.rhea(),\n    q.titan(),\n    q.hyperion(),\n    q.iapetus()\n  ]\n\n  const X = new Array(9).fill(0)\n  const Y = new Array(9).fill(0)\n  const Z = new Array(9).fill(0)\n  for (let j = 1; j <= 8; j++) {\n    const u = s4[j].λ - s4[j].Ω\n    const w = s4[j].Ω - 168.8112 * d\n    const [su, cu] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u)\n    const [sw, cw] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(w)\n    const [sγ, cγ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(s4[j].γ)\n    const r = s4[j].r\n    X[j] = r * (cu * cw - su * cγ * sw)\n    Y[j] = r * (su * cw * cγ + cu * sw)\n    Z[j] = r * su * sγ\n  }\n  Z[0] = 1\n  const [sλ0, cλ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λ0)\n  const [sβ0, cβ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β0)\n  const A = new Array(9).fill(0)\n  const B = new Array(9).fill(0)\n  const C = new Array(9).fill(0)\n  for (const j in X) {\n    let a = X[j]\n    let b = q.c1 * Y[j] - q.s1 * Z[j]\n    const c = q.s1 * Y[j] + q.c1 * Z[j]\n    const a0 = q.c2 * a - q.s2 * b\n    b = q.s2 * a + q.c2 * b\n    a = a0\n\n    A[j] = a * sλ0 - b * cλ0\n    b = a * cλ0 + b * sλ0\n\n    B[j] = b * cβ0 + c * sβ0\n    C[j] = c * cβ0 - b * sβ0\n  }\n\n  const pos = new Array(9)\n  const D = Math.atan2(A[0], C[0])\n  const [sD, cD] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(D)\n  for (let j = 1; j <= 8; j++) {\n    X[j] = A[j] * cD - C[j] * sD\n    Y[j] = A[j] * sD + C[j] * cD\n    Z[j] = B[j]\n    const d = X[j] / s4[j].r\n    X[j] += Math.abs(Z[j]) / k[j] * Math.sqrt(1 - d * d)\n    const W = Δ / (Δ + Z[j] / 2475)\n    pos[j - 1] = new XY(X[j] * W, Y[j] * W)\n  }\n  return pos\n}\n\nconst k = [0, 20947, 23715, 26382, 29876, 35313, 53800, 59222, 91820]\n\nfunction R4 (λ, r, γ, Ω) {\n  this.λ = λ || 0\n  this.r = r || 0\n  this.γ = γ || 0\n  this.Ω = Ω || 0\n}\n\nfunction Qs (jde) {\n  this.t1 = jde - 2411093\n  this.t2 = this.t1 / 365.25\n  this.t3 = (jde - 2433282.423) / 365.25 + 1950\n  this.t4 = jde - 2411368\n  this.t5 = this.t4 / 365.25\n  this.t6 = jde - 2415020\n  this.t7 = this.t6 / 36525\n  this.t8 = this.t6 / 365.25\n  this.t9 = (jde - 2442000.5) / 365.25\n  this.t10 = jde - 2409786\n  this.t11 = this.t10 / 36525\n  this.W0 = 5.095 * d * (this.t3 - 1866.39)\n  this.W1 = 74.4 * d + 32.39 * d * this.t2\n  this.W2 = 134.3 * d + 92.62 * d * this.t2\n  this.W3 = 42 * d - 0.5118 * d * this.t5\n  this.W4 = 276.59 * d + 0.5118 * d * this.t5\n  this.W5 = 267.2635 * d + 1222.1136 * d * this.t7\n  this.W6 = 175.4762 * d + 1221.5515 * d * this.t7\n  this.W7 = 2.4891 * d + 0.002435 * d * this.t7\n  this.W8 = 113.35 * d - 0.2597 * d * this.t7\n  this.s1 = Math.sin(28.0817 * d)\n  this.c1 = Math.cos(28.0817 * d)\n  this.s2 = Math.sin(168.8112 * d)\n  this.c2 = Math.cos(168.8112 * d)\n  this.e1 = 0.05589 - 0.000346 * this.t7\n  this.sW0 = Math.sin(this.W0)\n  this.s3W0 = Math.sin(3 * this.W0)\n  this.s5W0 = Math.sin(5 * this.W0)\n  this.sW1 = Math.sin(this.W1)\n  this.sW2 = Math.sin(this.W2)\n  this.sW3 = Math.sin(this.W3)\n  this.cW3 = Math.cos(this.W3)\n  this.sW4 = Math.sin(this.W4)\n  this.cW4 = Math.cos(this.W4)\n  this.sW7 = Math.sin(this.W7)\n  this.cW7 = Math.cos(this.W7)\n  return this\n}\n\nQs.prototype.mimas = function () {\n  const r = new R4()\n  const L = 127.64 * d + 381.994497 * d * this.t1 -\n    43.57 * d * this.sW0 - 0.72 * d * this.s3W0 - 0.02144 * d * this.s5W0\n  const p = 106.1 * d + 365.549 * d * this.t2\n  const M = L - p\n  const C = 2.18287 * d * Math.sin(M) +\n    0.025988 * d * Math.sin(2 * M) + 0.00043 * d * Math.sin(3 * M)\n  r.λ = L + C\n  r.r = 3.06879 / (1 + 0.01905 * Math.cos(M + C))\n  r.γ = 1.563 * d\n  r.Ω = 54.5 * d - 365.072 * d * this.t2\n  return r\n}\n\nQs.prototype.enceladus = function () {\n  const r = new R4()\n  const L = 200.317 * d + 262.7319002 * d * this.t1 + 0.25667 * d * this.sW1 + 0.20883 * d * this.sW2\n  const p = 309.107 * d + 123.44121 * d * this.t2\n  const M = L - p\n  const C = 0.55577 * d * Math.sin(M) + 0.00168 * d * Math.sin(2 * M)\n  r.λ = L + C\n  r.r = 3.94118 / (1 + 0.00485 * Math.cos(M + C))\n  r.γ = 0.0262 * d\n  r.Ω = 348 * d - 151.95 * d * this.t2\n  return r\n}\n\nQs.prototype.tethys = function () {\n  const r = new R4()\n  r.λ = 285.306 * d + 190.69791226 * d * this.t1 +\n    2.063 * d * this.sW0 + 0.03409 * d * this.s3W0 + 0.001015 * d * this.s5W0\n  r.r = 4.880998\n  r.γ = 1.0976 * d\n  r.Ω = 111.33 * d - 72.2441 * d * this.t2\n  return r\n}\n\nQs.prototype.dione = function () {\n  const r = new R4()\n  const L = 254.712 * d + 131.53493193 * d * this.t1 - 0.0215 * d * this.sW1 - 0.01733 * d * this.sW2\n  const p = 174.8 * d + 30.82 * d * this.t2\n  const M = L - p\n  const C = 0.24717 * d * Math.sin(M) + 0.00033 * d * Math.sin(2 * M)\n  r.λ = L + C\n  r.r = 6.24871 / (1 + 0.002157 * Math.cos(M + C))\n  r.γ = 0.0139 * d\n  r.Ω = 232 * d - 30.27 * d * this.t2\n  return r\n}\n\nQs.prototype.rhea = function () {\n  const pʹ = 342.7 * d + 10.057 * d * this.t2\n  const [spʹ, cpʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(pʹ)\n  const a1 = 0.000265 * spʹ + 0.001 * this.sW4\n  const a2 = 0.000265 * cpʹ + 0.001 * this.cW4\n  const e = Math.hypot(a1, a2)\n  const p = Math.atan2(a1, a2)\n  const N = 345 * d - 10.057 * d * this.t2\n  const [sN, cN] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(N)\n  const λʹ = 359.244 * d + 79.6900472 * d * this.t1 + 0.086754 * d * sN\n  const i = 28.0362 * d + 0.346898 * d * cN + 0.0193 * d * this.cW3\n  const Ω = 168.8034 * d + 0.736936 * d * sN + 0.041 * d * this.sW3\n  const a = 8.725924\n  return this.subr(λʹ, p, e, a, Ω, i)\n}\n\nQs.prototype.subr = function (λʹ, p, e, a, Ω, i) {\n  const r = new R4()\n  const M = λʹ - p\n  const e2 = e * e\n  const e3 = e2 * e\n  const e4 = e2 * e2\n  const e5 = e3 * e2\n  const C = (2 * e - 0.25 * e3 + 0.0520833333 * e5) * Math.sin(M) +\n    (1.25 * e2 - 0.458333333 * e4) * Math.sin(2 * M) +\n    (1.083333333 * e3 - 0.671875 * e5) * Math.sin(3 * M) +\n    1.072917 * e4 * Math.sin(4 * M) + 1.142708 * e5 * Math.sin(5 * M)\n  r.r = a * (1 - e2) / (1 + e * Math.cos(M + C)) // return value\n  const g = Ω - 168.8112 * d\n  const [si, ci] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(i)\n  const [sg, cg] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(g)\n  const a1 = si * sg\n  const a2 = this.c1 * si * cg - this.s1 * ci\n  r.γ = Math.asin(Math.hypot(a1, a2)) // return value\n  const u = Math.atan2(a1, a2)\n  r.Ω = 168.8112 * d + u // return value (w)\n  const h = this.c1 * si - this.s1 * ci * cg\n  const ψ = Math.atan2(this.s1 * sg, h)\n  r.λ = λʹ + C + u - g - ψ // return value\n  return r\n}\n\nQs.prototype.titan = function () {\n  const L = 261.1582 * d + 22.57697855 * d * this.t4 + 0.074025 * d * this.sW3\n  const iʹ = 27.45141 * d + 0.295999 * d * this.cW3\n  const Ωʹ = 168.66925 * d + 0.628808 * d * this.sW3\n  const [siʹ, ciʹ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(iʹ)\n  const [sΩʹW8, cΩʹW8] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(Ωʹ - this.W8)\n  const a1 = this.sW7 * sΩʹW8\n  const a2 = this.cW7 * siʹ - this.sW7 * ciʹ * cΩʹW8\n  const g0 = 102.8623 * d\n  const ψ = Math.atan2(a1, a2)\n  const s = Math.hypot(a1, a2)\n  let g = this.W4 - Ωʹ - ψ\n  let ϖ = 0\n  const [s2g0, c2g0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * g0)\n  const f = () => {\n    ϖ = this.W4 + 0.37515 * d * (Math.sin(2 * g) - s2g0)\n    g = ϖ - Ωʹ - ψ\n  }\n  f()\n  f()\n  f()\n  const eʹ = 0.029092 + 0.00019048 * (Math.cos(2 * g) - c2g0)\n  const qq = 2 * (this.W5 - ϖ)\n  const b1 = siʹ * sΩʹW8\n  const b2 = this.cW7 * siʹ * cΩʹW8 - this.sW7 * ciʹ\n  const θ = Math.atan2(b1, b2) + this.W8\n  const [sq, cq] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(qq)\n  const e = eʹ + 0.002778797 * eʹ * cq\n  const p = ϖ + 0.159215 * d * sq\n  const u = 2 * this.W5 - 2 * θ + ψ\n  const [su, cu] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u)\n  const h = 0.9375 * eʹ * eʹ * sq + 0.1875 * s * s * Math.sin(2 * (this.W5 - θ))\n  const λʹ = L - 0.254744 * d *\n    (this.e1 * Math.sin(this.W6) + 0.75 * this.e1 * this.e1 * Math.sin(2 * this.W6) + h)\n  const i = iʹ + 0.031843 * d * s * cu\n  const Ω = Ωʹ + 0.031843 * d * s * su / siʹ\n  const a = 20.216193\n  return this.subr(λʹ, p, e, a, Ω, i)\n}\n\nQs.prototype.hyperion = function () {\n  const η = 92.39 * d + 0.5621071 * d * this.t6\n  const ζ = 148.19 * d - 19.18 * d * this.t8\n  const θ = 184.8 * d - 35.41 * d * this.t9\n  const θʹ = θ - 7.5 * d\n  const as = 176 * d + 12.22 * d * this.t8\n  const bs = 8 * d + 24.44 * d * this.t8\n  const cs = bs + 5 * d\n  const ϖ = 69.898 * d - 18.67088 * d * this.t8\n  const φ = 2 * (ϖ - this.W5)\n  const χ = 94.9 * d - 2.292 * d * this.t8\n  const [sη, cη] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(η)\n  const [sζ, cζ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ζ)\n  const [s2ζ, c2ζ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * ζ)\n  const [s3ζ, c3ζ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(3 * ζ)\n  const [sζpη, cζpη] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ζ + η)\n  const [sζmη, cζmη] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ζ - η)\n  const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(φ)\n  const [sχ, cχ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(χ)\n  const [scs, ccs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(cs)\n  const a = 24.50601 - 0.08686 * cη - 0.00166 * cζpη + 0.00175 * cζmη\n  const e = 0.103458 - 0.004099 * cη - 0.000167 * cζpη + 0.000235 * cζmη +\n    0.02303 * cζ - 0.00212 * c2ζ + 0.000151 * c3ζ + 0.00013 * cφ\n  const p = ϖ + 0.15648 * d * sχ - 0.4457 * d * sη - 0.2657 * d * sζpη - 0.3573 * d * sζmη -\n    12.872 * d * sζ + 1.668 * d * s2ζ - 0.2419 * d * s3ζ - 0.07 * d * sφ\n  const λʹ = 177.047 * d + 16.91993829 * d * this.t6 + 0.15648 * d * sχ + 9.142 * d * sη +\n    0.007 * d * Math.sin(2 * η) - 0.014 * d * Math.sin(3 * η) + 0.2275 * d * sζpη +\n    0.2112 * d * sζmη - 0.26 * d * sζ - 0.0098 * d * s2ζ -\n    0.013 * d * Math.sin(as) + 0.017 * d * Math.sin(bs) - 0.0303 * d * sφ\n  const i = 27.3347 * d + 0.6434886 * d * cχ + 0.315 * d * this.cW3 + 0.018 * d * Math.cos(θ) -\n    0.018 * d * ccs\n  const Ω = 168.6812 * d + 1.40136 * d * cχ + 0.68599 * d * this.sW3 - 0.0392 * d * scs +\n    0.0366 * d * Math.sin(θʹ)\n  return this.subr(λʹ, p, e, a, Ω, i)\n}\n\nQs.prototype.iapetus = function () {\n  const L = 261.1582 * d + 22.57697855 * d * this.t4\n  const ϖʹ = 91.796 * d + 0.562 * d * this.t7\n  const ψ = 4.367 * d - 0.195 * d * this.t7\n  const θ = 146.819 * d - 3.198 * d * this.t7\n  const φ = 60.47 * d + 1.521 * d * this.t7\n  const Φ = 205.055 * d - 2.091 * d * this.t7\n  const eʹ = 0.028298 + 0.001156 * this.t11\n  const ϖ0 = 352.91 * d + 11.71 * d * this.t11\n  const μ = 76.3852 * d + 4.53795125 * d * this.t10\n  const iʹ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(this.t11, 18.4602 * d, -0.9518 * d, -0.072 * d, 0.0054 * d)\n  const Ωʹ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(this.t11, 143.198 * d, -3.919 * d, 0.116 * d, 0.008 * d)\n  const l = μ - ϖ0\n  const g = ϖ0 - Ωʹ - ψ\n  const g1 = ϖ0 - Ωʹ - φ\n  const ls = this.W5 - ϖʹ\n  const gs = ϖʹ - θ\n  const lT = L - this.W4\n  const gT = this.W4 - Φ\n  const u1 = 2 * (l + g - ls - gs)\n  const u2 = l + g1 - lT - gT\n  const u3 = l + 2 * (g - ls - gs)\n  const u4 = lT + gT - g1\n  const u5 = 2 * (ls + gs)\n  const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l)\n  const [su1, cu1] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u1)\n  const [su2, cu2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u2)\n  const [su3, cu3] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u3)\n  const [su4, cu4] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u4)\n  const [slu2, clu2] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l + u2)\n  const [sg1gT, cg1gT] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(g1 - gT)\n  const [su52g, cu52g] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u5 - 2 * g)\n  const [su5ψ, cu5ψ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u5 + ψ)\n  const [su2φ, cu2φ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(u2 + φ)\n  const [s5, c5] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l + g1 + lT + gT + φ)\n  const a = 58.935028 + 0.004638 * cu1 + 0.058222 * cu2\n  const e = eʹ - 0.0014097 * cg1gT + 0.0003733 * cu52g +\n    0.000118 * cu3 + 0.0002408 * cl + 0.0002849 * clu2 + 0.000619 * cu4\n  const w = 0.08077 * d * sg1gT + 0.02139 * d * su52g - 0.00676 * d * su3 +\n    0.0138 * d * sl + 0.01632 * d * slu2 + 0.03547 * d * su4\n  const p = ϖ0 + w / eʹ\n  const λʹ = μ - 0.04299 * d * su2 - 0.00789 * d * su1 - 0.06312 * d * Math.sin(ls) -\n    0.00295 * d * Math.sin(2 * ls) - 0.02231 * d * Math.sin(u5) + 0.0065 * d * su5ψ\n  const i = iʹ + 0.04204 * d * cu5ψ + 0.00235 * d * c5 + 0.0036 * d * cu2φ\n  const wʹ = 0.04204 * d * su5ψ + 0.00235 * d * s5 + 0.00358 * d * su2φ\n  const Ω = Ωʹ + wʹ / Math.sin(iʹ)\n  return this.subr(λʹ, p, e, a, Ω, i)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  mimas,\n  enceladus,\n  tethys,\n  dione,\n  rhea,\n  titan,\n  hyperion,\n  iapetus,\n  positions,\n  Qs\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/saturnmoons.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/saturnring.js":
/*!***************************************************!*\
  !*** ./node_modules/astronomia/src/saturnring.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   ring: () => (/* binding */ ring),\n/* harmony export */   ub: () => (/* binding */ ub)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module saturnring\n */\n/**\n * Saturnrings: Chapter 45, The Ring of Saturn\n */\n\n\n\n\n\n\n/**\n * Ring computes quantities of the ring of Saturn.\n *\n *  B  Saturnicentric latitude of the Earth referred to the plane of the ring.\n *  Bʹ  Saturnicentric latitude of the Sun referred to the plane of the ring.\n *  ΔU  Difference between Saturnicentric longitudes of the Sun and the Earth.\n *  P  Geometric position angle of the northern semiminor axis of the ring.\n *  aEdge  Major axis of the out edge of the outer ring.\n *  bEdge  Minor axis of the out edge of the outer ring.\n *\n * All results in radians.\n */\nfunction ring (jde, earth, saturn) { // (jde float64, earth, saturn *pp.V87Planet)  (B, Bʹ, ΔU, P, aEdge, bEdge float64)\n  const [f1, f2] = cl(jde, earth, saturn)\n  const [ΔU, B] = f1()\n  const [Bʹ, P, aEdge, bEdge] = f2()\n  return [B, Bʹ, ΔU, P, aEdge, bEdge]\n}\n\n/**\n * UB computes quantities required by illum.Saturn().\n *\n * Same as ΔU and B returned by Ring().  Results in radians.\n */\nfunction ub (jde, earth, saturn) { // (jde float64, earth, saturn *pp.V87Planet)  (ΔU, B float64)\n  const [f1, f2] = cl(jde, earth, saturn) // eslint-disable-line no-unused-vars\n  return f1()\n}\n\n/**\n * cl splits the work into two closures.\n */\nfunction cl (jde, earth, saturn) { // (jde float64, earth, saturn *pp.V87Planet)  (f1 func() (ΔU, B float64),\n  // f2 func() (Bʹ, P, aEdge, bEdge float64))\n  const p = Math.PI / 180\n  let i, Ω\n  let l0, b0, R\n  let Δ = 9.0\n  let λ, β\n  let si, ci, sβ, cβ, sB\n  let sbʹ, cbʹ, slʹΩ, clʹΩ\n  const f1 = function () { // (ΔU, B float64)\n    // (45.1), p. 318\n    const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n    i = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 28.075216 * p, -0.012998 * p, 0.000004 * p)\n    Ω = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 169.50847 * p, 1.394681 * p, 0.000412 * p)\n    // Step 2.0\n    const earthPos = earth.position(jde)\n    R = earthPos.range\n    const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].toFK5(earthPos.lon, earthPos.lat, jde)\n    l0 = fk5.lon\n    b0 = fk5.lat\n    const [sl0, cl0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l0)\n    const sb0 = Math.sin(b0)\n    // Steps 3, 4.0\n    let l = 0\n    let b = 0\n    let r = 0\n    let x = 0\n    let y = 0\n    let z = 0\n\n    const f = function () {\n      const τ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lightTime(Δ)\n      const saturnPos = saturn.position(jde - τ)\n      r = saturnPos.range\n      const fk5 = _planetposition_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].toFK5(saturnPos.lon, saturnPos.lat, jde)\n      l = fk5.lon\n      b = fk5.lat\n      const [sl, cl] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l)\n      const [sb, cb] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(b)\n      x = r * cb * cl - R * cl0\n      y = r * cb * sl - R * sl0\n      z = r * sb - R * sb0\n      Δ = Math.sqrt(x * x + y * y + z * z)\n    }\n    f()\n    f()\n    // Step 5.0\n    λ = Math.atan2(y, x)\n    β = Math.atan(z / Math.hypot(x, y))\n    // First part of step 6.0\n    si = Math.sin(i)\n    ci = Math.cos(i)\n    sβ = Math.sin(β)\n    cβ = Math.cos(β)\n    sB = si * cβ * Math.sin(λ - Ω) - ci * sβ\n    const B = Math.asin(sB) // return value\n    // Step 7.0\n    const N = 113.6655 * p + 0.8771 * p * T\n    const lʹ = l - 0.01759 * p / r\n    const bʹ = b - 0.000764 * p * Math.cos(l - N) / r\n    // Setup for steps 8, 9.0\n    sbʹ = Math.sin(bʹ)\n    cbʹ = Math.cos(bʹ)\n    slʹΩ = Math.sin(lʹ - Ω)\n    clʹΩ = Math.cos(lʹ - Ω)\n    // Step 9.0\n    const [sλΩ, cλΩ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λ - Ω)\n    const U1 = Math.atan2(si * sbʹ + ci * cbʹ * slʹΩ, cbʹ * clʹΩ)\n    const U2 = Math.atan2(si * sβ + ci * cβ * sλΩ, cβ * cλΩ)\n    const ΔU = Math.abs(U1 - U2) // return value\n    return [ΔU, B]\n  }\n  const f2 = function () { // (Bʹ, P, aEdge, bEdge) {\n    // Remainder of step 6.0\n    const aEdge = 375.35 / 3600 * p / Δ // return value\n    const bEdge = aEdge * Math.abs(sB) // return value\n    // Step 8.0\n    const sBʹ = si * cbʹ * slʹΩ - ci * sbʹ\n    const Bʹ = Math.asin(sBʹ) // return value\n    // Step 10.0\n    const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].nutation(jde)\n    const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].meanObliquity(jde) + Δε\n    // Step 11.0\n    let λ0 = Ω - Math.PI / 2\n    const β0 = Math.PI / 2 - i\n    // Step 12.0\n    const [sl0λ, cl0λ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(l0 - λ)\n    λ += 0.005693 * p * cl0λ / cβ\n    β += 0.005693 * p * sl0λ * sβ\n    // Step 13.0\n    λ0 += Δψ\n    λ += Δψ\n    // Step 14.0\n    let eq = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ0, β0).toEquatorial(ε)\n    const [α0, δ0] = [eq.ra, eq.dec]\n    eq = new _coord_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Ecliptic(λ, β).toEquatorial(ε)\n    const [α, δ] = [eq.ra, eq.dec]\n    // Step 15.0\n    const [sδ0, cδ0] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ0)\n    const [sδ, cδ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(δ)\n    const [sα0α, cα0α] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(α0 - α)\n    const P = Math.atan2(cδ0 * sα0α, sδ0 * cδ - cδ0 * sδ * cα0α) // return value\n    return [Bʹ, P, aEdge, bEdge]\n  }\n  return [f1, f2]\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ring,\n  ub\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/saturnring.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/sexagesimal.js":
/*!****************************************************!*\
  !*** ./node_modules/astronomia/src/sexagesimal.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Angle: () => (/* binding */ Angle),\n/* harmony export */   DMSToDeg: () => (/* binding */ DMSToDeg),\n/* harmony export */   HourAngle: () => (/* binding */ HourAngle),\n/* harmony export */   RA: () => (/* binding */ RA),\n/* harmony export */   Time: () => (/* binding */ Time),\n/* harmony export */   angleFromDeg: () => (/* binding */ angleFromDeg),\n/* harmony export */   angleFromMin: () => (/* binding */ angleFromMin),\n/* harmony export */   angleFromSec: () => (/* binding */ angleFromSec),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   degFromAngle: () => (/* binding */ degFromAngle),\n/* harmony export */   degToDMS: () => (/* binding */ degToDMS),\n/* harmony export */   secFromAngle: () => (/* binding */ secFromAngle),\n/* harmony export */   secFromHourAngle: () => (/* binding */ secFromHourAngle)\n/* harmony export */ });\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module sexagesimal\n */\n/**\n * Sexagesimal functions\n */\n\n/**\n * Angle represents a general purpose angle.\n * Unit is radians.\n */\nclass Angle {\n  /**\n  * constructs a new Angle value from sign, degree, minute, and second\n  * components.\n  * @param {Number|Boolean} angleOrNeg - angle in radians or sign, true if negative (required to attribute -0°30')\n  * __Four arguments__\n  * @param {Number} [d] - (int) degree\n  * @param {Number} [m] - (int) minute\n  * @param {Number} [s] - (float) second\n  */\n  constructor (angleOrNeg, d, m, s) {\n    if (arguments.length === 1) {\n      this.angle = Number(angleOrNeg)\n    } else {\n      this.setDMS(!!angleOrNeg, d, m, s)\n    }\n  }\n\n  /**\n   * SetDMS sets the value of an FAngle from sign, degree, minute, and second\n   * components.\n   * The receiver is returned as a convenience.\n   * @param {Boolean} neg - sign, true if negative\n   * @param {Number} d - (int) degree\n   * @param {Number} m - (int) minute\n   * @param {Number} s - (float) second\n   * @returns {Angle}\n   */\n  setDMS (neg = false, d = 0, m = 0, s = 0.0) {\n    this.angle = (DMSToDeg(neg, d, m, s) * Math.PI / 180)\n    return this\n  }\n\n  /**\n   * sets angle\n   * @param {Number} angle - (float) angle in radians\n   * @returns {Angle}\n   */\n  setAngle (angle) {\n    this.angle = angle\n    return this\n  }\n\n  /**\n   * Rad returns the angle in radians.\n   * @returns {Number} angle in radians\n   */\n  rad () {\n    return this.angle\n  }\n\n  /**\n   * Deg returns the angle in degrees.\n   * @returns {Number} angle in degree\n   */\n  deg () {\n    return this.angle * 180 / Math.PI\n  }\n\n  /**\n   * toDMS converts to parsed sexagesimal angle component.\n   */\n  toDMS () {\n    return degToDMS(this.deg())\n  }\n\n  /**\n   * Print angle in degree using `d°m´s.ss″`\n   * @param {Number} [precision] - precision of `s.ss`\n   * @returns {String}\n   */\n  toString (precision) {\n    let [neg, d, m, s] = this.toDMS()\n    s = round(s, precision).toString().replace(/^0\\./, '.')\n    const str = (neg ? '-' : '') +\n      (d + '°') +\n      (m + '′') +\n      (s + '″')\n    return str\n  }\n\n  /**\n   * Print angle in degree using `d°.ff`\n   * @param {Number} [precision] - precision of `.ff`\n   * @returns {String}\n   */\n  toDegString (precision) {\n    let [i, s] = modf(this.deg())\n    s = round(s, precision).toString().replace(/^0\\./, '.')\n    const str = (i + '°') + s\n    return str\n  }\n}\n\n/**\n * HourAngle represents an angle corresponding to angular rotation of\n * the Earth in a specified time.\n *\n * Unit is radians.\n */\nclass HourAngle extends Angle {\n  /**\n   * NewHourAngle constructs a new HourAngle value from sign, hour, minute,\n   * and second components.\n   * @param {Boolean} neg\n   * @param {Number} h - (int)\n   * @param {Number} m - (int)\n   * @param {Number} s - (float)\n   * @constructor\n   */\n\n  /**\n   * SetDMS sets the value of an FAngle from sign, degree, minute, and second\n   * components.\n   * The receiver is returned as a convenience.\n   * @param {Boolean} neg - sign, true if negative\n   * @param {Number} h - (int) hour\n   * @param {Number} m - (int) minute\n   * @param {Number} s - (float) second\n   * @returns {Angle}\n   */\n  setDMS (neg = false, h = 0, m = 0, s = 0.0) {\n    this.angle = (DMSToDeg(neg, h, m, s) * 15 * Math.PI / 180)\n    return this\n  }\n\n  /**\n   * Hour returns the hour angle as hours of time.\n   * @returns hour angle\n   */\n  hour () {\n    return this.angle * 12 / Math.PI // 12 = 180 / 15\n  }\n\n  deg () {\n    return this.hour()\n  }\n\n  /**\n   * Print angle in `HʰMᵐs.ssˢ`\n   * @param {Number} precision - precision of `s.ss`\n   * @returns {String}\n   */\n  toString (precision) {\n    let [neg, h, m, s] = this.toDMS()\n    s = round(s, precision).toString().replace(/^0\\./, '.')\n    const str = (neg ? '-' : '') +\n      (h + 'ʰ') +\n      (m + 'ᵐ') +\n      (s + 'ˢ')\n    return str\n  }\n}\n\n/**\n * DMSToDeg converts from parsed sexagesimal angle components to decimal\n * degrees.\n * @param {Boolean} neg - sign, true if negative\n * @param {Number} d - (int) degree\n * @param {Number} m - (int) minute\n * @param {Number} s - (float) second\n * @returns {Number} angle in degree\n */\nfunction DMSToDeg (neg, d, m, s) {\n  s = (((d * 60 + m) * 60) + s) / 3600\n  if (neg) {\n    return -s\n  }\n  return s\n}\n\n/**\n * DegToDMS converts from decimal degrees to parsed sexagesimal angle component.\n * @param {Number} deg - angle in degree\n * @returns {Array} [neg, d, m, s]\n *  {Boolean} neg - sign, true if negative\n *  {Number} d - (int) degree\n *  {Number} m - (int) minute\n *  {Number} s - (float) second\n */\nfunction degToDMS (deg) {\n  const neg = (deg < 0)\n  deg = Math.abs(deg)\n  let [d, s] = modf(deg % 360)\n  const [m, s1] = modf(s * 60)\n  s = round(s1 * 60) // may introduce an error < 1e13\n  return [neg, d, m, s]\n}\n\nclass RA extends HourAngle {\n  /**\n   * constructs a new RA value from hour, minute, and second components.\n   * Negative values are not supported, RA wraps values larger than 24\n   * to the range [0,24) hours.\n   * @param {Number} h - (int) hour\n   * @param {Number} m - (int) minute\n   * @param {Number} s - (float) second\n   */\n  constructor (h = 0, m = 0, s = 0) {\n    super(false, h, m, s)\n    const args = [].slice.call(arguments)\n    if (args.length === 1) {\n      this.angle = h\n    } else {\n      const hr = DMSToDeg(false, h, m, s) % 24\n      this.angle = hr * 15 * Math.PI / 180\n    }\n  }\n\n  hour () {\n    const h = this.angle * 12 / Math.PI\n    return (24 + (h % 24)) % 24\n  }\n}\n\n/**\n * Time Angle\n * Unit is time in seconds.\n */\nclass Time {\n  /**\n   * @param {boolean|number} negOrTimeInSecs - set `true` if negative; if type is number than time in seconds\n   * @param {number} [h] - (int) hour\n   * @param {number} [m] - (int) minute\n   * @param {number} [s] - (float) second\n   * @example\n   * new sexa.Time(SECS_OF_DAY)\n   * new sexa.Time(false, 15, 22, 7)\n   */\n  constructor (negOrTimeInSecs, h, m, s) {\n    if (typeof negOrTimeInSecs === 'number') {\n      this.time = negOrTimeInSecs\n    } else {\n      this.setHMS(negOrTimeInSecs, h, m, s)\n    }\n  }\n\n  setHMS (neg = false, h = 0, m = 0, s = 0) {\n    s += ((h * 60 + m) * 60)\n    if (neg) {\n      s = -s\n    }\n    this.time = s\n  }\n\n  /**\n   * @returns {Number} time in seconds.\n   */\n  sec () {\n    return this.time\n  }\n\n  /**\n   * @returns {Number} time in minutes.\n   */\n  min () {\n    return this.time / 60\n  }\n\n  /**\n   * @returns {Number} time in hours.\n   */\n  hour () {\n    return this.time / 3600\n  }\n\n  /**\n   * @returns {Number} time in days.\n   */\n  day () {\n    return this.time / 3600 / 24\n  }\n\n  /**\n   * @returns {Number} time in radians, where 1 day = 2 Pi radians.\n   */\n  rad () {\n    return this.time * Math.PI / 12 / 3600\n  }\n\n  /**\n   * convert time to HMS\n   * @returns {Array} [neg, h, m, s]\n   *  {Boolean} neg - sign, true if negative\n   *  {Number} h - (int) hour\n   *  {Number} m - (int) minute\n   *  {Number} s - (float) second\n   */\n  toHMS () {\n    let t = this.time\n    const neg = (t < 0)\n    t = (neg ? -t : t)\n    const h = Math.trunc(t / 3600)\n    t = t - (h * 3600)\n    const m = Math.trunc(t / 60)\n    const s = t - (m * 60)\n    return [neg, h, m, s]\n  }\n\n  /**\n   * Print time using `HʰMᵐsˢ.ss`\n   * @param {Number} precision - precision of `.ss`\n   * @returns {String}\n   */\n  toString (precision) {\n    const [neg, h, m, s] = this.toHMS()\n    let [si, sf] = modf(s)\n    if (precision === 0) {\n      si = round(s, 0)\n      sf = 0\n    } else {\n      sf = round(sf, precision).toString().substr(1)\n    }\n    const str = (neg ? '-' : '') +\n      (h + 'ʰ') +\n      (m + 'ᵐ') +\n      (si + 'ˢ') +\n      (sf || '')\n    return str\n  }\n}\n\n// units\nconst angleFromDeg = (deg) => deg * Math.PI / 180\nconst angleFromMin = (min) => min / 60 * Math.PI / 180\nconst angleFromSec = (sec) => sec / 3600 * Math.PI / 180\nconst degFromAngle = (angle) => angle * 180 / Math.PI\nconst secFromAngle = (angle) => angle * 3600 * 180 / Math.PI\nconst secFromHourAngle = (ha) => ha * 240 * 180 / Math.PI\n\n/**\n * separate fix `i` from fraction `f`\n * @private\n * @param {Number} float\n * @returns {Array} [i, f]\n *  {Number} i - (int) fix value\n *  {Number} f - (float) fractional portion; always > 1\n */\nfunction modf (float) {\n  const i = Math.trunc(float)\n  const f = Math.abs(float - i)\n  return [i, f]\n}\n\n/**\n * Rounds `float` value by precision\n * @private\n * @param {Number} float - value to round\n * @param {Number} [precision] - (int) number of post decimal positions\n * @return {Number} rounded `float`\n */\nfunction round (float, precision = 10) {\n  return parseFloat(float.toFixed(precision))\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Angle,\n  HourAngle,\n  DMSToDeg,\n  degToDMS,\n  RA,\n  Time,\n  angleFromDeg,\n  angleFromMin,\n  angleFromSec,\n  degFromAngle,\n  secFromAngle,\n  secFromHourAngle\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/sexagesimal.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/sidereal.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/sidereal.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JDToCFrac: () => (/* binding */ JDToCFrac),\n/* harmony export */   apparent: () => (/* binding */ apparent),\n/* harmony export */   apparent0UT: () => (/* binding */ apparent0UT),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   iau82: () => (/* binding */ iau82),\n/* harmony export */   mean: () => (/* binding */ mean),\n/* harmony export */   mean0UT: () => (/* binding */ mean0UT)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module sidereal\n */\n/**\n * Sidereal: Chapter 12, Sidereal Time at Greenwich.\n */\n\n\n\n\n/**\n * JDToCFrac returns values for use in computing sidereal time at Greenwich.\n *\n * Cen is centuries from J2000 of the JD at 0h UT of argument jd.  This is\n * the value to use for evaluating the IAU sidereal time polynomial.\n * DayFrac is the fraction of jd after 0h UT.  It is used to compute the\n * final value of sidereal time.\n *\n * @param {number} jd - Julian Days\n * @return {number[]} [century, fraction] century and fraction of jd after 0h UT\n */\nfunction JDToCFrac (jd) {\n  const [j0, f] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(jd + 0.5)\n  return [_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(j0 - 0.5), f] // (cen, dayFrac /* float */)\n}\n\n/**\n * iau82 is a polynomial giving mean sidereal time at Greenwich at 0h UT.\n *\n * The polynomial is in centuries from J2000.0, as given by JDToCFrac.\n * Coefficients are those adopted in 1982 by the International Astronomical\n * Union and are given in (12.2) p. 87.\n */\nconst iau82 = [24110.54841, 8640184.812866, 0.093104, -0.0000062]\n\n/**\n * Mean returns mean sidereal time at Greenwich for a given JD.\n *\n * Computation is by IAU 1982 coefficients.  The result is in seconds of\n * time and is in the range [0,86400).\n *\n * @param {number} jd - Julian Days\n * @return {number}\n */\nfunction mean (jd) {\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(_mean(jd), 86400)\n}\n\n/**\n * @private\n */\nfunction _mean (jd) {\n  const [s, f] = _mean0UT(jd)\n  return s + f * 1.00273790935 * 86400\n}\n\n/**\n * Mean0UT returns mean sidereal time at Greenwich at 0h UT on the given JD.\n *\n * The result is in seconds of time and is in the range [0,86400).\n *\n * @param {number} jd - Julian Days\n * @return {number}\n */\nfunction mean0UT (jd /* float */) {\n  const [s, _] = _mean0UT(jd) // eslint-disable-line\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(s, 86400)\n}\n\n/**\n * @private\n */\nfunction _mean0UT (jd /* float */) {\n  const [cen, f] = JDToCFrac(jd)\n  // (12.2) p. 87\n  return [_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(cen, ...iau82), f] // (sidereal, dayFrac /* float */)\n}\n\n/**\n * Apparent returns apparent sidereal time at Greenwich for the given JD.\n *\n * Apparent is mean plus the nutation in right ascension.\n *\n * The result is in seconds of time and is in the range [0,86400).\n *\n * @param {number} jd - Julian Days\n * @return {number}\n */\nfunction apparent (jd) {\n  const s = _mean(jd) // seconds of time\n  const n = _nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].nutationInRA(jd) // angle (radians) of RA\n  const ns = n * 3600 * 180 / Math.PI / 15 // convert RA to time in seconds\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(s + ns, 86400)\n}\n\n/**\n * Apparent0UT returns apparent sidereal time at Greenwich at 0h UT\n * on the given JD.\n *\n * The result is in seconds of time and is in the range [0,86400).\n *\n * @param {number} jd - Julian Days\n * @return {number}\n */\nfunction apparent0UT (jd) {\n  const [j0, f] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modf(jd + 0.5)\n  const cen = (j0 - 0.5 - _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000) / 36525\n  const s = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(cen, ...iau82) + f * 1.00273790935 * 86400\n  const n = _nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].nutationInRA(j0) // angle (radians) of RA\n  const ns = n * 3600 * 180 / Math.PI / 15 // convert RA to time in seconds\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(s + ns, 86400)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  JDToCFrac,\n  iau82,\n  mean,\n  mean0UT,\n  apparent,\n  apparent0UT\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvc2lkZXJlYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUNROztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksVUFBVTtBQUN0QjtBQUNPO0FBQ1Asa0JBQWtCLHFEQUFTO0FBQzNCLFVBQVUsNkRBQWlCO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNPO0FBQ1AsU0FBUyxxREFBUztBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQSxTQUFTLHFEQUFTO0FBQ2xCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdURBQVc7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ087QUFDUDtBQUNBLFlBQVksaUVBQXFCO0FBQ2pDO0FBQ0EsU0FBUyxxREFBUztBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ087QUFDUCxrQkFBa0IscURBQVM7QUFDM0IsMEJBQTBCLHNEQUFVO0FBQ3BDLFlBQVksdURBQVc7QUFDdkIsWUFBWSxpRUFBcUI7QUFDakM7QUFDQSxTQUFTLHFEQUFTO0FBQ2xCOztBQUVBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3Ryb25vbWlhL3NyYy9zaWRlcmVhbC5qcz9mYmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDEzIFNvbmlhIEtleXNcbiAqIEBjb3B5cmlnaHQgMjAxNiBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgc2lkZXJlYWxcbiAqL1xuLyoqXG4gKiBTaWRlcmVhbDogQ2hhcHRlciAxMiwgU2lkZXJlYWwgVGltZSBhdCBHcmVlbndpY2guXG4gKi9cblxuaW1wb3J0IGJhc2UgZnJvbSAnLi9iYXNlLmpzJ1xuaW1wb3J0IG51dGF0aW9uIGZyb20gJy4vbnV0YXRpb24uanMnXG5cbi8qKlxuICogSkRUb0NGcmFjIHJldHVybnMgdmFsdWVzIGZvciB1c2UgaW4gY29tcHV0aW5nIHNpZGVyZWFsIHRpbWUgYXQgR3JlZW53aWNoLlxuICpcbiAqIENlbiBpcyBjZW50dXJpZXMgZnJvbSBKMjAwMCBvZiB0aGUgSkQgYXQgMGggVVQgb2YgYXJndW1lbnQgamQuICBUaGlzIGlzXG4gKiB0aGUgdmFsdWUgdG8gdXNlIGZvciBldmFsdWF0aW5nIHRoZSBJQVUgc2lkZXJlYWwgdGltZSBwb2x5bm9taWFsLlxuICogRGF5RnJhYyBpcyB0aGUgZnJhY3Rpb24gb2YgamQgYWZ0ZXIgMGggVVQuICBJdCBpcyB1c2VkIHRvIGNvbXB1dGUgdGhlXG4gKiBmaW5hbCB2YWx1ZSBvZiBzaWRlcmVhbCB0aW1lLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBqZCAtIEp1bGlhbiBEYXlzXG4gKiBAcmV0dXJuIHtudW1iZXJbXX0gW2NlbnR1cnksIGZyYWN0aW9uXSBjZW50dXJ5IGFuZCBmcmFjdGlvbiBvZiBqZCBhZnRlciAwaCBVVFxuICovXG5leHBvcnQgZnVuY3Rpb24gSkRUb0NGcmFjIChqZCkge1xuICBjb25zdCBbajAsIGZdID0gYmFzZS5tb2RmKGpkICsgMC41KVxuICByZXR1cm4gW2Jhc2UuSjIwMDBDZW50dXJ5KGowIC0gMC41KSwgZl0gLy8gKGNlbiwgZGF5RnJhYyAvKiBmbG9hdCAqLylcbn1cblxuLyoqXG4gKiBpYXU4MiBpcyBhIHBvbHlub21pYWwgZ2l2aW5nIG1lYW4gc2lkZXJlYWwgdGltZSBhdCBHcmVlbndpY2ggYXQgMGggVVQuXG4gKlxuICogVGhlIHBvbHlub21pYWwgaXMgaW4gY2VudHVyaWVzIGZyb20gSjIwMDAuMCwgYXMgZ2l2ZW4gYnkgSkRUb0NGcmFjLlxuICogQ29lZmZpY2llbnRzIGFyZSB0aG9zZSBhZG9wdGVkIGluIDE5ODIgYnkgdGhlIEludGVybmF0aW9uYWwgQXN0cm9ub21pY2FsXG4gKiBVbmlvbiBhbmQgYXJlIGdpdmVuIGluICgxMi4yKSBwLiA4Ny5cbiAqL1xuZXhwb3J0IGNvbnN0IGlhdTgyID0gWzI0MTEwLjU0ODQxLCA4NjQwMTg0LjgxMjg2NiwgMC4wOTMxMDQsIC0wLjAwMDAwNjJdXG5cbi8qKlxuICogTWVhbiByZXR1cm5zIG1lYW4gc2lkZXJlYWwgdGltZSBhdCBHcmVlbndpY2ggZm9yIGEgZ2l2ZW4gSkQuXG4gKlxuICogQ29tcHV0YXRpb24gaXMgYnkgSUFVIDE5ODIgY29lZmZpY2llbnRzLiAgVGhlIHJlc3VsdCBpcyBpbiBzZWNvbmRzIG9mXG4gKiB0aW1lIGFuZCBpcyBpbiB0aGUgcmFuZ2UgWzAsODY0MDApLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBqZCAtIEp1bGlhbiBEYXlzXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZWFuIChqZCkge1xuICByZXR1cm4gYmFzZS5wbW9kKF9tZWFuKGpkKSwgODY0MDApXG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX21lYW4gKGpkKSB7XG4gIGNvbnN0IFtzLCBmXSA9IF9tZWFuMFVUKGpkKVxuICByZXR1cm4gcyArIGYgKiAxLjAwMjczNzkwOTM1ICogODY0MDBcbn1cblxuLyoqXG4gKiBNZWFuMFVUIHJldHVybnMgbWVhbiBzaWRlcmVhbCB0aW1lIGF0IEdyZWVud2ljaCBhdCAwaCBVVCBvbiB0aGUgZ2l2ZW4gSkQuXG4gKlxuICogVGhlIHJlc3VsdCBpcyBpbiBzZWNvbmRzIG9mIHRpbWUgYW5kIGlzIGluIHRoZSByYW5nZSBbMCw4NjQwMCkuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGpkIC0gSnVsaWFuIERheXNcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lYW4wVVQgKGpkIC8qIGZsb2F0ICovKSB7XG4gIGNvbnN0IFtzLCBfXSA9IF9tZWFuMFVUKGpkKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIHJldHVybiBiYXNlLnBtb2QocywgODY0MDApXG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX21lYW4wVVQgKGpkIC8qIGZsb2F0ICovKSB7XG4gIGNvbnN0IFtjZW4sIGZdID0gSkRUb0NGcmFjKGpkKVxuICAvLyAoMTIuMikgcC4gODdcbiAgcmV0dXJuIFtiYXNlLmhvcm5lcihjZW4sIC4uLmlhdTgyKSwgZl0gLy8gKHNpZGVyZWFsLCBkYXlGcmFjIC8qIGZsb2F0ICovKVxufVxuXG4vKipcbiAqIEFwcGFyZW50IHJldHVybnMgYXBwYXJlbnQgc2lkZXJlYWwgdGltZSBhdCBHcmVlbndpY2ggZm9yIHRoZSBnaXZlbiBKRC5cbiAqXG4gKiBBcHBhcmVudCBpcyBtZWFuIHBsdXMgdGhlIG51dGF0aW9uIGluIHJpZ2h0IGFzY2Vuc2lvbi5cbiAqXG4gKiBUaGUgcmVzdWx0IGlzIGluIHNlY29uZHMgb2YgdGltZSBhbmQgaXMgaW4gdGhlIHJhbmdlIFswLDg2NDAwKS5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gamQgLSBKdWxpYW4gRGF5c1xuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwYXJlbnQgKGpkKSB7XG4gIGNvbnN0IHMgPSBfbWVhbihqZCkgLy8gc2Vjb25kcyBvZiB0aW1lXG4gIGNvbnN0IG4gPSBudXRhdGlvbi5udXRhdGlvbkluUkEoamQpIC8vIGFuZ2xlIChyYWRpYW5zKSBvZiBSQVxuICBjb25zdCBucyA9IG4gKiAzNjAwICogMTgwIC8gTWF0aC5QSSAvIDE1IC8vIGNvbnZlcnQgUkEgdG8gdGltZSBpbiBzZWNvbmRzXG4gIHJldHVybiBiYXNlLnBtb2QocyArIG5zLCA4NjQwMClcbn1cblxuLyoqXG4gKiBBcHBhcmVudDBVVCByZXR1cm5zIGFwcGFyZW50IHNpZGVyZWFsIHRpbWUgYXQgR3JlZW53aWNoIGF0IDBoIFVUXG4gKiBvbiB0aGUgZ2l2ZW4gSkQuXG4gKlxuICogVGhlIHJlc3VsdCBpcyBpbiBzZWNvbmRzIG9mIHRpbWUgYW5kIGlzIGluIHRoZSByYW5nZSBbMCw4NjQwMCkuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGpkIC0gSnVsaWFuIERheXNcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGFyZW50MFVUIChqZCkge1xuICBjb25zdCBbajAsIGZdID0gYmFzZS5tb2RmKGpkICsgMC41KVxuICBjb25zdCBjZW4gPSAoajAgLSAwLjUgLSBiYXNlLkoyMDAwKSAvIDM2NTI1XG4gIGNvbnN0IHMgPSBiYXNlLmhvcm5lcihjZW4sIC4uLmlhdTgyKSArIGYgKiAxLjAwMjczNzkwOTM1ICogODY0MDBcbiAgY29uc3QgbiA9IG51dGF0aW9uLm51dGF0aW9uSW5SQShqMCkgLy8gYW5nbGUgKHJhZGlhbnMpIG9mIFJBXG4gIGNvbnN0IG5zID0gbiAqIDM2MDAgKiAxODAgLyBNYXRoLlBJIC8gMTUgLy8gY29udmVydCBSQSB0byB0aW1lIGluIHNlY29uZHNcbiAgcmV0dXJuIGJhc2UucG1vZChzICsgbnMsIDg2NDAwKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIEpEVG9DRnJhYyxcbiAgaWF1ODIsXG4gIG1lYW4sXG4gIG1lYW4wVVQsXG4gIGFwcGFyZW50LFxuICBhcHBhcmVudDBVVFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/sidereal.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/solar.js":
/*!**********************************************!*\
  !*** ./node_modules/astronomia/src/solar.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aberration: () => (/* binding */ aberration),\n/* harmony export */   apparentEquatorial: () => (/* binding */ apparentEquatorial),\n/* harmony export */   apparentEquatorialVSOP87: () => (/* binding */ apparentEquatorialVSOP87),\n/* harmony export */   apparentLongitude: () => (/* binding */ apparentLongitude),\n/* harmony export */   apparentVSOP87: () => (/* binding */ apparentVSOP87),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   eccentricity: () => (/* binding */ eccentricity),\n/* harmony export */   meanAnomaly: () => (/* binding */ meanAnomaly),\n/* harmony export */   radius: () => (/* binding */ radius),\n/* harmony export */   true2000: () => (/* binding */ true2000),\n/* harmony export */   trueEquatorial: () => (/* binding */ trueEquatorial),\n/* harmony export */   trueLongitude: () => (/* binding */ trueLongitude),\n/* harmony export */   trueVSOP87: () => (/* binding */ trueVSOP87)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _planetposition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./planetposition.js */ \"./node_modules/astronomia/src/planetposition.js\");\n/* harmony import */ var _coord_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coord.js */ \"./node_modules/astronomia/src/coord.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module solar\n */\n/**\n * Solar: Chapter 25, Solar Coordinates.\n *\n * Partial implementation:\n *\n * 1. Higher accuracy positions are not computed with Appendix III but with\n * full VSOP87 as implemented in package planetposition.\n *\n * 2. Higher accuracy correction for aberration (using the formula for\n * variation Δλ on p. 168) is not implemented.  Results for example 25.b\n * already match the full VSOP87 values on p. 165 even with the low accuracy\n * correction for aberration, thus there are no more significant digits that\n * would check a more accurate result.  Also the size of the formula presents\n * significant chance of typographical error.\n */\n\n\n // eslint-disable-line no-unused-vars\n\n\n\n/**\n * True returns true geometric longitude and anomaly of the sun referenced to the mean equinox of date.\n *\n * @param {Number} T - number of Julian centuries since J2000. See base.J2000Century.\n * @returns {Object}\n *   {Number} lon = true geometric longitude, ☉, in radians\n *   {Number} ano = true anomaly in radians\n */\nfunction trueLongitude (T) {\n  // (25.2) p. 163\n  const L0 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 280.46646, 36000.76983, 0.0003032) *\n    Math.PI / 180\n  const m = meanAnomaly(T)\n  const C = (_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 1.914602, -0.004817, -0.000014) *\n    Math.sin(m) +\n    (0.019993 - 0.000101 * T) * Math.sin(2 * m) +\n    0.000289 * Math.sin(3 * m)) * Math.PI / 180\n  const lon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(L0 + C, 2 * Math.PI)\n  const ano = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(m + C, 2 * Math.PI)\n  return { lon, ano }\n}\n\n/**\n * meanAnomaly returns the mean anomaly of Earth at the given T.\n *\n * @param {Number} T - number of Julian centuries since J2000. See base.J2000Century.\n * @returns {Number} Result is in radians and is not normalized to the range 0..2π.\n */\nfunction meanAnomaly (T) {\n  // (25.3) p. 163\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 357.52911, 35999.05029, -0.0001537) * Math.PI / 180\n}\n\n/**\n * eccentricity returns eccentricity of the Earth's orbit around the sun.\n *\n * @param {Number} T - number of Julian centuries since J2000. See base.J2000Century.\n * @returns {Number} eccentricity of the Earth's orbit around the sun.\n */\nfunction eccentricity (T) {\n  // (25.4) p. 163\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(T, 0.016708634, -0.000042037, -0.0000001267)\n}\n\n/**\n * Radius returns the Sun-Earth distance in AU.\n *\n * @param {Number} T - number of Julian centuries since J2000. See base.J2000Century.\n * @returns {Number} Sun-Earth distance in AU\n */\nfunction radius (T) {\n  const {lon, ano} = trueLongitude(T) // eslint-disable-line\n  const e = eccentricity(T)\n  // (25.5) p. 164\n  return 1.000001018 * (1 - e * e) / (1 + e * Math.cos(ano))\n}\n\n/**\n * ApparentLongitude returns apparent longitude of the Sun referenced to the true equinox of date.\n * Result includes correction for nutation and aberration.  Unit is radians.\n *\n * @param {Number} T - number of Julian centuries since J2000. See base.J2000Century.\n * @returns {Number} apparent longitude of the Sun referenced to the true equinox of date.\n */\nfunction apparentLongitude (T) {\n  const Ω = node(T)\n  const {lon, ano} = trueLongitude(T) // eslint-disable-line\n  return lon - 0.00569 * Math.PI / 180 - 0.00478 * Math.PI / 180 * Math.sin(Ω)\n}\n\n/**\n * @private\n */\nfunction node (T) {\n  return 125.04 * Math.PI / 180 - 1934.136 * Math.PI / 180 * T\n}\n\n/**\n * true2000 returns true geometric longitude and anomaly of the sun referenced to equinox J2000.\n * Results are accurate to .01 degree for years 1900 to 2100.\n *\n * @param {Number} T - number of Julian centuries since J2000. See base.J2000Century.\n * @returns {Object}\n *   {Number} lon - true geometric longitude, ☉, in radians\n *   {Number} ano - true anomaly in radians\n */\nfunction true2000 (T) {\n  let { lon, ano } = trueLongitude(T)\n  lon -= 0.01397 * Math.PI / 180 * T * 100\n  return { lon, ano }\n}\n\n/**\n * trueEquatorial returns the true geometric position of the Sun as equatorial coordinates.\n *\n * @param {Number} jde - Julian ephemeris day\n * @returns {Coord}\n *   {Number} ra - right ascension in radians\n *   {Number} dec - declination in radians\n */\nfunction trueEquatorial (jde) {\n  const {lon, ano} = trueLongitude(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)) // eslint-disable-line\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanObliquity(jde)\n  const [ss, cs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lon)\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε)\n  // (25.6, 25.7) p. 165\n  const ra = Math.atan2(cε * ss, cs)\n  const dec = sε * ss\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(ra, dec)\n}\n\n/**\n * apparentEquatorial returns the apparent position of the Sun as equatorial coordinates.\n *\n * @param {Number} jde - Julian ephemeris day\n * @returns {Coord}\n *   {Number} ra - right ascension in radians\n *   {Number} dec - declination in radians\n */\nfunction apparentEquatorial (jde) {\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde)\n  const λ = apparentLongitude(T)\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanObliquity(jde)\n  const [sλ, cλ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λ)\n  // (25.8) p. 165\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ε + 0.00256 * Math.PI / 180 * Math.cos(node(T)))\n  const ra = Math.atan2(cε * sλ, cλ)\n  const dec = Math.asin(sε * sλ)\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(ra, dec)\n}\n\n/**\n * trueVSOP87 returns the true geometric position of the sun as ecliptic coordinates.\n *\n * Result computed by full VSOP87 theory.  Result is at equator and equinox\n * of date in the FK5 frame.  It does not include nutation or aberration.\n *\n * @param {Planet} planet\n * @param {Number} jde - Julian ephemeris day\n * @returns {Object}\n *   {Number} lon - ecliptic longitude in radians\n *   {Number} lat - ecliptic latitude in radians\n *   {Number} range - range in AU\n */\nfunction trueVSOP87 (planet, jde) {\n  let { lon, lat, range } = planet.position(jde)\n  const s = lon + Math.PI\n  // FK5 correction.\n  const λp = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(jde),\n    s, -1.397 * Math.PI / 180, -0.00031 * Math.PI / 180)\n  const [sλp, cλp] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λp)\n  const Δβ = 0.03916 / 3600 * Math.PI / 180 * (cλp - sλp)\n  // (25.9) p. 166\n  lon = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(s - 0.09033 / 3600 * Math.PI / 180, 2 * Math.PI)\n  lat = Δβ - lat\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(lon, lat, range)\n}\n\n/**\n * apparentVSOP87 returns the apparent position of the sun as ecliptic coordinates.\n *\n * Result computed by VSOP87, at equator and equinox of date in the FK5 frame,\n * and includes effects of nutation and aberration.\n *\n * @param {Planet} planet\n * @param {Number} jde - Julian ephemeris day\n * @returns {Coord}\n *   {Number} lon - ecliptic longitude in radians\n *   {Number} lat - ecliptic latitude in radians\n *   {Number} range - range in AU\n */\nfunction apparentVSOP87 (planet, jde) {\n  // note: see duplicated code in ApparentEquatorialVSOP87.\n  let { lon, lat, range } = trueVSOP87(planet, jde)\n  const Δψ = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].nutation(jde)[0]\n  const a = aberration(range)\n  lon = lon + Δψ + a\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Coord(lon, lat, range)\n}\n\n/**\n * apparentEquatorialVSOP87 returns the apparent position of the sun as equatorial coordinates.\n *\n * Result computed by VSOP87, at equator and equinox of date in the FK5 frame,\n * and includes effects of nutation and aberration.\n *\n * @param {Planet} planet\n * @param {Number} jde - Julian ephemeris day\n * @returns {Coord}\n *   {Number} ra - right ascension in radians\n *   {Number} dec - declination in radians\n *   {Number} range - range in AU\n */\nfunction apparentEquatorialVSOP87 (planet, jde) {\n  // note: duplicate code from ApparentVSOP87 so we can keep Δε.\n  // see also duplicate code in time.E().\n  const { lon, lat, range } = trueVSOP87(planet, jde)\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].nutation(jde)\n  const a = aberration(range)\n  const λ = lon + Δψ + a\n  const ε = _nutation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].meanObliquity(jde) + Δε\n  const { ra, dec } = new _coord_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Ecliptic(λ, lat).toEquatorial(ε)\n  return new _base_js__WEBPACK_IMPORTED_MODULE_0__.Coord(ra, dec, range)\n}\n\n/**\n * Low precision formula.  The high precision formula is not implemented\n * because the low precision formula already gives position results to the\n * accuracy given on p. 165.  The high precision formula represents lots\n * of typing with associated chance of typos, and no way to test the result.\n * @param {Number} range\n * @returns {Number} aberation\n */\nfunction aberration (range) {\n  // (25.10) p. 167\n  return -20.4898 / 3600 * Math.PI / 180 / range\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  trueLongitude,\n  true: trueLongitude, // BACKWARDS-COMPATIBILITY\n  meanAnomaly,\n  eccentricity,\n  radius,\n  apparentLongitude,\n  true2000,\n  trueEquatorial,\n  apparentEquatorial,\n  trueVSOP87,\n  apparentVSOP87,\n  apparentEquatorialVSOP87,\n  aberration\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/solar.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/solardisk.js":
/*!**************************************************!*\
  !*** ./node_modules/astronomia/src/solardisk.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cycle: () => (/* binding */ cycle),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   ephemeris: () => (/* binding */ ephemeris)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module solardisk\n */\n/**\n * Solardisk: Chapter 29, Ephemeris for Physical Observations of the Sun.\n */\n\n\n\n\n\n/**\n * Ephemeris returns the apparent orientation of the sun at the given jd.\n *\n * Results:\n *  P:  Position angle of the solar north pole.\n *  B0: Heliographic latitude of the center of the solar disk.\n *  L0: Heliographic longitude of the center of the solar disk.\n *\n * All results in radians.\n */\nfunction ephemeris (jd, earth) { // (jd float64, e *pp.V87Planet)  (P, B0, L0 float64)\n  const θ = (jd - 2398220) * 2 * Math.PI / 25.38\n  const I = 7.25 * Math.PI / 180\n  const K = 73.6667 * Math.PI / 180 +\n    1.3958333 * Math.PI / 180 * (jd - 2396758) / _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].JulianCentury\n\n  const solarPos = _solar_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].trueVSOP87(earth, jd)\n  const L = solarPos.lon\n  const R = solarPos.range\n  const [Δψ, Δε] = _nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].nutation(jd)\n  const ε0 = _nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].meanObliquity(jd)\n  const ε = ε0 + Δε\n  const λ = L - 20.4898 / 3600 * Math.PI / 180 / R\n  const λp = λ + Δψ\n\n  const [sλK, cλK] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(λ - K)\n  const [sI, cI] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(I)\n\n  const tx = -Math.cos(λp) * Math.tan(ε)\n  const ty = -cλK * Math.tan(I)\n  const P = Math.atan(tx) + Math.atan(ty)\n  const B0 = Math.asin(sλK * sI)\n  const η = Math.atan2(-sλK * cI, -cλK)\n  const L0 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(η - θ, 2 * Math.PI)\n  return [P, B0, L0]\n}\n\n/**\n * Cycle returns the jd of the start of the given synodic rotation.\n *\n * Argument c is the \"Carrington\" cycle number.\n *\n * Result is a dynamical time (not UT).\n */\nfunction cycle (c) { // (c int)  (jde float64)\n  const jde = 2398140.227 + 27.2752316 * c\n  const m = 281.96 * Math.PI / 180 + 26.882476 * Math.PI / 180 * c\n  const [s2m, c2m] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(2 * m)\n  return jde + 0.1454 * Math.sin(m) - 0.0085 * s2m - 0.0141 * c2m\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ephemeris,\n  cycle\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvc29sYXJkaXNrLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEI7QUFDUTtBQUNOOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlDQUFpQztBQUN4QztBQUNBO0FBQ0E7QUFDQSxpREFBaUQsOERBQWtCOztBQUVuRSxtQkFBbUIsNERBQWdCO0FBQ25DO0FBQ0E7QUFDQSxtQkFBbUIsNkRBQWlCO0FBQ3BDLGFBQWEsa0VBQXNCO0FBQ25DO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsdURBQVc7QUFDaEMsbUJBQW1CLHVEQUFXOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxREFBUztBQUN0QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCO0FBQzVCO0FBQ0E7QUFDQSxxQkFBcUIsdURBQVc7QUFDaEM7QUFDQTs7QUFFQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL3NvbGFyZGlzay5qcz82N2M4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCAyMDEzIFNvbmlhIEtleXNcbiAqIEBjb3B5cmlnaHQgMjAxNiBjb21tZW50aG9sXG4gKiBAbGljZW5zZSBNSVRcbiAqIEBtb2R1bGUgc29sYXJkaXNrXG4gKi9cbi8qKlxuICogU29sYXJkaXNrOiBDaGFwdGVyIDI5LCBFcGhlbWVyaXMgZm9yIFBoeXNpY2FsIE9ic2VydmF0aW9ucyBvZiB0aGUgU3VuLlxuICovXG5cbmltcG9ydCBiYXNlIGZyb20gJy4vYmFzZS5qcydcbmltcG9ydCBudXRhdGlvbiBmcm9tICcuL251dGF0aW9uLmpzJ1xuaW1wb3J0IHNvbGFyIGZyb20gJy4vc29sYXIuanMnXG5cbi8qKlxuICogRXBoZW1lcmlzIHJldHVybnMgdGhlIGFwcGFyZW50IG9yaWVudGF0aW9uIG9mIHRoZSBzdW4gYXQgdGhlIGdpdmVuIGpkLlxuICpcbiAqIFJlc3VsdHM6XG4gKiAgUDogIFBvc2l0aW9uIGFuZ2xlIG9mIHRoZSBzb2xhciBub3J0aCBwb2xlLlxuICogIEIwOiBIZWxpb2dyYXBoaWMgbGF0aXR1ZGUgb2YgdGhlIGNlbnRlciBvZiB0aGUgc29sYXIgZGlzay5cbiAqICBMMDogSGVsaW9ncmFwaGljIGxvbmdpdHVkZSBvZiB0aGUgY2VudGVyIG9mIHRoZSBzb2xhciBkaXNrLlxuICpcbiAqIEFsbCByZXN1bHRzIGluIHJhZGlhbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlcGhlbWVyaXMgKGpkLCBlYXJ0aCkgeyAvLyAoamQgZmxvYXQ2NCwgZSAqcHAuVjg3UGxhbmV0KSAgKFAsIEIwLCBMMCBmbG9hdDY0KVxuICBjb25zdCDOuCA9IChqZCAtIDIzOTgyMjApICogMiAqIE1hdGguUEkgLyAyNS4zOFxuICBjb25zdCBJID0gNy4yNSAqIE1hdGguUEkgLyAxODBcbiAgY29uc3QgSyA9IDczLjY2NjcgKiBNYXRoLlBJIC8gMTgwICtcbiAgICAxLjM5NTgzMzMgKiBNYXRoLlBJIC8gMTgwICogKGpkIC0gMjM5Njc1OCkgLyBiYXNlLkp1bGlhbkNlbnR1cnlcblxuICBjb25zdCBzb2xhclBvcyA9IHNvbGFyLnRydWVWU09QODcoZWFydGgsIGpkKVxuICBjb25zdCBMID0gc29sYXJQb3MubG9uXG4gIGNvbnN0IFIgPSBzb2xhclBvcy5yYW5nZVxuICBjb25zdCBbzpTPiCwgzpTOtV0gPSBudXRhdGlvbi5udXRhdGlvbihqZClcbiAgY29uc3QgzrUwID0gbnV0YXRpb24ubWVhbk9ibGlxdWl0eShqZClcbiAgY29uc3QgzrUgPSDOtTAgKyDOlM61XG4gIGNvbnN0IM67ID0gTCAtIDIwLjQ4OTggLyAzNjAwICogTWF0aC5QSSAvIDE4MCAvIFJcbiAgY29uc3QgzrtwID0gzrsgKyDOlM+IXG5cbiAgY29uc3QgW3POu0ssIGPOu0tdID0gYmFzZS5zaW5jb3MozrsgLSBLKVxuICBjb25zdCBbc0ksIGNJXSA9IGJhc2Uuc2luY29zKEkpXG5cbiAgY29uc3QgdHggPSAtTWF0aC5jb3MozrtwKSAqIE1hdGgudGFuKM61KVxuICBjb25zdCB0eSA9IC1jzrtLICogTWF0aC50YW4oSSlcbiAgY29uc3QgUCA9IE1hdGguYXRhbih0eCkgKyBNYXRoLmF0YW4odHkpXG4gIGNvbnN0IEIwID0gTWF0aC5hc2luKHPOu0sgKiBzSSlcbiAgY29uc3QgzrcgPSBNYXRoLmF0YW4yKC1zzrtLICogY0ksIC1jzrtLKVxuICBjb25zdCBMMCA9IGJhc2UucG1vZCjOtyAtIM64LCAyICogTWF0aC5QSSlcbiAgcmV0dXJuIFtQLCBCMCwgTDBdXG59XG5cbi8qKlxuICogQ3ljbGUgcmV0dXJucyB0aGUgamQgb2YgdGhlIHN0YXJ0IG9mIHRoZSBnaXZlbiBzeW5vZGljIHJvdGF0aW9uLlxuICpcbiAqIEFyZ3VtZW50IGMgaXMgdGhlIFwiQ2FycmluZ3RvblwiIGN5Y2xlIG51bWJlci5cbiAqXG4gKiBSZXN1bHQgaXMgYSBkeW5hbWljYWwgdGltZSAobm90IFVUKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGN5Y2xlIChjKSB7IC8vIChjIGludCkgIChqZGUgZmxvYXQ2NClcbiAgY29uc3QgamRlID0gMjM5ODE0MC4yMjcgKyAyNy4yNzUyMzE2ICogY1xuICBjb25zdCBtID0gMjgxLjk2ICogTWF0aC5QSSAvIDE4MCArIDI2Ljg4MjQ3NiAqIE1hdGguUEkgLyAxODAgKiBjXG4gIGNvbnN0IFtzMm0sIGMybV0gPSBiYXNlLnNpbmNvcygyICogbSlcbiAgcmV0dXJuIGpkZSArIDAuMTQ1NCAqIE1hdGguc2luKG0pIC0gMC4wMDg1ICogczJtIC0gMC4wMTQxICogYzJtXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZXBoZW1lcmlzLFxuICBjeWNsZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/solardisk.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/solarxyz.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/solarxyz.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   longitudeJ2000: () => (/* binding */ longitudeJ2000),\n/* harmony export */   position: () => (/* binding */ position),\n/* harmony export */   positionB1950: () => (/* binding */ positionB1950),\n/* harmony export */   positionEquinox: () => (/* binding */ positionEquinox),\n/* harmony export */   positionJ2000: () => (/* binding */ positionJ2000),\n/* harmony export */   xyz: () => (/* binding */ xyz)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nutation.js */ \"./node_modules/astronomia/src/nutation.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module solarxyz\n */\n/**\n * Solarxyz: Chapter 26, Rectangular Coordinates of the Sun.\n */\n\n\n\n\n/**\n * Position returns rectangular coordinates referenced to the mean equinox of date.\n * @param {planetposition.Planet} earth - VSOP87Planet Earth\n * @param {Number} jde - Julian ephemeris day\n * @return {object} rectangular coordinates\n *   {Number} x\n *   {Number} y\n *   {Number} z\n */\nfunction position (earth, jde) { // (e *pp.V87Planet, jde float64)  (x, y, z float64)\n  // (26.1) p. 171\n  const { lon, lat, range } = _solar_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].trueVSOP87(earth, jde)\n  const [sε, cε] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(_nutation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].meanObliquity(jde))\n  const [ss, cs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(lon)\n  const sβ = Math.sin(lat)\n  const x = range * cs\n  const y = range * (ss * cε - sβ * sε)\n  const z = range * (ss * sε + sβ * cε)\n  return { x, y, z }\n}\n\n/**\n * LongitudeJ2000 returns geometric longitude referenced to equinox J2000.\n * @param {planetposition.Planet} earth - VSOP87Planet Earth\n * @param {Number} jde - Julian ephemeris day\n * @return {Number} geometric longitude referenced to equinox J2000.\n */\nfunction longitudeJ2000 (earth, jde) {\n  const lon = earth.position2000(jde).lon\n  return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(lon + Math.PI - 0.09033 / 3600 * Math.PI / 180, 2 * Math.PI)\n}\n\n/**\n * PositionJ2000 returns rectangular coordinates referenced to equinox J2000.\n * @param {planetposition.Planet} earth - VSOP87Planet Earth\n * @param {Number} jde - Julian ephemeris day\n * @return {object} rectangular coordinates\n *   {Number} x\n *   {Number} y\n *   {Number} z\n */\nfunction positionJ2000 (earth, jde) {\n  const { x, y, z } = xyz(earth, jde)\n  // (26.3) p. 174\n  return {\n    x: x + 0.00000044036 * y - 0.000000190919 * z,\n    y: -0.000000479966 * x + 0.917482137087 * y - 0.397776982902 * z,\n    z: 0.397776982902 * y + 0.917482137087 * z\n  }\n}\n\nfunction xyz (earth, jde) {\n  const { lon, lat, range } = earth.position2000(jde)\n  const s = lon + Math.PI\n  const β = -lat\n  const [ss, cs] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(s)\n  const [sβ, cβ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(β)\n  // (26.2) p. 172\n  const x = range * cβ * cs\n  const y = range * cβ * ss\n  const z = range * sβ\n  return { x, y, z }\n}\n\n/**\n * PositionB1950 returns rectangular coordinates referenced to B1950.\n *\n * Results are referenced to the mean equator and equinox of the epoch B1950\n * in the FK5 system, not FK4.\n *\n * @param {planetposition.Planet} earth - VSOP87Planet Earth\n * @param {Number} jde - Julian ephemeris day\n * @return {object} rectangular coordinates\n *   {Number} x\n *   {Number} y\n *   {Number} z\n */\nfunction positionB1950 (earth, jde) { // (e *pp.V87Planet, jde float64)  (x, y, z float64)\n  const { x, y, z } = xyz(earth, jde)\n  return {\n    x: 0.999925702634 * x + 0.012189716217 * y + 0.000011134016 * z,\n    y: -0.011179418036 * x + 0.917413998946 * y - 0.397777041885 * z,\n    z: -0.004859003787 * x + 0.397747363646 * y + 0.917482111428 * z\n  }\n}\n\nconst ζt = [2306.2181, 0.30188, 0.017998]\nconst zt = [2306.2181, 1.09468, 0.018203]\nconst θt = [2004.3109, -0.42665, -0.041833]\n\n/**\n * PositionEquinox returns rectangular coordinates referenced to an arbitrary epoch.\n *\n * Position will be computed for given Julian day \"jde\" but referenced to mean\n * equinox \"epoch\" (year).\n *\n * @param {planetposition.Planet} earth - VSOP87Planet Earth\n * @param {Number} jde - Julian ephemeris day\n * @param {Number} epoch\n * @return {object} rectangular coordinates\n *   {Number} x\n *   {Number} y\n *   {Number} z\n */\nfunction positionEquinox (earth, jde, epoch) {\n  const xyz = positionJ2000(earth, jde)\n  const x0 = xyz.x\n  const y0 = xyz.y\n  const z0 = xyz.z\n  const t = (epoch - 2000) * 0.01\n  const ζ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, ζt) * t * Math.PI / 180 / 3600\n  const z = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, zt) * t * Math.PI / 180 / 3600\n  const θ = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(t, θt) * t * Math.PI / 180 / 3600\n  const [sζ, cζ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(ζ)\n  const [sz, cz] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(z)\n  const [sθ, cθ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(θ)\n  const xx = cζ * cz * cθ - sζ * sz\n  const xy = sζ * cz + cζ * sz * cθ\n  const xz = cζ * sθ\n  const yx = -cζ * sz - sζ * cz * cθ\n  const yy = cζ * cz - sζ * sz * cθ\n  const yz = -sζ * sθ\n  const zx = -cz * sθ\n  const zy = -sz * sθ\n  const zz = cθ\n  return {\n    x: xx * x0 + yx * y0 + zx * z0,\n    y: xy * x0 + yy * y0 + zy * z0,\n    z: xz * x0 + yz * y0 + zz * z0\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  position,\n  longitudeJ2000,\n  positionJ2000,\n  xyz,\n  positionB1950,\n  positionEquinox\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/solarxyz.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/solstice.js":
/*!*************************************************!*\
  !*** ./node_modules/astronomia/src/solstice.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   december: () => (/* binding */ december),\n/* harmony export */   december2: () => (/* binding */ december2),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   june: () => (/* binding */ june),\n/* harmony export */   june2: () => (/* binding */ june2),\n/* harmony export */   longitude: () => (/* binding */ longitude),\n/* harmony export */   march: () => (/* binding */ march),\n/* harmony export */   march2: () => (/* binding */ march2),\n/* harmony export */   september: () => (/* binding */ september),\n/* harmony export */   september2: () => (/* binding */ september2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module solstice\n */\n/**\n * Solstice: Chapter 27: Equinoxes and Solstices.\n */\n\n\n\nconst { abs, cos, sin } = Math\nconst D2R = Math.PI / 180\n\n// table 27.a - for years from -1000 to +1000\nconst mc0 = [1721139.29189, 365242.13740, 0.06134, 0.00111, -0.00071]\nconst jc0 = [1721233.25401, 365241.72562, -0.05323, 0.00907, 0.00025]\nconst sc0 = [1721325.70455, 365242.49558, -0.11677, -0.00297, 0.00074]\nconst dc0 = [1721414.39987, 365242.88257, -0.00769, -0.00933, -0.00006]\n\n// table 27.b - for years from +1000 to +3000\nconst mc2 = [2451623.80984, 365242.37404, 0.05169, -0.00411, -0.00057]\nconst jc2 = [2451716.56767, 365241.62603, 0.00325, 0.00888, -0.00030]\nconst sc2 = [2451810.21715, 365242.01767, -0.11575, 0.00337, 0.00078]\nconst dc2 = [2451900.05952, 365242.74049, -0.06223, -0.00823, 0.00032]\n\n// table 27.c\nconst terms = (function () {\n  const term = [\n    [485, 324.96, 1934.136],\n    [203, 337.23, 32964.467],\n    [199, 342.08, 20.186],\n    [182, 27.85, 445267.112],\n    [156, 73.14, 45036.886],\n    [136, 171.52, 22518.443],\n    [77, 222.54, 65928.934],\n    [74, 296.72, 3034.906],\n    [70, 243.58, 9037.513],\n    [58, 119.81, 33718.147],\n    [52, 297.17, 150.678],\n    [50, 21.02, 2281.226],\n    [45, 247.54, 29929.562],\n    [44, 325.15, 31555.956],\n    [29, 60.93, 4443.417],\n    [18, 155.12, 67555.328],\n    [17, 288.79, 4562.452],\n    [16, 198.04, 62894.029],\n    [14, 199.76, 31436.921],\n    [12, 95.39, 14577.848],\n    [12, 287.11, 31931.756],\n    [12, 320.81, 34777.259],\n    [9, 227.73, 1222.114],\n    [8, 15.45, 16859.074]\n  ]\n  return term.map((t) => {\n    return {\n      a: t[0],\n      b: t[1],\n      c: t[2]\n    }\n  })\n})()\n\n/**\n * March returns the JDE of the March equinox for the given year.\n *\n * Results are valid for the years -1000 to +3000.\n *\n * Accuracy is within one minute of time for the years 1951-2050.\n * @param {Number} y - (int) year\n * @returns {Number} JDE\n */\nfunction march (y) {\n  if (y < 1000) {\n    return eq(y, mc0)\n  }\n  return eq(y - 2000, mc2)\n}\n\n/**\n * June returns the JDE of the June solstice for the given year.\n *\n * Results are valid for the years -1000 to +3000.\n *\n * Accuracy is within one minute of time for the years 1951-2050.\n * @param {Number} y - (int) year\n * @returns {Number} JDE\n */\nfunction june (y) {\n  if (y < 1000) {\n    return eq(y, jc0)\n  }\n  return eq(y - 2000, jc2)\n}\n\n/**\n * September returns the JDE of the September equinox for the given year.\n *\n * Results are valid for the years -1000 to +3000.\n *\n * Accuracy is within one minute of time for the years 1951-2050.\n * @param {Number} y - (int) year\n * @returns {Number} JDE\n */\nfunction september (y) {\n  if (y < 1000) {\n    return eq(y, sc0)\n  }\n  return eq(y - 2000, sc2)\n}\n\n/**\n * December returns the JDE of the December solstice for a given year.\n *\n * Results are valid for the years -1000 to +3000.\n *\n * Accuracy is within one minute of time for the years 1951-2050.\n * @param {Number} y - (int) year\n * @returns {Number} JDE\n */\nfunction december (y) {\n  if (y < 1000) {\n    return eq(y, dc0)\n  }\n  return eq(y - 2000, dc2)\n}\n\n/**\n * Fast calculation of solstices/ equinoxes\n * Accuracy is within one minute of time for the years 1951-2050.\n *\n * @param {Number} y - (int) year\n * @param {Array} c - term from table 27.a / 27.b\n * @returns {Number} JDE\n */\nfunction eq (y, c) {\n  const J0 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(y * 0.001, c)\n  const T = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].J2000Century(J0)\n  const W = 35999.373 * D2R * T - 2.47 * D2R\n  const Δλ = 1 + 0.0334 * cos(W) + 0.0007 * cos(2 * W)\n  let S = 0\n  for (let i = terms.length - 1; i >= 0; i--) {\n    const t = terms[i]\n    S += t.a * cos((t.b + t.c * T) * D2R)\n  }\n  return J0 + 0.00001 * S / Δλ\n}\n\n/**\n * March2 returns a more accurate JDE of the March equinox.\n *\n * Result is accurate to one second of time.\n *\n * @param {Number} year - (int) year\n * @param {planetposition.Planet} planet - must be a V87Planet object representing Earth, obtained with\n * the package planetposition\n * @returns {Number} JDE\n */\nfunction march2 (year, planet) {\n  return longitude(year, planet, 0)\n}\n\n/**\n * June2 returns a more accurate JDE of the June solstice.\n *\n * Result is accurate to one second of time.\n *\n * @param {Number} year - (int) year\n * @param {planetposition.Planet} planet - must be a V87Planet object representing Earth, obtained with\n * the package planetposition\n * @returns {Number} JDE\n */\nfunction june2 (year, planet) {\n  return longitude(year, planet, Math.PI / 2)\n}\n\n/**\n * September2 returns a more accurate JDE of the September equinox.\n *\n * Result is accurate to one second of time.\n *\n * @param {Number} year - (int) year\n * @param {planetposition.Planet} planet - must be a V87Planet object representing Earth, obtained with\n * the package planetposition\n * @returns {Number} JDE\n */\nfunction september2 (year, planet) {\n  return longitude(year, planet, Math.PI)\n}\n\n/**\n * December2 returns a more accurate JDE of the December solstice.\n *\n * Result is accurate to one second of time.\n *\n * @param {Number} year - (int) year\n * @param {planetposition.Planet} planet - must be a V87Planet object representing Earth, obtained with\n * the package planetposition\n * @returns {Number} JDE\n */\nfunction december2 (year, planet) {\n  return longitude(year, planet, Math.PI * 3 / 2)\n}\n\n/**\n * Longitude returns the JDE for a given `year`, VSOP87 Planet `planet` at a\n * given geocentric solar longitude `lon`\n * @param {Number} year - (int)\n * @param {planetposition.Planet} planet\n * @param {Number} lon - geocentric solar longitude in radians\n * @returns {Number} JDE\n */\nfunction longitude (year, planet, lon) {\n  let c\n  let ct\n\n  if (year < 1000) {\n    ct = [mc0, jc0, sc0, dc0]\n  } else {\n    ct = [mc2, jc2, sc2, dc2]\n    year -= 2000\n  }\n\n  lon = lon % (Math.PI * 2)\n\n  if (lon < Math.PI / 2) {\n    c = ct[0]\n  } else if (lon < Math.PI) {\n    c = ct[1]\n  } else if (lon < Math.PI * 3 / 2) {\n    c = ct[2]\n  } else {\n    c = ct[3]\n  }\n\n  return eq2(year, planet, lon, c)\n}\n\n/**\n  * Accurate calculation of solstices/ equinoxes\n  * Result is accurate to one second of time.\n  *\n  * @param {Number} year - (int) year\n  * @param {planetposition.Planet} planet - vsop87 planet\n  * @param {Number} lon - longitude in radians\n  * @param {Array} c - term from table 27.a / 27.b\n  * @returns {Number} JDE\n  */\nfunction eq2 (year, planet, lon, c) {\n  let J0 = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].horner(year * 0.001, c)\n\n  for (;;) {\n    const a = _solar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].apparentVSOP87(planet, J0)\n    const c = 58 * sin(lon - a.lon) // (27.1) p. 180\n    J0 += c\n    if (abs(c) < 0.000005) {\n      break\n    }\n  }\n\n  return J0\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  march,\n  june,\n  september,\n  december,\n  march2,\n  june2,\n  september2,\n  december2,\n  longitude\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/solstice.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/stellar.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/stellar.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   absoluteByDistance: () => (/* binding */ absoluteByDistance),\n/* harmony export */   absoluteByParallax: () => (/* binding */ absoluteByParallax),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   difference: () => (/* binding */ difference),\n/* harmony export */   ratio: () => (/* binding */ ratio),\n/* harmony export */   sum: () => (/* binding */ sum),\n/* harmony export */   sumN: () => (/* binding */ sumN)\n/* harmony export */ });\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module stellar\n */\n/**\n * Stellar: Chapter 56, Stellar Magnitudes.\n */\n\n/**\n * Sum returns the combined apparent magnitude of two stars.\n */\nfunction sum (m1, m2) { // (m1, m2 float64)  float64\n  const x = 0.4 * (m2 - m1)\n  return m2 - 2.5 * Math.log10(Math.pow(10, x) + 1)\n}\n\n/**\n * SumN returns the combined apparent magnitude of a number of stars.\n */\nfunction sumN (m) { // (m ...float64)  float64\n  let s = 0\n  for (const mi of m) {\n    s += Math.pow(10, -0.4 * mi)\n  }\n  return -2.5 * Math.log10(s)\n}\n\n/**\n * Ratio returns the brightness ratio of two stars.\n *\n * Arguments m1, m2 are apparent magnitudes.\n */\nfunction ratio (m1, m2) { // (m1, m2 float64)  float64\n  const x = 0.4 * (m2 - m1)\n  return Math.pow(10, x)\n}\n\n/**\n * Difference returns the difference in apparent magnitude of two stars\n * given their brightness ratio.\n */\nfunction difference (ratio) { // (ratio float64)  float64\n  return 2.5 * Math.log10(ratio)\n}\n\n/**\n * AbsoluteByParallax returns absolute magnitude given annual parallax.\n *\n * Argument m is apparent magnitude, π is annual parallax in arc seconds.\n */\nfunction absoluteByParallax (m, π) { // (m, π float64)  float64\n  return m + 5 + 5 * Math.log10(π)\n}\n\n/**\n * AbsoluteByDistance returns absolute magnitude given distance.\n *\n * Argument m is apparent magnitude, d is distance in parsecs.\n */\nfunction absoluteByDistance (m, d) { // (m, d float64)  float64\n  return m + 5 - 5 * Math.log10(d)\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  sum,\n  sumN,\n  ratio,\n  difference,\n  absoluteByParallax,\n  absoluteByDistance\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cm9ub21pYS9zcmMvc3RlbGxhci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3QjtBQUMvQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ08sb0JBQW9CO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMEJBQTBCO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhCQUE4QjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQ0FBcUM7QUFDNUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUNBQXFDO0FBQzVDO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FzdHJvbm9taWEvc3JjL3N0ZWxsYXIuanM/Mzk0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAxMyBTb25pYSBLZXlzXG4gKiBAY29weXJpZ2h0IDIwMTYgY29tbWVudGhvbFxuICogQGxpY2Vuc2UgTUlUXG4gKiBAbW9kdWxlIHN0ZWxsYXJcbiAqL1xuLyoqXG4gKiBTdGVsbGFyOiBDaGFwdGVyIDU2LCBTdGVsbGFyIE1hZ25pdHVkZXMuXG4gKi9cblxuLyoqXG4gKiBTdW0gcmV0dXJucyB0aGUgY29tYmluZWQgYXBwYXJlbnQgbWFnbml0dWRlIG9mIHR3byBzdGFycy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN1bSAobTEsIG0yKSB7IC8vIChtMSwgbTIgZmxvYXQ2NCkgIGZsb2F0NjRcbiAgY29uc3QgeCA9IDAuNCAqIChtMiAtIG0xKVxuICByZXR1cm4gbTIgLSAyLjUgKiBNYXRoLmxvZzEwKE1hdGgucG93KDEwLCB4KSArIDEpXG59XG5cbi8qKlxuICogU3VtTiByZXR1cm5zIHRoZSBjb21iaW5lZCBhcHBhcmVudCBtYWduaXR1ZGUgb2YgYSBudW1iZXIgb2Ygc3RhcnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdW1OIChtKSB7IC8vIChtIC4uLmZsb2F0NjQpICBmbG9hdDY0XG4gIGxldCBzID0gMFxuICBmb3IgKGNvbnN0IG1pIG9mIG0pIHtcbiAgICBzICs9IE1hdGgucG93KDEwLCAtMC40ICogbWkpXG4gIH1cbiAgcmV0dXJuIC0yLjUgKiBNYXRoLmxvZzEwKHMpXG59XG5cbi8qKlxuICogUmF0aW8gcmV0dXJucyB0aGUgYnJpZ2h0bmVzcyByYXRpbyBvZiB0d28gc3RhcnMuXG4gKlxuICogQXJndW1lbnRzIG0xLCBtMiBhcmUgYXBwYXJlbnQgbWFnbml0dWRlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJhdGlvIChtMSwgbTIpIHsgLy8gKG0xLCBtMiBmbG9hdDY0KSAgZmxvYXQ2NFxuICBjb25zdCB4ID0gMC40ICogKG0yIC0gbTEpXG4gIHJldHVybiBNYXRoLnBvdygxMCwgeClcbn1cblxuLyoqXG4gKiBEaWZmZXJlbmNlIHJldHVybnMgdGhlIGRpZmZlcmVuY2UgaW4gYXBwYXJlbnQgbWFnbml0dWRlIG9mIHR3byBzdGFyc1xuICogZ2l2ZW4gdGhlaXIgYnJpZ2h0bmVzcyByYXRpby5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZlcmVuY2UgKHJhdGlvKSB7IC8vIChyYXRpbyBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gMi41ICogTWF0aC5sb2cxMChyYXRpbylcbn1cblxuLyoqXG4gKiBBYnNvbHV0ZUJ5UGFyYWxsYXggcmV0dXJucyBhYnNvbHV0ZSBtYWduaXR1ZGUgZ2l2ZW4gYW5udWFsIHBhcmFsbGF4LlxuICpcbiAqIEFyZ3VtZW50IG0gaXMgYXBwYXJlbnQgbWFnbml0dWRlLCDPgCBpcyBhbm51YWwgcGFyYWxsYXggaW4gYXJjIHNlY29uZHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhYnNvbHV0ZUJ5UGFyYWxsYXggKG0sIM+AKSB7IC8vIChtLCDPgCBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gbSArIDUgKyA1ICogTWF0aC5sb2cxMCjPgClcbn1cblxuLyoqXG4gKiBBYnNvbHV0ZUJ5RGlzdGFuY2UgcmV0dXJucyBhYnNvbHV0ZSBtYWduaXR1ZGUgZ2l2ZW4gZGlzdGFuY2UuXG4gKlxuICogQXJndW1lbnQgbSBpcyBhcHBhcmVudCBtYWduaXR1ZGUsIGQgaXMgZGlzdGFuY2UgaW4gcGFyc2Vjcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFic29sdXRlQnlEaXN0YW5jZSAobSwgZCkgeyAvLyAobSwgZCBmbG9hdDY0KSAgZmxvYXQ2NFxuICByZXR1cm4gbSArIDUgLSA1ICogTWF0aC5sb2cxMChkKVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHN1bSxcbiAgc3VtTixcbiAgcmF0aW8sXG4gIGRpZmZlcmVuY2UsXG4gIGFic29sdXRlQnlQYXJhbGxheCxcbiAgYWJzb2x1dGVCeURpc3RhbmNlXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/stellar.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/sundial.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/sundial.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   equatorial: () => (/* binding */ equatorial),\n/* harmony export */   general: () => (/* binding */ general),\n/* harmony export */   horizontal: () => (/* binding */ horizontal),\n/* harmony export */   vertical: () => (/* binding */ vertical)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/**\n * @copyright 2013 Sonia Keys\n * @copyright 2016 commenthol\n * @license MIT\n * @module sundial\n */\n/**\n * Sundial: Chapter 58, Calculation of a Planar Sundial.\n */\n\n\n\n/**\n * Point return type represents a point to be used in constructing the sundial.\n */\nfunction Point (x, y) {\n  this.x = x || 0\n  this.y = y || 0\n}\n\n/**\n * Line holds data to draw an hour line on the sundial.\n */\nfunction Line (hour, points) {\n  this.hour = hour // 0 to 24\n  this.points = points || [] // One or more points corresponding to the hour.\n}\n\nconst m = [-23.44, -20.15, -11.47, 0, 11.47, 20.15, 23.44]\n\n/**\n * General computes data for the general case of a planar sundial.\n *\n * Argument φ is geographic latitude at which the sundial will be located.\n * D is gnomonic declination, the azimuth of the perpendicular to the plane\n * of the sundial, measured from the southern meridian towards the west.\n * Argument a is the length of a straight stylus perpendicular to the plane\n * of the sundial, z is zenithal distance of the direction defined by the\n * stylus.  Angles φ, D, and z are in radians.  Units of stylus length a\n * are arbitrary.\n *\n * Results consist of a set of lines, a center point, u, the length of a\n * polar stylus, and ψ, the angle which the polar stylus makes with the plane\n * of the sundial.  The center point, the points defining the hour lines, and\n * u are in units of a, the stylus length.  ψ is in radians.\n */\nfunction general (φ, D, a, z) { // (φ, D, a, z float64)  (lines []Line, center Point, u, ψ float64)\n  const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(φ)\n  const tφ = sφ / cφ\n  const [sD, cD] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(D)\n  const [sz, cz] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(z)\n  const P = sφ * cz - cφ * sz * cD\n  const lines = []\n  for (let i = 0; i < 24; i++) {\n    const l = new Line(i)\n    const H = (i - 12) * 15 * Math.PI / 180\n    const aH = Math.abs(H)\n    const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n    for (const d of m) {\n      const tδ = Math.tan(d * Math.PI / 180)\n      const H0 = Math.acos(-tφ * tδ)\n      if (aH > H0) {\n        continue // sun below horizon\n      }\n      const Q = sD * sz * sH + (cφ * cz + sφ * sz * cD) * cH + P * tδ\n      if (Q < 0) {\n        continue // sun below plane of sundial\n      }\n      const Nx = cD * sH - sD * (sφ * cH - cφ * tδ)\n      const Ny = cz * sD * sH - (cφ * sz - sφ * cz * cD) * cH - (sφ * sz + cφ * cz * cD) * tδ\n      l.points.push(new Point(a * Nx / Q, a * Ny / Q))\n    }\n    if (l.points.length > 0) {\n      lines.push(l)\n    }\n  }\n  const center = new Point()\n  center.x = a / P * cφ * sD\n  center.y = -a / P * (sφ * sz + cφ * cz * cD)\n  const aP = Math.abs(P)\n  const u = a / aP\n  const ψ = Math.asin(aP)\n  return {\n    lines,\n    center,\n    length: u,\n    angle: ψ\n  }\n}\n\n/**\n * Equatorial computes data for a sundial level with the equator.\n *\n * Argument φ is geographic latitude at which the sundial will be located;\n * a is the length of a straight stylus perpendicular to the plane of the\n * sundial.\n *\n * The sundial will have two sides, north and south.  Results n and s define\n * lines on the north and south sides of the sundial.  Result coordinates\n * are in units of a, the stylus length.\n */\nfunction equatorial (φ, a) { // (φ, a float64)  (n, s []Line)\n  const tφ = Math.tan(φ)\n  const n = []\n  const s = []\n  for (let i = 0; i < 24; i++) {\n    const nl = new Line(i)\n    const sl = new Line(i)\n    const H = (i - 12) * 15 * Math.PI / 180\n    const aH = Math.abs(H)\n    const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n    for (const d of m) {\n      const tδ = Math.tan(d * Math.PI / 180)\n      const H0 = Math.acos(-tφ * tδ)\n      if (aH > H0) {\n        continue\n      }\n      const x = -a * sH / tδ\n      const yy = a * cH / tδ\n      if (tδ < 0) {\n        sl.points.push(new Point(x, yy))\n      } else {\n        nl.points.push(new Point(x, -yy))\n      }\n    }\n    if (nl.points.length > 0) {\n      n.push(nl)\n    }\n    if (sl.points.length > 0) {\n      s.push(sl)\n    }\n  }\n  return {\n    north: n,\n    south: s\n  }\n}\n\n/**\n * Horizontal computes data for a horizontal sundial.\n *\n * Argument φ is geographic latitude at which the sundial will be located,\n * a is the length of a straight stylus perpendicular to the plane of the\n * sundial.\n *\n * Results consist of a set of lines, a center point, and u, the length of a\n * polar stylus.  They are in units of a, the stylus length.\n */\nfunction horizontal (φ, a) { // (φ, a float64)  (lines []Line, center Point, u float64)\n  const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(φ)\n  const tφ = sφ / cφ\n  const lines = []\n  for (let i = 0; i < 24; i++) {\n    const l = new Line(i)\n    const H = (i - 12) * 15 * Math.PI / 180\n    const aH = Math.abs(H)\n    const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n    for (const d of m) {\n      const tδ = Math.tan(d * Math.PI / 180)\n      const H0 = Math.acos(-tφ * tδ)\n      if (aH > H0) {\n        continue // sun below horizon\n      }\n      const Q = cφ * cH + sφ * tδ\n      const x = a * sH / Q\n      const y = a * (sφ * cH - cφ * tδ) / Q\n      l.points.push(new Point(x, y))\n    }\n    if (l.points.length > 0) {\n      lines.push(l)\n    }\n  }\n  const center = new Point(0, -a / tφ)\n  const u = a / Math.abs(sφ)\n  return {\n    lines,\n    center,\n    length: u\n  }\n}\n\n/**\n * Vertical computes data for a vertical sundial.\n *\n * Argument φ is geographic latitude at which the sundial will be located.\n * D is gnomonic declination, the azimuth of the perpendicular to the plane\n * of the sundial, measured from the southern meridian towards the west.\n * Argument a is the length of a straight stylus perpendicular to the plane\n * of the sundial.\n *\n * Results consist of a set of lines, a center point, and u, the length of a\n * polar stylus.  They are in units of a, the stylus length.\n */\nfunction vertical (φ, D, a) { // (φ, D, a float64)  (lines []Line, center Point, u float64)\n  const [sφ, cφ] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(φ)\n  const tφ = sφ / cφ\n  const [sD, cD] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(D)\n  const lines = []\n  for (let i = 0; i < 24; i++) {\n    const l = new Line(i)\n    const H = (i - 12) * 15 * Math.PI / 180\n    const aH = Math.abs(H)\n    const [sH, cH] = _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sincos(H)\n    for (const d of m) {\n      const tδ = Math.tan(d * Math.PI / 180)\n      const H0 = Math.acos(-tφ * tδ)\n      if (aH > H0) {\n        continue // sun below horizon\n      }\n      const Q = sD * sH + sφ * cD * cH - cφ * cD * tδ\n      if (Q < 0) {\n        continue // sun below plane of sundial\n      }\n      const x = a * (cD * sH - sφ * sD * cH + cφ * sD * tδ) / Q\n      const y = -a * (cφ * cH + sφ * tδ) / Q\n      l.points.push(new Point(x, y))\n    }\n    if (l.points.length > 0) {\n      lines.push(l)\n    }\n  }\n  const center = new Point()\n  center.x = -a * sD / cD\n  center.y = a * tφ / cD\n  const u = a / Math.abs(cφ * cD)\n  return {\n    lines,\n    center,\n    length: u\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  general,\n  equatorial,\n  horizontal,\n  vertical\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/sundial.js\n");

/***/ }),

/***/ "./node_modules/astronomia/src/sunrise.js":
/*!************************************************!*\
  !*** ./node_modules/astronomia/src/sunrise.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sunrise: () => (/* binding */ Sunrise),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/astronomia/src/base.js\");\n/* harmony import */ var _eqtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eqtime.js */ \"./node_modules/astronomia/src/eqtime.js\");\n/* harmony import */ var _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sexagesimal.js */ \"./node_modules/astronomia/src/sexagesimal.js\");\n/* harmony import */ var _solar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./solar.js */ \"./node_modules/astronomia/src/solar.js\");\n/* harmony import */ var _julian_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./julian.js */ \"./node_modules/astronomia/src/julian.js\");\n/* harmony import */ var _rise_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rise.js */ \"./node_modules/astronomia/src/rise.js\");\n/**\n * @copyright 2016 commenthol\n * @license MIT\n * @module sunrise\n */\n/**\n * Sunrise: Compute rise, noon, set of the Sun for an earth observer\n */\n\n/* eslint key-spacing: 0 */\n\n\n\n\n\n\n\n\nconst stdh0 = {\n  sunrise:          new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Angle(true, 0, 50, 0).rad(),\n  sunriseEnd:       new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Angle(true, 0, 18, 0).rad(),\n  twilight:         new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Angle(true, 6, 0, 0).rad(),\n  nauticalTwilight: new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Angle(true, 12, 0, 0).rad(),\n  night:            new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Angle(true, 18, 0, 0).rad(),\n  goldenHour:       new _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Angle(false, 6, 0, 0).rad()\n}\n\nconst stdh0Sunrise = (refraction) => _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].refraction(stdh0.sunrise, refraction)\nconst stdh0SunriseEnd = (refraction) => _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].refraction(stdh0.sunriseEnd, refraction)\nconst stdh0Twilight = (refraction) => _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].refraction(stdh0.twilight, refraction)\nconst stdh0NauticalTwilight = (refraction) => _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].refraction(stdh0.nauticalTwilight, refraction)\nconst stdh0Night = (refraction) => _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].refraction(stdh0.night, refraction)\nconst stdh0GoldenHour = (refraction) => _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].refraction(stdh0.goldenHour, refraction)\n\nclass Sunrise {\n  /**\n   * Computes time of sunrise, sunset for a given day `date` of an observer on earth given by latitude and longitude.\n   * Methods may return `undefined` instead of `julian.Calendar` for latitudes very near the poles.\n   * @param {julian.Calendar} date - calendar date\n   * @param {number} lat - latitude of observer in the range of (-89.6, 89.6)\n   * @param {number} lon - longitude of observer (measured positively westwards, New York = 40.7° lat, 74° lon)\n   * @param {number} [refraction] - optional refraction\n   */\n  constructor (date, lat, lon, refraction) {\n    this.date = date\n    this.jde = date.midnight().toJDE()\n    this.lat = _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].angleFromDeg(lat)\n    this.lon = _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].angleFromDeg(lon)\n    this.refraction = refraction\n  }\n\n  _calcNoon (jde) {\n    const etime = _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].secFromHourAngle(_eqtime_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].eSmart(jde))\n    const delta = _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].secFromHourAngle(this.lon)\n    const time = 43200 /* noon */ + delta - etime // in seconds\n    return _base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pmod(time / 86400, 86400)\n  }\n\n  _calcRiseOrSet (jde, h0, isSet) {\n    const etime = _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].secFromHourAngle(_eqtime_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].eSmart(jde))\n    const solarDec = _solar_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].apparentEquatorial(jde).dec\n    let ha = _rise_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hourAngle(this.lat, h0, solarDec)\n    if (isSet) ha = -ha\n    const delta = _sexagesimal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].secFromHourAngle(ha - this.lon)\n    const time = 43200 /* noon */ - delta - etime // in seconds\n    return time / 86400\n  }\n\n  _calcPolarDayNight (h0, isSet, step) {\n    let jde = this.jde\n    let t\n    let failCnt = 0\n    while (failCnt < 190) { // a bit more than days of half a year\n      jde += step\n      try {\n        t = this._calcRiseOrSet(jde, h0, isSet)\n        t = this._calcRiseOrSet(jde + t, h0, isSet)\n        break\n      } catch (e) {\n        t = undefined\n        failCnt++\n      }\n    }\n    if (t === undefined) {\n      return\n    }\n    return new _julian_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Calendar().fromJDE(jde + t)\n  }\n\n  _calc (h0, isSet) {\n    let t\n    const jde = this.jde\n    // calc 2times for higher accuracy\n    try {\n      t = this._calcRiseOrSet(jde, h0, isSet)\n      t = this._calcRiseOrSet(jde + t, h0, isSet)\n      return new _julian_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Calendar().fromJDE(jde + t)\n    } catch (e) {\n      let step = (isSet ? -1 : 1)\n      const doy = this.date.dayOfYear()\n      if ( // overlap with march, september equinoxes\n        (this.lat > 0 && (doy > 76 && doy < 267)) || // northern hemisphere\n        (this.lat < 0 && (doy < 83 || doy > 262)) // southern hemisphere\n      ) {\n        step = -step\n      }\n      return this._calcPolarDayNight(h0, isSet, step)\n    }\n  }\n\n  /**\n   * time of solar transit\n   * @return {julian.Calendar} time of noon\n   */\n  noon () {\n    const jde = this.jde\n    // calc 2times for higher accuracy\n    let t = this._calcNoon(jde + this.lon / (2 * Math.PI))\n    t = this._calcNoon(jde + t)\n    return new _julian_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Calendar().fromJDE(jde + t)\n  }\n\n  /**\n   * Solar limb appears over the easter horizon in the morning\n   * @return {julian.Calendar} time of sunrise\n   */\n  rise () {\n    return this._calc(stdh0Sunrise(this.refraction), false)\n  }\n\n  /**\n   * @return {julian.Calendar} time of sunset\n   * Solar limb disappears on the western horizon in the evening\n   */\n  set () {\n    return this._calc(stdh0Sunrise(this.refraction), true)\n  }\n\n  /**\n   * Solar limb is fully visible at the easter horizon\n   * @return {julian.Calendar} time of sunrise end\n   */\n  riseEnd () {\n    return this._calc(stdh0SunriseEnd(this.refraction), false)\n  }\n\n  /**\n   * Solar limb starts disappearing on the western horizon in the evening\n   * @return {julian.Calendar} time of sunset start\n   */\n  setStart () {\n    return this._calc(stdh0SunriseEnd(this.refraction), true)\n  }\n\n  /**\n   * Dawn, there is still enough light for objects to be distinguishable,\n   * @return {julian.Calendar} time of dawn\n   */\n  dawn () {\n    return this._calc(stdh0Twilight(this.refraction), false)\n  }\n\n  /**\n   * Dusk, there is still enough light for objects to be distinguishable\n   * Bright stars and planets are visible by naked eye\n   * @return {julian.Calendar} time of dusk\n   */\n  dusk () {\n    return this._calc(stdh0Twilight(this.refraction), true)\n  }\n\n  /**\n   * nautical dawn - Horizon gets visible by naked eye\n   * @return {julian.Calendar} time of nautical dawn\n   */\n  nauticalDawn () {\n    return this._calc(stdh0NauticalTwilight(this.refraction), false)\n  }\n\n  /**\n   * nautical dusk - Horizon is no longer visible by naked eye\n   * @return {julian.Calendar} time of nautical dusk\n   */\n  nauticalDusk () {\n    return this._calc(stdh0NauticalTwilight(this.refraction), true)\n  }\n\n  /**\n   * night starts - No sunlight illumination of the sky, such no intereferance\n   * with astronomical observations.\n   * @return {julian.Calendar} time of start of night\n   */\n  nightStart () {\n    return this._calc(stdh0Night(this.refraction), true)\n  }\n\n  /**\n   * night end - Sunlight starts illumination of the sky and interferes\n   * with astronomical observations.\n   * @return {julian.Calendar} time of end of night\n   */\n  nightEnd () {\n    return this._calc(stdh0Night(this.refraction), false)\n  }\n\n  /**\n   * Start of \"golden hour\" before sunset\n   * @return {julian.Calendar} time of start of golden hour\n   */\n  goldenHourStart () {\n    return this._calc(stdh0GoldenHour(this.refraction), true)\n  }\n\n  /**\n   * End of \"golden hour\" after sunrise\n   * @return {julian.Calendar} time of end of golden hour\n   */\n  goldenHourEnd () {\n    return this._calc(stdh0GoldenHour(this.refraction), false)\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Sunrise\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/astronomia/src/sunrise.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n    box-sizing: border-box;\n    margin: 0;\n}\n\n#beats-container {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 5rem;\n    font-weight: 900;\n    justify-content: center;\n    display: flex;\n    height: 100vh;\n    align-items: center;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,yCAAyC;IACzC,eAAe;IACf,gBAAgB;IAChB,uBAAuB;IACvB,aAAa;IACb,aAAa;IACb,mBAAmB;AACvB\",\"sourcesContent\":[\"* {\\n    box-sizing: border-box;\\n    margin: 0;\\n}\\n\\n#beats-container {\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 5rem;\\n    font-weight: 900;\\n    justify-content: center;\\n    display: flex;\\n    height: 100vh;\\n    align-items: center;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9zdHlsZXMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDMEc7QUFDakI7QUFDekYsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLE9BQU8saUZBQWlGLFlBQVksV0FBVyxNQUFNLEtBQUssWUFBWSxXQUFXLFlBQVksYUFBYSxXQUFXLFVBQVUsWUFBWSw2QkFBNkIsNkJBQTZCLGdCQUFnQixHQUFHLHNCQUFzQixnREFBZ0Qsc0JBQXNCLHVCQUF1Qiw4QkFBOEIsb0JBQW9CLG9CQUFvQiwwQkFBMEIsR0FBRyxtQkFBbUI7QUFDbGdCO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzLmNzcz9lOWFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIG1hcmdpbjogMDtcbn1cblxuI2JlYXRzLWNvbnRhaW5lciB7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSx5Q0FBeUM7SUFDekMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLGFBQWE7SUFDYixtQkFBbUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuI2JlYXRzLWNvbnRhaW5lciB7XFxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/styles.css\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/sourceMaps.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertBySelector.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertStyleElement.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleDomAPI.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzPzFkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleTagTransform.js\n");

/***/ }),

/***/ "./node_modules/suncalc/suncalc.js":
/*!*****************************************!*\
  !*** ./node_modules/suncalc/suncalc.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/*\n (c) 2011-2015, Vladimir Agafonkin\n SunCalc is a JavaScript library for calculating sun/moon position and light phases.\n https://github.com/mourner/suncalc\n*/\n\n(function () { 'use strict';\n\n// shortcuts for easier to read formulas\n\nvar PI   = Math.PI,\n    sin  = Math.sin,\n    cos  = Math.cos,\n    tan  = Math.tan,\n    asin = Math.asin,\n    atan = Math.atan2,\n    acos = Math.acos,\n    rad  = PI / 180;\n\n// sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n\n\n// date/time constants and conversions\n\nvar dayMs = 1000 * 60 * 60 * 24,\n    J1970 = 2440588,\n    J2000 = 2451545;\n\nfunction toJulian(date) { return date.valueOf() / dayMs - 0.5 + J1970; }\nfunction fromJulian(j)  { return new Date((j + 0.5 - J1970) * dayMs); }\nfunction toDays(date)   { return toJulian(date) - J2000; }\n\n\n// general calculations for position\n\nvar e = rad * 23.4397; // obliquity of the Earth\n\nfunction rightAscension(l, b) { return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l)); }\nfunction declination(l, b)    { return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l)); }\n\nfunction azimuth(H, phi, dec)  { return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi)); }\nfunction altitude(H, phi, dec) { return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H)); }\n\nfunction siderealTime(d, lw) { return rad * (280.16 + 360.9856235 * d) - lw; }\n\nfunction astroRefraction(h) {\n    if (h < 0) // the following formula works for positive altitudes only.\n        h = 0; // if h = -0.08901179 a div/0 would occur.\n\n    // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n    // 1.02 / tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to rad:\n    return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\n}\n\n// general sun calculations\n\nfunction solarMeanAnomaly(d) { return rad * (357.5291 + 0.98560028 * d); }\n\nfunction eclipticLongitude(M) {\n\n    var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)), // equation of center\n        P = rad * 102.9372; // perihelion of the Earth\n\n    return M + C + P + PI;\n}\n\nfunction sunCoords(d) {\n\n    var M = solarMeanAnomaly(d),\n        L = eclipticLongitude(M);\n\n    return {\n        dec: declination(L, 0),\n        ra: rightAscension(L, 0)\n    };\n}\n\n\nvar SunCalc = {};\n\n\n// calculates sun position for a given date and latitude/longitude\n\nSunCalc.getPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c  = sunCoords(d),\n        H  = siderealTime(d, lw) - c.ra;\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: altitude(H, phi, c.dec)\n    };\n};\n\n\n// sun times configuration (angle, morning name, evening name)\n\nvar times = SunCalc.times = [\n    [-0.833, 'sunrise',       'sunset'      ],\n    [  -0.3, 'sunriseEnd',    'sunsetStart' ],\n    [    -6, 'dawn',          'dusk'        ],\n    [   -12, 'nauticalDawn',  'nauticalDusk'],\n    [   -18, 'nightEnd',      'night'       ],\n    [     6, 'goldenHourEnd', 'goldenHour'  ]\n];\n\n// adds a custom time to the times config\n\nSunCalc.addTime = function (angle, riseName, setName) {\n    times.push([angle, riseName, setName]);\n};\n\n\n// calculations for sun times\n\nvar J0 = 0.0009;\n\nfunction julianCycle(d, lw) { return Math.round(d - J0 - lw / (2 * PI)); }\n\nfunction approxTransit(Ht, lw, n) { return J0 + (Ht + lw) / (2 * PI) + n; }\nfunction solarTransitJ(ds, M, L)  { return J2000 + ds + 0.0053 * sin(M) - 0.0069 * sin(2 * L); }\n\nfunction hourAngle(h, phi, d) { return acos((sin(h) - sin(phi) * sin(d)) / (cos(phi) * cos(d))); }\nfunction observerAngle(height) { return -2.076 * Math.sqrt(height) / 60; }\n\n// returns set time for the given sun altitude\nfunction getSetJ(h, lw, phi, dec, n, M, L) {\n\n    var w = hourAngle(h, phi, dec),\n        a = approxTransit(w, lw, n);\n    return solarTransitJ(a, M, L);\n}\n\n\n// calculates sun times for a given date, latitude/longitude, and, optionally,\n// the observer height (in meters) relative to the horizon\n\nSunCalc.getTimes = function (date, lat, lng, height) {\n\n    height = height || 0;\n\n    var lw = rad * -lng,\n        phi = rad * lat,\n\n        dh = observerAngle(height),\n\n        d = toDays(date),\n        n = julianCycle(d, lw),\n        ds = approxTransit(0, lw, n),\n\n        M = solarMeanAnomaly(ds),\n        L = eclipticLongitude(M),\n        dec = declination(L, 0),\n\n        Jnoon = solarTransitJ(ds, M, L),\n\n        i, len, time, h0, Jset, Jrise;\n\n\n    var result = {\n        solarNoon: fromJulian(Jnoon),\n        nadir: fromJulian(Jnoon - 0.5)\n    };\n\n    for (i = 0, len = times.length; i < len; i += 1) {\n        time = times[i];\n        h0 = (time[0] + dh) * rad;\n\n        Jset = getSetJ(h0, lw, phi, dec, n, M, L);\n        Jrise = Jnoon - (Jset - Jnoon);\n\n        result[time[1]] = fromJulian(Jrise);\n        result[time[2]] = fromJulian(Jset);\n    }\n\n    return result;\n};\n\n\n// moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n\nfunction moonCoords(d) { // geocentric ecliptic coordinates of the moon\n\n    var L = rad * (218.316 + 13.176396 * d), // ecliptic longitude\n        M = rad * (134.963 + 13.064993 * d), // mean anomaly\n        F = rad * (93.272 + 13.229350 * d),  // mean distance\n\n        l  = L + rad * 6.289 * sin(M), // longitude\n        b  = rad * 5.128 * sin(F),     // latitude\n        dt = 385001 - 20905 * cos(M);  // distance to the moon in km\n\n    return {\n        ra: rightAscension(l, b),\n        dec: declination(l, b),\n        dist: dt\n    };\n}\n\nSunCalc.getMoonPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c = moonCoords(d),\n        H = siderealTime(d, lw) - c.ra,\n        h = altitude(H, phi, c.dec),\n        // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n        pa = atan(sin(H), tan(phi) * cos(c.dec) - sin(c.dec) * cos(H));\n\n    h = h + astroRefraction(h); // altitude correction for refraction\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: h,\n        distance: c.dist,\n        parallacticAngle: pa\n    };\n};\n\n\n// calculations for illumination parameters of the moon,\n// based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n// Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n\nSunCalc.getMoonIllumination = function (date) {\n\n    var d = toDays(date || new Date()),\n        s = sunCoords(d),\n        m = moonCoords(d),\n\n        sdist = 149598000, // distance from Earth to Sun in km\n\n        phi = acos(sin(s.dec) * sin(m.dec) + cos(s.dec) * cos(m.dec) * cos(s.ra - m.ra)),\n        inc = atan(sdist * sin(phi), m.dist - sdist * cos(phi)),\n        angle = atan(cos(s.dec) * sin(s.ra - m.ra), sin(s.dec) * cos(m.dec) -\n                cos(s.dec) * sin(m.dec) * cos(s.ra - m.ra));\n\n    return {\n        fraction: (1 + cos(inc)) / 2,\n        phase: 0.5 + 0.5 * inc * (angle < 0 ? -1 : 1) / Math.PI,\n        angle: angle\n    };\n};\n\n\nfunction hoursLater(date, h) {\n    return new Date(date.valueOf() + h * dayMs / 24);\n}\n\n// calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n\nSunCalc.getMoonTimes = function (date, lat, lng, inUTC) {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);\n    else t.setHours(0, 0, 0, 0);\n\n    var hc = 0.133 * rad,\n        h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n        h1, h2, rise, set, a, b, xe, ye, d, roots, x1, x2, dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n        h1 = SunCalc.getMoonPosition(hoursLater(t, i), lat, lng).altitude - hc;\n        h2 = SunCalc.getMoonPosition(hoursLater(t, i + 1), lat, lng).altitude - hc;\n\n        a = (h0 + h2) / 2 - h1;\n        b = (h2 - h0) / 2;\n        xe = -b / (2 * a);\n        ye = (a * xe + b) * xe + h1;\n        d = b * b - 4 * a * h1;\n        roots = 0;\n\n        if (d >= 0) {\n            dx = Math.sqrt(d) / (Math.abs(a) * 2);\n            x1 = xe - dx;\n            x2 = xe + dx;\n            if (Math.abs(x1) <= 1) roots++;\n            if (Math.abs(x2) <= 1) roots++;\n            if (x1 < -1) x1 = x2;\n        }\n\n        if (roots === 1) {\n            if (h0 < 0) rise = i + x1;\n            else set = i + x1;\n\n        } else if (roots === 2) {\n            rise = i + (ye < 0 ? x2 : x1);\n            set = i + (ye < 0 ? x1 : x2);\n        }\n\n        if (rise && set) break;\n\n        h0 = h2;\n    }\n\n    var result = {};\n\n    if (rise) result.rise = hoursLater(t, rise);\n    if (set) result.set = hoursLater(t, set);\n\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n\n    return result;\n};\n\n\n// export as Node module / AMD module / browser variable\nif (true) module.exports = SunCalc;\nelse // removed by dead control flow\n{}\n\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/suncalc/suncalc.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n/* harmony import */ var suncalc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! suncalc */ \"./node_modules/suncalc/suncalc.js\");\n/* harmony import */ var suncalc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(suncalc__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var astronomia__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! astronomia */ \"./node_modules/astronomia/src/index.js\");\n\n\n\n// --- Helpers ---\n\nfunction getHoloceneYear(date) {\n    return date.getUTCFullYear() + 9700;\n}\n\nfunction marchEquinoxJDE(year) {\n  const Y = (year - 2000) / 1000;\n\n  return (\n    2451623.80984 +\n    365242.37404 * Y +\n    0.05169 * Y ** 2 -\n    0.00411 * Y ** 3 -\n    0.00057 * Y ** 4\n  );\n}\n\nfunction getSpringEquinox(holoceneYear) {\n  const gregorianYear = holoceneYear - 9700;\n  const jde = marchEquinoxJDE(gregorianYear);\n  const equinoxDateUTC = astronomia__WEBPACK_IMPORTED_MODULE_2__.julian.JDEToDate(jde);\n\n  // Shift equinox to the previous 23:00 UTC for day counting anchor\n  const anchorTime = new Date(equinoxDateUTC.getTime());\n  anchorTime.setUTCHours(23, 0, 0, 0);\n  if (equinoxDateUTC.getUTCHours() < 23) {\n    anchorTime.setUTCDate(anchorTime.getUTCDate() - 1);\n  }\n  return anchorTime;\n}\n\nfunction getDaysSinceEquinox(now, equinox) {\n    const diff = now - equinox;\n    return Math.floor(diff / 86400000) + 1;\n}\n\nfunction getLunationSinceEquinox(now, equinox) {\n  const lunarCycle = 29.53059 * 86400000;\n  const firstNewMoonAfterEquinox = getNextNewMoon(equinox);\n  if (now < firstNewMoonAfterEquinox) {\n    // If we're before first new moon, lunation is 0 or 1 depending on your system\n    return { lunation: 1, percent: \"00\" };\n  }\n  const diff = now - firstNewMoonAfterEquinox;\n  const lunation = Math.floor(diff / lunarCycle) + 1;\n  const phaseProgress = (diff % lunarCycle) / lunarCycle;\n  return {\n    lunation,\n    percent: phaseProgress.toFixed(2).slice(2)\n  };\n}\n\nfunction getNextNewMoon(afterDate) {\n  let date = new Date(afterDate.getTime() + 1); // just after equinox\n  const step = 60 * 60 * 1000; // 1 hour in ms\n  const maxHours = 60 * 24 * 60; // search max 60 days in hours\n\n  for (let i = 0; i < maxHours; i++) {\n    const phase = suncalc__WEBPACK_IMPORTED_MODULE_1___default().getMoonIllumination(date).phase;\n    if (phase < 0.01 || phase > 0.99) {\n      // Found approximate new moon time, now try to refine by checking +/- 1 hour to find closest time\n      let bestDate = date;\n      let bestDiff = Math.min(phase, 1 - phase); // distance from 0 or 1\n\n      for (let j = -1; j <= 1; j++) {\n        const testDate = new Date(date.getTime() + j * step);\n        const testPhase = suncalc__WEBPACK_IMPORTED_MODULE_1___default().getMoonIllumination(testDate).phase;\n        const diff = Math.min(testPhase, 1 - testPhase);\n        if (diff < bestDiff) {\n          bestDiff = diff;\n          bestDate = testDate;\n        }\n      }\n      return bestDate;\n    }\n    date = new Date(date.getTime() + step);\n  }\n  // Fallback: just return date after 60 days if no new moon found\n  return date;\n}\n\nfunction getBeats(now) {\n    const msOfDay = now.getUTCHours() * 3600000 +\n        now.getUTCMinutes() * 60000 +\n        now.getUTCSeconds() * 1000 +\n        now.getUTCMilliseconds();\n    const bmtOffset = 3600000; // UTC+1\n    const totalMs = (msOfDay + bmtOffset) % 86400000;\n    const beats = totalMs / 86400;\n    return `@${beats.toFixed(2).padStart(6, '0')}`;\n}\n\nfunction getNextSunrise(now, lat, lon) {\n    for (let i = 1; i <= 3; i++) {\n        const future = new Date(now.getTime() + i * 86400000);\n        const times = suncalc__WEBPACK_IMPORTED_MODULE_1___default().getTimes(future, lat, lon);\n        if (times.sunrise) return times.sunrise;\n    }\n    return new Date(now.getTime() + 86400000); // fallback\n}\n\nfunction getPreviousSunset(now, lat, lon) {\n    for (let i = 1; i <= 3; i++) {\n        const past = new Date(now.getTime() - i * 86400000);\n        const times = suncalc__WEBPACK_IMPORTED_MODULE_1___default().getTimes(past, lat, lon);\n        if (times.sunset) return times.sunset;\n    }\n    return new Date(now.getTime() - 86400000); // fallback\n}\n\nfunction getSolarPercent(now, lat, lon) {\n    if (lat == null || lon == null) return 'S??';\n    const times = suncalc__WEBPACK_IMPORTED_MODULE_1___default().getTimes(now, lat, lon);\n    const sunrise = times.sunrise;\n    const sunset = times.sunset;\n\n    if (!sunrise || !sunset || isNaN(sunrise.getTime()) || isNaN(sunset.getTime())) return 'S??';\n\n    let isDay = now >= sunrise && now < sunset;\n    let start, end;\n\n    if (isDay) {\n        start = sunrise;\n        end = sunset;\n    } else if (now < sunrise) {\n        start = getPreviousSunset(now, lat, lon);\n        end = sunrise;\n    } else {\n        start = sunset;\n        end = getNextSunrise(now, lat, lon);\n    }\n\n    const percent = ((now - start) / (end - start)) * 100;\n    return `${isDay ? 'S' : 'N'}${Math.floor(percent).toString().padStart(2, '0')}`;\n}\n\n// --- Main Clock Function ---\n\nfunction updateClock(userLocation) {\n    const now = new Date();\n    const holoceneYear = getHoloceneYear(now);\n    const equinox = getSpringEquinox(holoceneYear);\n    const daysSinceEquinox = getDaysSinceEquinox(now, equinox);\n    const moon = getLunationSinceEquinox(now, equinox);\n    const beats = getBeats(now);\n    const solar = getSolarPercent(now, userLocation?.latitude, userLocation?.longitude);\n\n    const clockText = `H${holoceneYear} L${moon.lunation}.${moon.percent} D${daysSinceEquinox} ${beats} ${solar}`;\n    document.querySelector(\"#beats-container\").textContent = clockText;\n}\n\nfunction convertGregorianToCustom(gregorianString, lat = null, lon = null) {\n    const now = new Date(gregorianString);\n    if (isNaN(now)) {\n        console.error(\"Invalid date input.\");\n        return null;\n    }\n\n    const holoceneYear = getHoloceneYear(now);\n    const equinox = getSpringEquinox(holoceneYear);\n    const daysSinceEquinox = getDaysSinceEquinox(now, equinox);\n    const moon = getLunationSinceEquinox(now, equinox);\n    const beats = getBeats(now);\n    const solar = getSolarPercent(now, lat, lon);\n\n    const clockText = `H${holoceneYear} L${moon.lunation}.${moon.percent} D${daysSinceEquinox} ${beats} ${solar}`;\n    console.log(clockText);\n    return clockText;\n}\n\n// --- Run with Geolocation ---\n\nif (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n        (position) => {\n            const userLocation = {\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude\n            };\n            updateClock(userLocation);\n            setInterval(() => updateClock(userLocation), 864);\n        },\n        (error) => {\n            console.warn(\"Geolocation failed:\", error.message);\n            updateClock(null);\n            setInterval(() => updateClock(null), 864);\n        }\n    );\n} else {\n    console.warn(\"Geolocation not supported.\");\n    updateClock(null);\n    setInterval(() => updateClock(null), 864);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzLmNzcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxNQUErRjtBQUMvRixNQUFxRjtBQUNyRixNQUE0RjtBQUM1RixNQUErRztBQUMvRyxNQUF3RztBQUN4RyxNQUF3RztBQUN4RyxNQUFvRztBQUNwRztBQUNBOztBQUVBOztBQUVBLDRCQUE0QixxR0FBbUI7QUFDL0Msd0JBQXdCLGtIQUFhO0FBQ3JDLGlCQUFpQix1R0FBYTtBQUM5QixpQkFBaUIsK0ZBQU07QUFDdkIsNkJBQTZCLHNHQUFrQjs7QUFFL0MsYUFBYSwwR0FBRyxDQUFDLHVGQUFPOzs7O0FBSThDO0FBQ3RFLE9BQU8saUVBQWUsdUZBQU8sSUFBSSx1RkFBTyxVQUFVLHVGQUFPLG1CQUFtQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy5jc3M/NDRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/styles.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;